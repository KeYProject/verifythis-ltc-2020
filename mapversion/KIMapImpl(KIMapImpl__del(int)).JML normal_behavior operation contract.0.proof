\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 16 14:08:37 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Mon Dec 16 14:08:37 CET 2019
contract=KIMapImpl[KIMapImpl\\:\\:del(int)].JML normal_behavior operation contract.0
name=KIMapImpl[KIMapImpl\\:\\:del(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "weigl" ) (keyVersion "5c71d010aea2ef9b4a159569bd7f9d3d7b0f4027"))

(autoModeTime "3037")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "id,self,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "exLeft" (formula "5") (inst "sk=i_0"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "eqSymm" (formula "10") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,1,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "10") (term "0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "10") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "polySimp_sepNegMonomial" (formula "10") (term "0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "10") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "nnf_imp2or" (formula "10") (term "0,0,0,1,1,0,0,0,1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Class_invariant_axiom_for_KIMapImpl" (formula "8") (inst "j=j") (inst "i=i") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "11") (term "0,1,0,0"))
(rule "eqSymm" (formula "14"))
(rule "eqSymm" (formula "8"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "10") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "10"))
(rule "polySimp_mulLiterals" (formula "10") (term "0"))
(rule "polySimp_elimOne" (formula "10") (term "0"))
(rule "nnf_imp2or" (formula "11") (term "0,0"))
(rule "nnf_notAnd" (formula "11") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "11") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
(rule "commute_or_2" (formula "11") (term "0,0,0"))
(rule "methodBodyExpand" (formula "16") (term "1") (newnames "heapBefore_del,savedHeapBefore_del"))
 (builtin "One Step Simplification" (formula "16"))
(rule "variableDeclarationAssign" (formula "16") (term "1"))
(rule "variableDeclaration" (formula "16") (term "1") (newnames "pos"))
 (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_posOfId,result,exc_0") (contract "KIMapImpl[KIMapImpl::posOfId(int)].JML normal_behavior operation contract.0"))
(branch "Post (posOfId)"
    (builtin "One Step Simplification" (formula "12"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1"))
   (rule "polySimp_addComm1" (formula "15") (term "0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
   (rule "assignment" (formula "21") (term "1"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
   (rule "mul_literals" (formula "14") (term "1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "15") (term "0,1,1"))
   (rule "nnf_imp2or" (formula "14") (term "0,1"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,1"))
   (rule "Class_invariant_axiom_for_KIMapImpl" (formula "16") (inst "j=j") (inst "i=i") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "17"))
   (rule "eqSymm" (formula "19") (term "0,1,0,0"))
   (rule "eqSymm" (formula "16"))
   (rule "eqSymm" (formula "19"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "17"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
   (rule "polySimp_elimOne" (formula "16") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
   (rule "commute_and" (formula "15") (term "1"))
   (rule "commute_or_2" (formula "16") (term "0,0,0"))
   (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
   (rule "greater_equal_than_comparison_simple" (formula "20") (term "1"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "arrayLengthNotNegative" (formula "8") (term "1"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "ifSplit" (formula "22"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "17") (term "0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
      (rule "leq_literals" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "postdecrement_attribute" (formula "22") (term "1") (inst "#v=k"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "k"))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "eval_order_access4" (formula "22") (term "1") (inst "#v1=x") (inst "#v0=k_1"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "k_1"))
      (rule "assignment" (formula "22") (term "1"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_1"))
      (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x_2"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
      (rule "remove_parentheses_right" (formula "22") (term "1"))
      (rule "compound_subtraction_1" (formula "22") (term "1") (inst "#v=x_3"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_3"))
      (rule "assignment_read_attribute" (formula "22"))
      (branch "Normal Execution (k != null)"
          (builtin "One Step Simplification" (formula "22"))
         (rule "assignmentSubtractionInt" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "translateJavaSubInt" (formula "22") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "22") (term "0,1,0"))
         (rule "mul_literals" (formula "22") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "22") (term "1"))
         (rule "assignment" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "assignment_write_attribute" (formula "22"))
         (branch "Normal Execution (k_1 != null)"
             (builtin "One Step Simplification" (formula "22"))
            (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_4"))
            (rule "compound_assignment_3_nonsimple" (formula "22") (term "1"))
            (rule "ifElseUnfold" (formula "22") (term "1") (inst "#boolv=x_5"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_5"))
            (rule "compound_assignment_2" (formula "22") (term "1") (inst "#v=x_6"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_6"))
            (rule "compound_greater_than_comparison_1" (formula "22") (term "1") (inst "#v0=x_7"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_7"))
            (rule "assignment_read_attribute_this" (formula "22"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=KIMapImpl_count_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "greater_than_comparison_simple" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_gtToGeq" (formula "22") (term "0,0,1,0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "1,0,0,1,0"))
            (rule "compound_assignment_1_new" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifElseSplit" (formula "23"))
            (branch "if x_5 true"
                (builtin "One Step Simplification" (formula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "ifSkipThen" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_geqRight" (formula "19"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "assignment" (formula "24") (term "1"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "9") (term "0,0"))
               (rule "mul_literals" (formula "9") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "0,0"))
               (rule "add_zero_left" (formula "9") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "times_zero_2" (formula "9") (term "1"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "9"))
               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "8"))
               (rule "leq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "8"))
               (rule "add_zero_right" (formula "10") (term "1"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "8"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "9"))
               (rule "leq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "add_zero_left" (formula "17") (term "0"))
               (rule "inEqSimp_invertInEq1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "times_zero_2" (formula "17") (term "1"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
               (rule "applyEq" (formula "25") (term "1,3,0,1,0") (ifseqformula "9"))
               (rule "add_literals" (formula "25") (term "3,0,1,0"))
               (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "9"))
               (rule "add_literals" (formula "15") (term "1"))
               (rule "applyEq" (formula "16") (term "1,1,0,0,0,0") (ifseqformula "9"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0"))
               (rule "add_literals" (formula "19") (term "0,0"))
               (rule "add_zero_left" (formula "19") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
               (rule "leq_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "15"))
               (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "2"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "tryEmpty" (formula "19") (term "1"))
               (rule "emptyModality" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "eqSymm" (formula "19") (term "1,0,0,1"))
               (rule "polySimp_homoEq" (formula "19") (term "0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,1,0,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,1,1,0,1,1,0,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,0,1,0,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "8"))
               (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
               (rule "applyEq" (formula "19") (term "0,1,0,0,0,0") (ifseqformula "8"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0"))
               (rule "pullOutSelect" (formula "19") (term "1,1,1,0,0,0,0,1,0") (inst "selectSK=KIMapImpl_count_1"))
               (rule "applyEq" (formula "20") (term "1,1,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "20") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,0,0,1,0"))
               (rule "applyEqReverse" (formula "20") (term "1,1,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "1"))
               (rule "add_zero_right" (formula "20") (term "1,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Class_invariant_axiom_for_KIMapImpl" (formula "19") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "replaceKnownSelect_taclet00000_2" (formula "19") (term "1,0,1,0,1,1,0"))
               (rule "replaceKnownSelect_taclet00000_2" (formula "19") (term "0,1,1,0,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_3" (formula "19") (term "1,0,1,0,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_3" (formula "19") (term "0,1,1,0,1,1,0"))
               (rule "replaceKnownSelect_taclet00000_2" (formula "19") (term "1,1,0,0,0,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_3" (formula "19") (term "1,1,0,0,0,1,1,1,0"))
               (rule "leq_literals" (formula "19") (term "0,1,0,1,1,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "eqSymm" (formula "19") (term "0,1,0,0,1,1,0"))
               (rule "eqSymm" (formula "19") (term "0,1,0,0,1,1,1,0"))
               (rule "eqSymm" (formula "19") (term "1,0,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "replace_known_right" (formula "19") (term "0,0,0,0,0,0,1,1,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,1,1,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,1,0,1,0,0,1,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,0,1,0,0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0,0,1,1,0"))
               (rule "replace_known_left" (formula "19") (term "1,0,0,0,1,1,0") (ifseqformula "11"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0,1,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,0,1,1,0"))
               (rule "replace_known_right" (formula "19") (term "0,0,0,0,1,1,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,0,1,0,0,1,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1,0,0,1,1,1,0"))
               (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,1,1,0"))
               (rule "replace_known_right" (formula "19") (term "0,0,0,1,1,0") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0,1,1,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0,0,1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,1,1,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,0,0,0,1,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,1,1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "19") (term "1,1,0,0,0,1,1,1,0"))
               (rule "inEqSimp_subsumption1" (formula "19") (term "0,1,1,0") (ifseqformula "12"))
               (rule "leq_literals" (formula "19") (term "0,0,1,1,0"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "nnf_imp2or" (formula "19") (term "0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "19") (term "0,1,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
               (rule "andRight" (formula "19"))
               (branch "Case 1"
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "notRight" (formula "19"))
                     (rule "exLeft" (formula "1") (inst "sk=i_1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                        (rule "allRight" (formula "19") (inst "sk=e_0"))
                        (rule "allRight" (formula "19") (inst "sk=k_0"))
                        (rule "orRight" (formula "19"))
                        (rule "eqSymm" (formula "20") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "20") (term "1,1,0,1"))
                        (rule "eqSymm" (formula "19"))
                        (rule "equiv_right" (formula "20"))
                        (branch "Case 1"
                           (rule "exLeft" (formula "1") (inst "sk=i_1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                           (rule "close" (formula "22") (ifseqformula "2"))
                        )
                        (branch "Case 2"
                           (rule "exLeft" (formula "1") (inst "sk=i_1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "19") (inst "sk=j_0"))
                        (rule "allRight" (formula "19") (inst "sk=i_1"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "notRight" (formula "21"))
                        (rule "orRight" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "19") (inst "sk=f_0"))
                  (rule "allRight" (formula "19") (inst "sk=o_0"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_5 false"
                (builtin "One Step Simplification" (formula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
               (rule "leq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "compound_inequality_comparison_2" (formula "23") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_8"))
               (rule "assignment" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "variableDeclarationAssign" (formula "23") (term "1"))
               (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_9"))
               (rule "assignment_read_attribute_this" (formula "23"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "0,1,0"))
               (rule "inequality_comparison_simple" (formula "23") (term "1"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "polySimp_homoEq" (formula "23") (term "0,0,1,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
               (rule "blockEmpty" (formula "23") (term "1"))
               (rule "polySimp_sepPosMonomial" (formula "23") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
               (rule "ifSplit" (formula "23"))
               (branch "if x_4 true"
                   (builtin "One Step Simplification" (formula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "eval_order_array_access1" (formula "24") (term "1") (inst "#v0=x_arr"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr"))
                  (rule "assignment_read_attribute_this" (formula "24"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                  (rule "eval_order_array_access3" (formula "24") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_1"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_1"))
                  (rule "assignment" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_10"))
                  (rule "assignment" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_11"))
                  (rule "eval_order_array_access4" (formula "24") (term "1") (inst "#v0=x_arr_2"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_2"))
                  (rule "assignment_read_attribute_this" (formula "24"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                  (rule "eval_order_array_access5" (formula "24") (term "1") (inst "#v1=x_12") (inst "#ar1=x_arr_3"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_3"))
                  (rule "assignment" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "variableDeclarationAssign" (formula "24") (term "1"))
                  (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_12"))
                  (rule "assignment_read_attribute_this" (formula "24"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "replaceKnownSelect_taclet0000_0" (formula "24") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "24") (term "0,1,0"))
                  (rule "assignment_array2" (formula "24"))
                  (branch "Normal Execution (x_arr_3 != null)"
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                     (rule "assignment_to_primitive_array_component" (formula "24"))
                     (branch "Normal Execution (x_arr_1 != null)"
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "eval_order_array_access1" (formula "24") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_4"))
                        (rule "assignment_read_attribute_this" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "eval_order_array_access3" (formula "24") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_5"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_5"))
                        (rule "assignment" (formula "24") (term "1"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_13"))
                        (rule "assignment" (formula "24") (term "1"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_14"))
                        (rule "eval_order_array_access4" (formula "24") (term "1") (inst "#v0=x_arr_6"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_6"))
                        (rule "assignment_read_attribute_this" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "eval_order_array_access5" (formula "24") (term "1") (inst "#v1=x_15") (inst "#ar1=x_arr_7"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_7"))
                        (rule "assignment" (formula "24") (term "1"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "variableDeclarationAssign" (formula "24") (term "1"))
                        (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_15"))
                        (rule "assignment_read_attribute_this" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "dismissNonSelectedField" (formula "24") (term "0,1,0"))
                        (rule "replaceKnownSelect_taclet0000_0" (formula "24") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "24") (term "0,1,0"))
                        (rule "assignment_array2" (formula "24"))
                        (branch "Normal Execution (x_arr_7 != null)"
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "assignment_to_primitive_array_component" (formula "24"))
                           (branch "Normal Execution (x_arr_5 != null)"
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "19"))
                              (rule "polySimp_addAssoc" (formula "17") (term "1"))
                              (rule "add_literals" (formula "17") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "methodCallEmpty" (formula "23") (term "1"))
                              (rule "tryEmpty" (formula "23") (term "1"))
                              (rule "emptyModality" (formula "23") (term "1"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_homoEq" (formula "23") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "1,1,1,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "0,1,1,0,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,1,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "23") (term "0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,1,0,1,1,0,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,0"))
                              (rule "Class_invariant_axiom_for_KIMapImpl" (formula "23") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "0,1,0,0,1,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "1,0,1,0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "1,0,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,0,1,1,0"))
                              (rule "replaceKnownSelect_taclet0000_0" (formula "23") (term "0,1,1,0,1,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "23") (term "0,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "23") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,1,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "23") (term "0,0,0,0,0,1,1,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "dismissNonSelectedField" (formula "23") (term "1,0,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "23") (term "0,1,0,0,1,1,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "23") (term "0,0,1,1,0"))
                              (rule "replace_known_left" (formula "23") (term "0,0,1,1,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,1,1,0"))
                              (rule "times_zero_2" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "1,0,1,1,0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0,1,0,1,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0,1,1,0"))
                              (rule "qeq_literals" (formula "23") (term "0,1,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "23") (term "0,0,1,1,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "nnf_imp2or" (formula "23") (term "0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "andRight" (formula "23"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "23"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "23"))
                                    (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, KIMapImpl::$count))"))
                                    (rule "eqSymm" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,1,0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=result"))
                                    (rule "eqSymm" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                    (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "23"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=i_1"))
                                    (rule "eqSymm" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "result = i_1 TRUE"
                                       (rule "close" (formula "25") (ifseqformula "4"))
                                    )
                                    (branch "result = i_1 FALSE"
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "3"))
                                       (rule "allLeft" (formula "19") (inst "t=result"))
                                       (rule "eqSymm" (formula "19") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                                       (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "19") (inst "t=i_0"))
                                       (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "11"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "19"))
                                       (rule "times_zero_1" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "allLeft" (formula "20") (inst "t=i_1"))
                                       (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_strengthen0" (formula "20") (ifseqformula "26"))
                                       (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "20"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0"))
                                       (rule "qeq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "false_right" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "allLeft" (formula "22") (inst "t=i_1"))
                                       (rule "eqSymm" (formula "22") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0"))
                                       (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "22") (inst "t=result"))
                                       (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "27"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "23"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "23") (inst "sk=e_0"))
                                       (rule "allRight" (formula "23") (inst "sk=k_0"))
                                       (rule "orRight" (formula "23"))
                                       (rule "eqSymm" (formula "24") (term "1,1,0,0"))
                                       (rule "eqSymm" (formula "24") (term "1,1,0,1"))
                                       (rule "eqSymm" (formula "23"))
                                       (rule "equiv_right" (formula "24"))
                                       (branch "Case 1"
                                          (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "nnf_ex2all" (formula "28"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "allLeft" (formula "20") (inst "t=result"))
                                          (rule "eqSymm" (formula "20") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "20") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "allLeft" (formula "22") (inst "t=i_0"))
                                          (rule "eqSymm" (formula "22") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0") (ifseqformula "14"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "22") (inst "t=result"))
                                          (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "27"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "20"))
                                          (rule "applyEq" (formula "1") (term "0,2,0,0,0,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "1") (term "0,2,0,0,0,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "22"))
                                          (rule "applyEq" (formula "28") (term "0,2,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "21") (term "1,1,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "1") (term "0,2,0,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "1") (term "0,2,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "19"))
                                          (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,0"))
                                          (rule "times_zero_1" (formula "19") (term "0"))
                                          (rule "qeq_literals" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,0"))
                                          (rule "times_zero_1" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "allLeft" (formula "20") (inst "t=i_1"))
                                          (rule "eqSymm" (formula "20") (term "0,1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                          (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "20") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "allLeft" (formula "19") (inst "t=i_1"))
                                          (rule "applyEq" (formula "19") (term "0,0,1") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "19") (term "0,1"))
                                          (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "29"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "allLeft" (formula "1") (inst "t=i_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "0,0,1") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, KIMapImpl::$count))"))
                                          (rule "eqSymm" (formula "22") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0,0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,1,0,0,0"))
                                          (rule "leq_literals" (formula "22") (term "1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "22") (inst "t=i_0"))
                                          (rule "eqSymm" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                          (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "15"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "cut_direct" (formula "1") (term "0,0"))
                                          (branch "CUT: self.keys[-1 + self.count] = e_0 TRUE"
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "2") (term "3,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "3,0,0,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
                                             (rule "allLeft" (formula "22") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "22"))
                                             (rule "applyEq" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "2") (term "1,1,1,0,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "1,1,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,1,1,0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "1,1,0,0,0"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                             (rule "add_literals" (formula "19") (term "0,1"))
                                             (rule "applyEq" (formula "2") (term "1,3,0,0,0,0,0,1,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "3,0,0,0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "2") (term "0,3,0,0,0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "3,0,0,0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "2") (term "1,0,2,3,0,0,0,1,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,2,3,0,0,0,1,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,2,3,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,2,3,0,0,0,1,0"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "0,0"))
                                             (rule "applyEq" (formula "27") (term "1,0,2,0") (ifseqformula "4"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,2,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,2,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,2,0"))
                                             (rule "close" (formula "27") (ifseqformula "7"))
                                          )
                                          (branch "CUT: self.keys[-1 + self.count] = e_0 FALSE"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "0,0,1,0") (inst "selectSK=arr_3"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "0,1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                             (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "3") (term "0,1"))
                                             (rule "eqSymm" (formula "2") (term "0,0"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "eqSymm" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "simplifySelectOfStore" (formula "2"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "8"))
                                             (rule "commute_or" (formula "3") (term "0"))
                                             (rule "commute_or_2" (formula "3"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "i_1 = i_0 TRUE"
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqRigid" (formula "21") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "4") (term "0,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                                                (rule "close" (formula "31") (ifseqformula "4"))
                                             )
                                             (branch "i_1 = i_0 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                                (rule "add_literals" (formula "19") (term "0,1"))
                                                (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,1,0,0"))
                                                (rule "add_zero_left" (formula "23") (term "1,1,0,0"))
                                                (rule "applyEq" (formula "28") (term "1,0,2,0") (ifseqformula "4"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,2,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,2,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,2,0"))
                                                (rule "close" (formula "28") (ifseqformula "6"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                                          (rule "simplifySelectOfStore" (formula "3"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                          (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "castDel" (formula "4") (term "1,0"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_3"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "castDel" (formula "4") (term "1,0"))
                                          (rule "eqSymm" (formula "4") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "26"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "simplifySelectOfStore" (formula "4"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "nnf_ex2all" (formula "28"))
                                          (rule "nnf_notAnd" (formula "1") (term "0"))
                                          (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                          (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                          (rule "shift_paren_or" (formula "1") (term "0"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "result = i_1 TRUE"
                                             (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "4"))
                                             (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, KIMapImpl::$count))"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,1"))
                                             (rule "leq_literals" (formula "1") (term "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_invertInEq1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                          (branch "result = i_1 FALSE"
                                             (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "24"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "23") (inst "sk=j_0"))
                                       (rule "allRight" (formula "23") (inst "sk=i_1"))
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "inEqSimp_geqRight" (formula "26"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "castDel" (formula "4") (term "1,0"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "simplifySelectOfStore" (formula "5"))
                                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "26")))
                                       (rule "simplifySelectOfStore" (formula "5"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "castDel" (formula "5") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                       (rule "allLeft" (formula "20") (inst "t=j_0"))
                                       (rule "eqSymm" (formula "20") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0,0,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, KIMapImpl::$count))"))
                                       (rule "eqSymm" (formula "21") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,1,0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "1,0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "result = j_0 TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "5") (term "1"))
                                          (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "4"))
                                          (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "24"))
                                          (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "2"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                          (rule "leq_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "5"))
                                          (rule "allLeft" (formula "21") (inst "t=j_0"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                          (rule "applyEq" (formula "21") (term "0,0,1") (ifseqformula "25"))
                                          (rule "eqSymm" (formula "21") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "8"))
                                          (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                          (rule "leq_literals" (formula "21") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "allLeft" (formula "20") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "20") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "allLeft" (formula "23") (inst "t=i_1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "result = j_0 FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "result = i_1 TRUE"
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "4"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "5"))
                                             (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "2"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "false_right" (formula "25"))
                                             (rule "allLeft" (formula "19") (inst "t=i_1"))
                                             (rule "eqSymm" (formula "19") (term "0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                             (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "19") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "allLeft" (formula "20") (inst "t=i_1"))
                                             (rule "eqSymm" (formula "20") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                             (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "25"))
                                             (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "26"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "allLeft" (formula "20") (inst "t=j_0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                             (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                             (rule "leq_literals" (formula "20") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "20"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "result = i_1 FALSE"
                                             (rule "eqSymm" (formula "4"))
                                             (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "4"))
                                             (rule "allLeft" (formula "19") (inst "t=i_1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "19"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "23") (inst "sk=f_0"))
                                 (rule "allRight" (formula "23") (inst "sk=o_0"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (x_arr_5 = null)"
                               (builtin "One Step Simplification" (formula "25"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr_5 != null, but x_13 Out of Bounds!)"
                              (rule "false_right" (formula "25"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "14"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "20"))
                              (rule "polySimp_addAssoc" (formula "18") (term "1"))
                              (rule "add_literals" (formula "18") (term "0,1"))
                              (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "18"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "false_right" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "19"))
                              (rule "andLeft" (formula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                        (branch "Null Reference (x_arr_7 = null)"
                            (builtin "One Step Simplification" (formula "25"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_7 != null, but x_15 Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "25"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                           (rule "false_right" (formula "25"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                           (rule "add_literals" (formula "1") (term "0,0,1"))
                           (rule "add_zero_left" (formula "1") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "14"))
                           (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "20"))
                           (rule "polySimp_addAssoc" (formula "18") (term "1"))
                           (rule "add_literals" (formula "18") (term "0,1"))
                           (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Null Reference (x_arr_1 = null)"
                        (rule "false_right" (formula "25"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_1 != null, but x_10 Out of Bounds!)"
                        (rule "false_right" (formula "25"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "20"))
                        (rule "polySimp_addAssoc" (formula "18") (term "1"))
                        (rule "add_literals" (formula "18") (term "0,1"))
                        (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "18"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0"))
                        (rule "leq_literals" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "false_right" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                        (rule "mul_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "19"))
                        (rule "andLeft" (formula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                        (rule "add_literals" (formula "15") (term "1,1,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0"))
                        (rule "add_literals" (formula "15") (term "0"))
                        (rule "leq_literals" (formula "15"))
                        (rule "closeFalse" (formula "15"))
                     )
                  )
                  (branch "Null Reference (x_arr_3 = null)"
                     (rule "false_right" (formula "25"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_3 != null, but x_12 Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "25"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                     (rule "false_right" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "add_zero_left" (formula "1") (term "0,1"))
                     (rule "inEqSimp_strengthen1" (formula "18") (ifseqformula "20"))
                     (rule "polySimp_addAssoc" (formula "18") (term "1"))
                     (rule "add_literals" (formula "18") (term "0,1"))
                     (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "18"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "false_right" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "1"))
                     (rule "andLeft" (formula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "1,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0"))
                     (rule "add_literals" (formula "15") (term "0"))
                     (rule "leq_literals" (formula "15"))
                     (rule "closeFalse" (formula "15"))
                  )
               )
               (branch "if x_4 false"
                   (builtin "One Step Simplification" (formula "24"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "18"))
                  (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "1,0"))
                  (rule "times_zero_1" (formula "18") (term "0"))
                  (rule "leq_literals" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "23") (term "1,3,0,1,0") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "23") (term "3,0,1,0"))
                  (rule "add_literals" (formula "23") (term "0,3,0,1,0"))
                  (rule "add_zero_left" (formula "23") (term "3,0,1,0"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0"))
                  (rule "applyEq" (formula "16") (term "1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1"))
                  (rule "add_literals" (formula "15") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                  (rule "leq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "methodCallEmpty" (formula "22") (term "1"))
                  (rule "tryEmpty" (formula "22") (term "1"))
                  (rule "emptyModality" (formula "22") (term "1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "eqSymm" (formula "22") (term "1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "22") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                  (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "0,1,1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "22") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "22") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "22") (term "1,1,1,0,0,0,0,1,0") (inst "selectSK=KIMapImpl_count_1"))
                  (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_KIMapImpl" (formula "22") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "replaceKnownSelect_taclet110000_2" (formula "22") (term "1,0,1,0,1,1,0"))
                  (rule "replaceKnownSelect_taclet110000_2" (formula "22") (term "0,1,1,0,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110000_3" (formula "22") (term "1,0,1,0,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110000_3" (formula "22") (term "0,1,1,0,1,1,0"))
                  (rule "replaceKnownSelect_taclet110000_2" (formula "22") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110000_3" (formula "22") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,1,0,0,1,1,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0,0,0,1,1,0"))
                  (rule "replace_known_right" (formula "22") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0,1,1,0"))
                  (rule "replace_known_right" (formula "22") (term "0,1,0,0,1,1,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,1,0,0,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0,0,1,1,0"))
                  (rule "replace_known_right" (formula "22") (term "0,0,0,0,1,1,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0,1,1,0"))
                  (rule "replace_known_left" (formula "22") (term "0,0,1,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,0,0,1,0,0,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "1,0,1,0,0,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0"))
                  (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,1,1,0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "22") (term "0,0,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_subsumption1" (formula "22") (term "0,1,1,0") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "22") (term "0,0,1,1,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "nnf_imp2or" (formula "22") (term "0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,1,1,0"))
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                     (rule "andRight" (formula "22"))
                     (branch "Case 1"
                        (rule "notRight" (formula "22"))
                        (rule "exLeft" (formula "1") (inst "sk=i_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "allLeft" (formula "18") (inst "t=result"))
                        (rule "eqSymm" (formula "18") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "18") (term "0,1,0,0,0"))
                        (rule "leq_literals" (formula "18") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "21"))
                        (rule "allLeft" (formula "18") (inst "t=i_1"))
                        (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1"))
                        (rule "leq_literals" (formula "18") (term "0,1"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "22"))
                        (branch "Case 1"
                           (rule "allRight" (formula "22") (inst "sk=e_0"))
                           (rule "allRight" (formula "22") (inst "sk=k_0"))
                           (rule "orRight" (formula "22"))
                           (rule "eqSymm" (formula "23") (term "1,1,0,1"))
                           (rule "eqSymm" (formula "23") (term "1,1,0,0"))
                           (rule "eqSymm" (formula "22"))
                           (rule "equiv_right" (formula "23"))
                           (branch "Case 1"
                              (rule "exLeft" (formula "1") (inst "sk=i_1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "nnf_ex2all" (formula "27"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "1,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0"))
                              (rule "allLeft" (formula "1") (inst "t=i_1"))
                              (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                              (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "2") (term "1,1,0,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "20") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "22"))
                              (rule "close" (formula "27") (ifseqformula "4"))
                           )
                           (branch "Case 2"
                              (rule "exLeft" (formula "1") (inst "sk=i_1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "nnf_ex2all" (formula "27"))
                              (rule "nnf_notAnd" (formula "1") (term "0"))
                              (rule "nnf_notAnd" (formula "1") (term "1,0"))
                              (rule "nnf_notAnd" (formula "1") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                              (rule "shift_paren_or" (formula "1") (term "0"))
                              (rule "allLeft" (formula "1") (inst "t=i_1"))
                              (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "5"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "22") (inst "sk=j_0"))
                           (rule "allRight" (formula "22") (inst "sk=i_1"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "notRight" (formula "24"))
                           (rule "orRight" (formula "23"))
                           (rule "inEqSimp_geqRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "25"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "allLeft" (formula "19") (inst "t=j_0"))
                           (rule "eqSymm" (formula "19") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0,0"))
                           (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "19") (inst "t=i_1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "22") (inst "sk=f_0"))
                     (rule "allRight" (formula "22") (inst "sk=o_0"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "orRight" (formula "22"))
                     (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "27"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "Null Reference (k_1 = null)"
            (rule "false_right" (formula "23"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (k = null)"
         (rule "false_right" (formula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "inEqSimp_geqRight" (formula "17"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
      (rule "qeq_literals" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "methodCallEmpty" (formula "21") (term "1"))
      (rule "tryEmpty" (formula "21") (term "1"))
      (rule "emptyModality" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_homoEq" (formula "21") (term "0"))
      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "equal_literals" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "false_right" (formula "21"))
      (rule "allLeft" (formula "16") (inst "t=i_0"))
      (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "6"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,1"))
      (rule "leq_literals" (formula "16") (term "0,1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "16"))
      (rule "qeq_literals" (formula "5") (term "0"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "closeFalse" (formula "5"))
   )
)
(branch "Exceptional Post (posOfId)"
    (builtin "One Step Simplification" (formula "17"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (posOfId)"
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_KIMapImpl" (formula "16") (inst "j=j") (inst "i=i") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
   (rule "eqSymm" (formula "16") (term "0,0,0"))
   (rule "eqSymm" (formula "16") (term "0,1,0,0,1"))
   (rule "eqSymm" (formula "16") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "16") (term "0,1,0,0") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "8")))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0"))
   (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0"))
   (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "allRight" (formula "16") (inst "sk=j_0"))
   (rule "allRight" (formula "16") (inst "sk=i_1"))
   (rule "impRight" (formula "16"))
   (rule "notRight" (formula "17"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "inEqSimp_homoInEq0" (formula "4"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
   (rule "allLeft" (formula "15") (inst "t=j_0"))
   (rule "eqSymm" (formula "15") (term "0,1,0"))
   (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
   (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "1"))
   (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
   (rule "leq_literals" (formula "15") (term "0,1,0,0,0"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "arrayLengthNotNegative" (formula "12") (term "0"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "13") (term "1"))
   (rule "arrayLengthIsAnInt" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "allLeft" (formula "16") (inst "t=i_1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
   (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
   (rule "add_literals" (formula "16") (term "0,0,1"))
   (rule "leq_literals" (formula "16") (term "0,1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
   (rule "qeq_literals" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "closeFalse" (formula "16"))
)
)
}
