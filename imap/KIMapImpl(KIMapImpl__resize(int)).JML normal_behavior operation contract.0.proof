\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jan 31 09:53:19 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=3000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Fri Jan 31 09:53:19 CET 2020
contract=KIMapImpl[KIMapImpl\\:\\:resize(int)].JML normal_behavior operation contract.0
name=KIMapImpl[KIMapImpl\\:\\:resize(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "49ea85945cd6c693d72d27b4476aa0916bad8383"))

(autoModeTime "3599")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "newSize,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "8") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "5"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_KIMapImpl" (formula "6") (inst "j=j") (inst "x=x") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "11") (term "1,0,1,0"))
(rule "eqSymm" (formula "10") (term "0,1,0,0"))
(rule "eqSymm" (formula "16"))
(rule "eqSymm" (formula "7"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_addComm1" (formula "10") (term "0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_gtToGeq" (formula "6"))
(rule "times_zero_1" (formula "6") (term "1,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6"))
(rule "mul_literals" (formula "6") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "5"))
(rule "polySimp_mulComm0" (formula "9") (term "0,0"))
(rule "polySimp_addComm0" (formula "9") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "9"))
(rule "polySimp_mulLiterals" (formula "9") (term "0"))
(rule "polySimp_elimOne" (formula "9") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
(rule "mul_literals" (formula "6") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6"))
(rule "mul_literals" (formula "6") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
(rule "times_zero_1" (formula "9") (term "0,0"))
(rule "add_zero_left" (formula "9") (term "0"))
(rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
(rule "leq_literals" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "true_left" (formula "9"))
(rule "commuteUnion" (formula "15") (term "1,1"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_imp2or" (formula "12") (term "0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "mul_literals" (formula "14") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0"))
(rule "commute_or_2" (formula "14") (term "0"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_resize,savedHeapBefore_resize"))
 (builtin "One Step Simplification" (formula "20"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "newkeys"))
(rule "commute_or" (formula "14") (term "0,0"))
(rule "cnf_eqv" (formula "13") (term "0"))
(rule "nnf_notEx" (formula "13") (term "1,0,0"))
(rule "nnf_notAnd" (formula "13") (term "0,1,0,0"))
(rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0"))
(rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0,0"))
(rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,0"))
(rule "distr_forallAnd" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "commute_or_2" (formula "12") (term "0,0,0"))
(rule "associativeLawUnion" (formula "16") (term "1"))
(rule "arrayLengthNotNegative" (formula "5") (term "0"))
(rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "8"))
(rule "leq_literals" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "true_left" (formula "5"))
(rule "arrayLengthIsAnInt" (formula "5") (term "0"))
 (builtin "One Step Simplification" (formula "5"))
(rule "true_left" (formula "5"))
(rule "ex_pull_out3" (formula "14") (term "0"))
(rule "cnf_rightDist" (formula "14") (term "0,0"))
(rule "commute_or" (formula "14") (term "1,0,0"))
(rule "cnf_rightDist" (formula "14") (term "0,0,0"))
(rule "commute_or" (formula "14") (term "1,0,0,0"))
(rule "arrayLengthNotNegative" (formula "8") (term "0"))
(rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
(rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "7"))
(rule "leq_literals" (formula "8") (term "0"))
 (builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "arrayLengthIsAnInt" (formula "8") (term "0"))
 (builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "21") (term "1"))
(rule "variableDeclarationAssign" (formula "21") (term "1"))
(rule "variableDeclaration" (formula "21") (term "1") (newnames "var"))
(rule "assignment_read_attribute_this" (formula "21"))
 (builtin "One Step Simplification" (formula "21"))
(rule "variableDeclarationAssign" (formula "21") (term "1"))
(rule "variableDeclaration" (formula "21") (term "1") (newnames "var_1"))
(rule "assignment" (formula "21") (term "1"))
 (builtin "One Step Simplification" (formula "21"))
(rule "all_pull_out3" (formula "13") (term "0"))
(rule "shift_paren_or" (formula "13") (term "0,0"))
(rule "shift_paren_or" (formula "13") (term "0,0,0"))
(rule "swapQuantifiersAll" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
 (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_arrayClone,result,exc_0,heapAfter_arrayClone,anon_heap_arrayClone") (contract "KIMapImpl[KIMapImpl::arrayClone([I,int)].JML normal_behavior operation contract.0"))
(branch "Post (arrayClone)"
    (builtin "One Step Simplification" (formula "18"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "18"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,1,0") (ifseqformula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "22"))
   (rule "notLeft" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "22"))
   (rule "eqSymm" (formula "20") (term "1,0"))
   (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "24"))
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")))
   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
   (rule "assignment" (formula "29") (term "1"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "blockEmpty" (formula "29") (term "1"))
   (rule "variableDeclarationAssign" (formula "29") (term "1"))
   (rule "variableDeclaration" (formula "29") (term "1") (newnames "newvalues"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
   (rule "pullOutSelect" (formula "20") (term "1,1,1,0,0") (inst "selectSK=KIMapImpl_count_0"))
   (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "21") (term "1,1,1,0,0") (ifseqformula "20"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "nnf_imp2or" (formula "20") (term "0"))
   (rule "nnf_notAnd" (formula "20") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "29") (term "1"))
   (rule "variableDeclarationAssign" (formula "29") (term "1"))
   (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_2"))
   (rule "assignment_read_attribute_this" (formula "29"))
    (builtin "One Step Simplification" (formula "29"))
   (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=KIMapImpl_values_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "variableDeclarationAssign" (formula "29") (term "1"))
   (rule "variableDeclaration" (formula "29") (term "1") (newnames "var_3"))
   (rule "assignment" (formula "29") (term "1"))
    (builtin "One Step Simplification" (formula "29"))
    (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_arrayClone_0,result_0,exc_1,heapAfter_arrayClone_0,anon_heap_arrayClone_0") (contract "KIMapImpl[KIMapImpl::arrayClone([I,int)].JML normal_behavior operation contract.0"))
   (branch "Post (arrayClone)"
       (builtin "One Step Simplification" (formula "31"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,1") (ifseqformula "18"))
      (rule "andLeft" (formula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0") (ifseqformula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "28"))
      (rule "notLeft" (formula "27"))
      (rule "notLeft" (formula "26"))
      (rule "andLeft" (formula "27"))
      (rule "orRight" (formula "30"))
      (rule "notLeft" (formula "28"))
      (rule "eqSymm" (formula "26") (term "1,0"))
      (rule "replace_known_right" (formula "25") (term "1,0,1") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "31")) (ifInst ""  (formula "29")))
      (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "blockEmpty" (formula "38") (term "1"))
      (rule "assignment_write_attribute_this" (formula "38"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "assignment_write_attribute_this" (formula "38"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "eval_order_access4" (formula "38") (term "1") (inst "#v1=x") (inst "#v0=k"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "k"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
      (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
      (rule "pullOutSelect" (formula "26") (term "1,1,1,0,0") (inst "selectSK=KIMapImpl_count_1"))
      (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "38")))
      (rule "replaceKnownSelect_taclet0_0" (formula "26") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "26") (term "2,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "18"))
      (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "applyEqReverse" (formula "27") (term "1,1,1,0,0") (ifseqformula "26"))
      (rule "hideAuxiliaryEq" (formula "26"))
      (rule "nnf_imp2or" (formula "26") (term "0"))
      (rule "nnf_notAnd" (formula "26") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
      (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
      (rule "mul_literals" (formula "26") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
      (rule "setUnionUnfoldRight" (formula "38") (term "1") (inst "#vRightNew=x_1"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_1"))
      (rule "setUnionUnfoldLeft" (formula "38") (term "1") (inst "#vLeftNew=x_2"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_2"))
      (rule "allFieldsUnfold" (formula "38") (term "1") (inst "#vObjNew=x_arr"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "38"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=KIMapImpl_values_1"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "39") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "setUnionUnfoldRight" (formula "38") (term "1") (inst "#vRightNew=x_3"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_3"))
      (rule "allFieldsUnfold" (formula "38") (term "1") (inst "#vObjNew=x_arr"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_arr_1"))
      (rule "assignment_read_attribute_this" (formula "38"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "dismissNonSelectedField" (formula "38") (term "0,1,0"))
      (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=KIMapImpl_keys_0"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "39") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "assignment_write_attribute" (formula "38"))
      (branch "Normal Execution (k != null)"
          (builtin "One Step Simplification" (formula "38"))
         (rule "emptyStatement" (formula "38") (term "1"))
         (rule "commuteUnion" (formula "38") (term "1,3,0,1,0"))
         (rule "commuteUnion" (formula "38") (term "3,0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "methodCallEmpty" (formula "40") (term "1"))
         (rule "tryEmpty" (formula "40") (term "1"))
         (rule "emptyModality" (formula "40") (term "1"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "eqSymm" (formula "40") (term "0,1,0,0,1,1,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,1"))
         (rule "eqSymm" (formula "40") (term "1,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,0,1,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "1,0,0,0,1,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "1,0,0,0,1,0,1,1,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,0,1,0,1,1,1,0") (ifseqformula "31"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,1,0,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,1,0,1,1,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,1,0,1,1,1,0") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "40") (term "0,1,0") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,0,0,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,1,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,1,0,1,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,1,0,1,1,0") (ifseqformula "34"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "1,0,1,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "1,0,1,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,0,1,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,0,0,0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,0,0,0,1,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,0,1,1,0") (ifseqformula "35"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,0,0"))
         (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,0,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,0,0,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "1,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "1,1,0,0,0,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0"))
         (rule "Class_invariant_axiom_for_KIMapImpl" (formula "40") (term "1,0") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "eqSymm" (formula "40") (term "1,0,1,0,1,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "0,1,0,0,1,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,1,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "1,1,1,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "1,1,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_6" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,1,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,1,1,1,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,1,1,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "34"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,1,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,1,0,1,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,1,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,1,1,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,1,1,1,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,1,1,1,1,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,1,0,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "0,1,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,1,0,0,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,1,1,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "0,1,1,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "0,1,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "1,0,1,0,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "1,0,1,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_4" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_5" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,1,0,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "40") (term "0,0,0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "0,0,1,0,0,1,0,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,0,1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,0,1,0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "40") (term "1,1,1,0,1,0,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet00_8" (formula "40") (term "1,1,1,0,1,0,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "40") (term "1,1,1,0,1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "40") (term "0,1,0,0,0,0,1,0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "applyEq" (formula "40") (term "1,1,0,0,0,0,1,0") (ifseqformula "23"))
         (rule "replace_known_left" (formula "40") (term "1,0,0,0,0,1,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "applyEq" (formula "40") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
         (rule "eqSymm" (formula "40") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "40") (term "1,0,0,0,0,0,1,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "applyEq" (formula "40") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "23"))
         (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "40") (term "0,0,0,0,0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "pullOutSelect" (formula "40") (term "0,0,0,1,0,0,1,0") (inst "selectSK=KIMap_m_0"))
         (rule "applyEq" (formula "41") (term "0,0,1,0,1,0,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "41") (term "0,0,1,0,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0,0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "40") (term "0,1,1,0") (inst "selectSK=KIMap_footprint_0"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "40") (term "1,1,0"))
         (rule "commuteUnion" (formula "40") (term "1,0,1,1,0"))
         (rule "commuteUnion" (formula "40") (term "0,1,1,0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "nnf_imp2or" (formula "40") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "40") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "40") (term "1,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,1,0"))
         (rule "nnf_imp2or" (formula "40") (term "0,0,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,1,0,0,1,0"))
         (rule "nnf_notAnd" (formula "40") (term "0,0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,0,0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,0,0,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0,1,0,0,1,0"))
         (rule "arrayLengthNotNegative" (formula "23") (term "0"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "8"))
         (rule "leq_literals" (formula "23") (term "0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "arrayLengthNotNegative" (formula "29") (term "0"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "8"))
         (rule "leq_literals" (formula "29") (term "0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "arrayLengthIsAnInt" (formula "29") (term "0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "cut_direct" (formula "40") (term "0,0,0,0,1,0"))
         (branch "CUT: result_0 = result TRUE"
             (builtin "One Step Simplification" (formula "41"))
            (rule "false_right" (formula "41"))
            (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
            (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "1"))
            (rule "close" (formula "31") (ifseqformula "22"))
         )
         (branch "CUT: result_0 = result FALSE"
             (builtin "One Step Simplification" (formula "41"))
            (rule "andRight" (formula "41"))
            (branch "Case 1"
               (rule "andRight" (formula "41"))
               (branch "Case 1"
                  (rule "allRight" (formula "41") (inst "sk=i_0"))
                  (rule "orRight" (formula "41"))
                  (rule "orRight" (formula "41"))
                  (rule "inEqSimp_geqRight" (formula "42"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "42"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                  (rule "eqSymm" (formula "44") (term "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "43") (term "1"))
                  (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                  (rule "eqSymm" (formula "44") (term "0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                  (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "43") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "14"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "allLeft" (formula "25") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet001000_18" (formula "25") (term "1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001000_19" (formula "25") (term "1,1"))
                  (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "leq_literals" (formula "25") (term "0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "42")) (ifInst ""  (formula "9")))
                  (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "eqSymm" (formula "25"))
                  (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "allLeft" (formula "20") (inst "t=i_0"))
                  (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "20") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                  (rule "add_literals" (formula "20") (term "0,0,1"))
                  (rule "leq_literals" (formula "20") (term "0,1"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "allLeft" (formula "18") (inst "t=i_0"))
                  (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                  (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,1"))
                  (rule "leq_literals" (formula "18") (term "0,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "18") (term "0,1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "allLeft" (formula "34") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet001000_15" (formula "34") (term "1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001000_16" (formula "34") (term "1,1"))
                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "34") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "25"))
                  (rule "eqSymm" (formula "35"))
                  (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                  (rule "hideAuxiliaryEq" (formula "35"))
                  (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                  (rule "hideAuxiliaryEq" (formula "34"))
                  (rule "eqSymm" (formula "34"))
                  (rule "close" (formula "48") (ifseqformula "34"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "41"))
                  (branch "Case 1"
                     (rule "andRight" (formula "41"))
                     (branch "Case 1"
                        (rule "allRight" (formula "41") (inst "sk=j_1_0"))
                        (rule "allRight" (formula "41") (inst "sk=i_0"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "notRight" (formula "43"))
                        (rule "orRight" (formula "42"))
                        (rule "inEqSimp_geqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "44"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "5"))
                        (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "39")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "25"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "4"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "allLeft" (formula "19") (inst "t=j_1_0"))
                        (rule "eqSymm" (formula "19") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "19") (inst "t=i_0"))
                        (rule "eqSymm" (formula "19") (term "0,1"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "allLeft" (formula "34") (inst "t=j_1_0"))
                        (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                        (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "34") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "45")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "26"))
                        (rule "eqSymm" (formula "35") (term "1"))
                        (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "34"))
                        (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "45")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "pullOutSelect" (formula "34") (term "0,1") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "26"))
                        (rule "eqSymm" (formula "35") (term "1"))
                        (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "41")))
                        (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "34"))
                        (rule "hideAuxiliaryEq" (formula "34"))
                        (rule "eqSymm" (formula "34") (term "1"))
                        (rule "cut_direct" (formula "34") (term "0"))
                        (branch "CUT: j_1_0 <= -1 TRUE"
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "34"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: j_1_0 <= -1 FALSE"
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_leqRight" (formula "38"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "allLeft" (formula "22") (inst "t=j_1_0"))
                           (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "add_literals" (formula "22") (term "0,0,1"))
                           (rule "leq_literals" (formula "22") (term "0,1"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "22") (term "0,1"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allLeft" (formula "30") (inst "t=j_1_0"))
                           (rule "replaceKnownSelect_taclet00101000_17" (formula "30") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00101000_18" (formula "30") (term "1,1"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                           (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "6"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "30") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "30") (term "0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")) (ifInst ""  (formula "12")))
                           (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                           (rule "hideAuxiliaryEq" (formula "30"))
                           (rule "eqSymm" (formula "30"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "30"))
                           (rule "allLeft" (formula "25") (inst "t=j_1_0"))
                           (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                           (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                           (rule "add_literals" (formula "25") (term "0,0,1"))
                           (rule "leq_literals" (formula "25") (term "0,1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "25") (term "0,1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "allLeft" (formula "24") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_1_0))"))
                           (rule "exLeft" (formula "24") (inst "sk=j_0_0"))
                           (rule "andLeft" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_homoInEq0" (formula "25"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "22") (term "1") (ifseqformula "26"))
                           (rule "applyEq" (formula "45") (term "0") (ifseqformula "26"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "26"))
                           (rule "applyEq" (formula "20") (term "1,0,1,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "34") (term "1") (ifseqformula "26"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "18"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                           (rule "mul_literals" (formula "25") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1"))
                           (rule "mul_literals" (formula "25") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                           (rule "allLeft" (formula "30") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                           (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "24"))
                           (rule "qeq_literals" (formula "30") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "26"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                           (rule "add_literals" (formula "30") (term "0,0,1"))
                           (rule "leq_literals" (formula "30") (term "0,1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                           (rule "applyEq" (formula "43") (term "1") (ifseqformula "30"))
                           (rule "allLeft" (formula "20") (inst "t=j_0_0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "20"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "allLeft" (formula "30") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_0))"))
                           (rule "exLeft" (formula "30") (inst "sk=j_0_1"))
                           (rule "andLeft" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "eqSymm" (formula "32") (term "1"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "31"))
                           (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_homoInEq0" (formula "31"))
                           (rule "polySimp_addComm1" (formula "31") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1"))
                           (rule "mul_literals" (formula "31") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                           (rule "mul_literals" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1"))
                           (rule "mul_literals" (formula "31") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                           (rule "allLeft" (formula "43") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0"))
                           (rule "leq_literals" (formula "43") (term "0,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_5"))
                           (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "62")) (ifInst ""  (formula "13")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                           (rule "hideAuxiliaryEq" (formula "43"))
                           (rule "eqSymm" (formula "43"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                           (rule "hideAuxiliaryEq" (formula "43"))
                           (rule "allLeft" (formula "51") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "51") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                           (rule "add_literals" (formula "51") (term "0,0,0"))
                           (rule "leq_literals" (formula "51") (term "0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_7"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "62")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0") (ifseqformula "40"))
                           (rule "eqSymm" (formula "52"))
                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "59")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,0") (ifseqformula "40"))
                           (rule "replace_known_right" (formula "52") (term "1,0,0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "hideAuxiliaryEq" (formula "52"))
                           (rule "replace_known_left" (formula "51") (term "0,0,0,0") (ifseqformula "8"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_8"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "51"))
                           (rule "hideAuxiliaryEq" (formula "51"))
                           (rule "eqSymm" (formula "51"))
                           (rule "allLeft" (formula "22") (inst "t=i_0"))
                           (rule "eqSymm" (formula "22") (term "0,1"))
                           (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "allLeft" (formula "44") (inst "t=i_0"))
                           (rule "replaceKnownSelect_taclet00101000_19" (formula "44") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00101000_20" (formula "44") (term "1,1"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                           (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "42"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "44") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "pullOutSelect" (formula "44") (term "0,1") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "64")) (ifInst ""  (formula "13")))
                           (rule "applyEqReverse" (formula "45") (term "0,1") (ifseqformula "44"))
                           (rule "hideAuxiliaryEq" (formula "44"))
                           (rule "eqSymm" (formula "44") (term "1"))
                           (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "44"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "4"))
                           (rule "andLeft" (formula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                           (rule "add_literals" (formula "6") (term "1,1,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0"))
                           (rule "add_literals" (formula "6") (term "0"))
                           (rule "leq_literals" (formula "6"))
                           (rule "closeFalse" (formula "6"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "41") (inst "sk=x_4_0"))
                        (rule "eqSymm" (formula "41") (term "1,0,1"))
                        (rule "equiv_right" (formula "41"))
                        (branch "Case 1"
                           (rule "nnf_ex2all" (formula "42"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "allLeft" (formula "18") (inst "t=x_4_0"))
                           (rule "exLeft" (formula "18") (inst "sk=j_0_0"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "eqSymm" (formula "20") (term "1"))
                           (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                           (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                           (rule "mul_literals" (formula "19") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "allLeft" (formula "1") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "21"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "1") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "38"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                           (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "37"))
                           (rule "allLeft" (formula "34") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "34") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "34") (term "0,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "pullOutSelect" (formula "34") (term "1") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "26"))
                           (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "45")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "26"))
                           (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "45")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "40"))
                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                           (rule "allLeft" (formula "28") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet010101000_16" (formula "28") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010101000_17" (formula "28") (term "1,1"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "28") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "28") (term "0,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "47")) (ifInst ""  (formula "8")))
                           (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "eqSymm" (formula "28"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "28"))
                           (rule "close" (formula "39") (ifseqformula "21"))
                        )
                        (branch "Case 2"
                           (rule "exLeft" (formula "1") (inst "sk=j_0_0"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "24"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "38"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "allLeft" (formula "26") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet110101000_17" (formula "26") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110101000_18" (formula "26") (term "1,1"))
                           (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                           (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "4"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "26") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "leq_literals" (formula "26") (term "0,0"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "43")) (ifInst ""  (formula "10")))
                           (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
                           (rule "hideAuxiliaryEq" (formula "26"))
                           (rule "allLeft" (formula "21") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                           (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                           (rule "add_literals" (formula "21") (term "0,0,1"))
                           (rule "leq_literals" (formula "21") (term "0,1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "21") (term "0,1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "allLeft" (formula "19") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "28"))
                           (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "48"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                           (rule "add_literals" (formula "19") (term "0,0,1"))
                           (rule "leq_literals" (formula "19") (term "0,1"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "41") (inst "sk=j_0"))
                     (rule "orRight" (formula "41"))
                     (rule "orRight" (formula "41"))
                     (rule "inEqSimp_leqRight" (formula "41"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "43") (term "1,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                     (rule "applyEqReverse" (formula "44") (term "1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "43") (term "1") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "allLeft" (formula "25") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1101000_16" (formula "25") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_17" (formula "25") (term "1,1"))
                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "25") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "25") (term "0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "42")) (ifInst ""  (formula "9")))
                     (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "eqSymm" (formula "25"))
                     (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "25"))
                     (rule "allLeft" (formula "20") (inst "t=j_0"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_literals" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "20") (term "0,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "20"))
                     (rule "eqSymm" (formula "46"))
                     (rule "allLeft" (formula "18") (inst "t=j_0"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                     (rule "add_literals" (formula "18") (term "0,0,1"))
                     (rule "leq_literals" (formula "18") (term "0,1"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "18") (term "0,1"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "allLeft" (formula "34") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1101000_18" (formula "34") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1101000_19" (formula "34") (term "1,1"))
                     (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "34") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "34") (term "0,0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "25"))
                     (rule "eqSymm" (formula "35"))
                     (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                     (rule "hideAuxiliaryEq" (formula "35"))
                     (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "eqSymm" (formula "34"))
                     (rule "close" (formula "48") (ifseqformula "34"))
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "41") (inst "sk=f_0"))
               (rule "allRight" (formula "41") (inst "sk=o_0"))
               (rule "orRight" (formula "41"))
               (rule "orRight" (formula "41"))
               (rule "orRight" (formula "41"))
               (rule "orRight" (formula "41"))
               (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "46"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "44"))
               (rule "commute_and" (formula "43"))
               (rule "commute_and" (formula "42"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_arrayClone<<anonHeapFunction>> = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "32"))
                  (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "48"))
                  (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "31")))
                  (rule "closeTrue" (formula "47"))
               )
               (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_arrayClone<<anonHeapFunction>> = TRUE) FALSE"
                  (rule "close" (formula "47") (ifseqformula "1"))
               )
            )
         )
      )
      (branch "Null Reference (k = null)"
         (rule "false_right" (formula "39"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (arrayClone)"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,1") (ifseqformula "18"))
      (rule "andLeft" (formula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0") (ifseqformula "24"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0") (ifseqformula "18"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "27"))
      (rule "notLeft" (formula "25"))
      (rule "close" (formula "29") (ifseqformula "28"))
   )
   (branch "Pre (arrayClone)"
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
      (rule "wellFormedAnonEQ" (formula "29") (term "0,1") (ifseqformula "18"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,1") (ifseqformula "18"))
      (rule "replaceKnownSelect_taclet0_0" (formula "29") (term "1,0,1,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "29") (term "0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "29") (term "1,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "29") (term "0,1,1,0"))
      (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "17")))
      (rule "inEqSimp_commuteGeq" (formula "29") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,0"))
      (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "5"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "8"))
      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "11"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "orRight" (formula "29"))
      (rule "referencedObjectIsCreatedRight" (formula "29") (ifseqformula "25"))
      (rule "close" (formula "29") (ifseqformula "1"))
   )
)
(branch "Exceptional Post (arrayClone)"
    (builtin "One Step Simplification" (formula "18"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "18"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1,0") (ifseqformula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "19"))
   (rule "close" (formula "22") (ifseqformula "21"))
)
(branch "Pre (arrayClone)"
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0"))
   (rule "replace_known_left" (formula "21") (term "1,1,0") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
   (rule "replace_known_left" (formula "21") (term "1,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
   (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "5"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "18"))
   (rule "close" (formula "21") (ifseqformula "1"))
)
)
}
