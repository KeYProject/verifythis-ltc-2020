\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jan 30 21:59:42 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Thu Jan 30 21:59:42 CET 2020
contract=KIMapImpl[KIMapImpl\\:\\:arrayClone([I,int)].JML normal_behavior operation contract.0
name=KIMapImpl[KIMapImpl\\:\\:arrayClone([I,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "49ea85945cd6c693d72d27b4476aa0916bad8383"))

(autoModeTime "2079")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "array,newSize,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
 (builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "11") (term "1"))
 (builtin "One Step Simplification" (formula "11"))
(rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
(rule "times_zero_1" (formula "7") (term "0,0"))
(rule "add_zero_left" (formula "7") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
(rule "times_zero_1" (formula "7") (term "0,0"))
(rule "add_zero_left" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "13") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "13") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_arrayClone,savedHeapBefore_arrayClone,_arrayBefore_arrayClone,_newSizeBefore_arrayClone"))
 (builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "newArray"))
(rule "arrayCreation" (formula "13") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "dim0"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,0"))
(rule "mul_literals" (formula "13") (term "1,0,0,1,0"))
(rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,1,0") (ifseqformula "7"))
(rule "qeq_literals" (formula "13") (term "0,0,0,1,0"))
 (builtin "One Step Simplification" (formula "13"))
(rule "arrayLengthNotNegative" (formula "10") (term "1"))
(rule "arrayLengthIsAnInt" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "true_left" (formula "10"))
(rule "ifSplit" (formula "13"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "13") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "13") (term "1"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "allocateInstanceWithLength" (formula "13"))
    (builtin "One Step Simplification" (formula "14"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "17") (term "1"))
   (rule "assignment" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "methodCall" (formula "17"))
   (branch "Normal Execution (newObject != null )"
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "assignment_write_attribute_this" (formula "17"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallWithinClass" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "arrayInitialisation" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_elimSub" (formula "17") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "17") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "17") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment_write_attribute_this" (formula "17"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "methodCallReturn" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "for_to_while" (formula "17") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
       (builtin "Loop Invariant" (formula "17") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
          (builtin "One Step Simplification" (formula "17"))
         (rule "wellFormedStorePrimitive" (formula "17") (term "1"))
         (rule "leq_literals" (formula "17") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "17") (term "1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "17") (term "1,0,0"))
         (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,0"))
         (rule "eqSymm" (formula "17") (term "1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
         (rule "wellFormedMemsetArrayPrimitive" (formula "17") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "17") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "17") (term "1"))
         (rule "wellFormedStorePrimitive" (formula "17") (term "1"))
         (rule "wellFormedCreate" (formula "17") (term "1"))
         (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=KIMapImpl_count_0"))
         (rule "simplifySelectOfMemset" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfCreate" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "allRight" (formula "17") (inst "sk=j_0"))
         (rule "impRight" (formula "17"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
         (rule "qeq_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Body Preserves Invariant"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1,1"))
         (rule "andLeft" (formula "14"))
         (rule "impRight" (formula "20"))
         (rule "andLeft" (formula "15"))
         (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "thrownExc"))
         (rule "blockThrow" (formula "22") (term "1,0,0,1"))
         (rule "blockThrow" (formula "22") (term "1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=KIMapImpl_count_0"))
         (rule "simplifySelectOfAnon" (formula "16"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")))
         (rule "eqSymm" (formula "16") (term "0,0,0"))
         (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "16") (term "0,0,0"))
         (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")))
         (rule "ifthenelse_negated" (formula "16") (term "0"))
         (rule "inEqSimp_commuteGeq" (formula "17"))
         (rule "pullOutSelect" (formula "16") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfMemset" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfStore" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfStore" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfStore" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfCreate" (formula "16"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")))
         (rule "castDel" (formula "16") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "16") (term "0,0"))
         (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "22"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")))
         (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "16"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfMemset" (formula "16"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "16") (term "2,0"))
         (rule "elementOfArrayRange" (formula "16") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "simplifySelectOfCreate" (formula "16"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "13"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1"))
         (rule "polySimp_elimOne" (formula "16") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "9"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1"))
         (rule "polySimp_elimOne" (formula "16") (term "1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,1,1,0,1"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,1,1,0,1"))
         (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
         (rule "assignment_read_attribute_this" (formula "19"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "replaceKnownSelect_taclet101_0" (formula "19") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet101_9" (formula "19") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "emptyModality" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "notRight" (formula "19"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "10"))
         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
         (rule "mul_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
         (rule "add_literals" (formula "18") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0"))
         (rule "qeq_literals" (formula "18") (term "0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "ifUnfold" (formula "23") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_3"))
         (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_4"))
         (rule "assignment" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_5"))
         (rule "assignment_read_attribute_this" (formula "23"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet101_0" (formula "23") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet101_9" (formula "23") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
         (rule "replace_known_left" (formula "23") (term "0,0,1,0") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "ifSplit" (formula "23"))
         (branch "if x_3 true"
             (builtin "One Step Simplification" (formula "24"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "eval_order_array_access3" (formula "23") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_3"))
            (rule "assignment" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "23") (term "1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_7"))
            (rule "assignment_array2" (formula "23"))
            (branch "Normal Execution (_array != null)"
                (builtin "One Step Simplification" (formula "23"))
               (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "assignment_to_primitive_array_component" (formula "24"))
               (branch "Normal Execution (x_arr_3 != null)"
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "blockEmpty" (formula "24") (term "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                  (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "12"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "postincrement" (formula "25") (term "1"))
                  (rule "compound_int_cast_expression" (formula "25") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "25") (term "1"))
                  (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_8"))
                  (rule "remove_parentheses_right" (formula "25") (term "1"))
                  (rule "assignmentAdditionInt" (formula "25") (term "1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "25") (term "1"))
                  (rule "assignment" (formula "25") (term "1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "tryEmpty" (formula "25") (term "1"))
                  (rule "methodCallEmpty" (formula "25") (term "1"))
                  (rule "emptyModality" (formula "25") (term "1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "eqSymm" (formula "25") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                  (rule "mul_literals" (formula "25") (term "0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "25") (term "0,0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "25") (term "0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet101_0" (formula "25") (term "0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet101_9" (formula "25") (term "0,1,0,0,0"))
                  (rule "replace_known_left" (formula "25") (term "1,0,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "precOfInt" (formula "25") (term "1"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                  (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,1,1"))
                  (rule "add_literals" (formula "25") (term "1,1,0,1,1"))
                  (rule "times_zero_1" (formula "25") (term "1,0,1,1"))
                  (rule "add_zero_right" (formula "25") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "25") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                  (rule "add_literals" (formula "25") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "25") (term "0,1,1"))
                  (rule "leq_literals" (formula "25") (term "1,1"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                  (rule "mul_literals" (formula "25") (term "1,0,1"))
                  (rule "add_zero_right" (formula "25") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                  (rule "mul_literals" (formula "25") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                  (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "19"))
                  (rule "leq_literals" (formula "25") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "andRight" (formula "25"))
                  (branch "Case 1"
                     (rule "allRight" (formula "25") (inst "sk=j_0"))
                     (rule "orRight" (formula "25"))
                     (rule "orRight" (formula "25"))
                     (rule "inEqSimp_leqRight" (formula "25"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "26"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "27") (term "1") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnon" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                     (rule "eqSymm" (formula "2") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet000101_12" (formula "2") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000101_17" (formula "2") (term "0,0,1,0,0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                     (rule "mul_literals" (formula "5") (term "0,0"))
                     (rule "add_zero_left" (formula "5") (term "0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfMemset" (formula "2"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_8"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "ifthenelse_split" (formula "7") (term "0"))
                     (branch "x_arr_2 = array TRUE"
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "8"))
                        (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "24") (term "1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "6"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "6"))
                        (rule "close" (formula "25") (ifseqformula "15"))
                     )
                     (branch "x_arr_2 = array FALSE"
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "30"))
                        (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "25"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "24"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "j_0 = i_0 TRUE"
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "closeTrue" (formula "27"))
                        )
                        (branch "j_0 = i_0 FALSE"
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "27"))
                           (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "21"))
                           (rule "inEqSimp_contradEq3" (formula "21") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "qeq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "false_right" (formula "21"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
                           (rule "leq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "allLeft" (formula "20") (inst "t=j_0"))
                           (rule "replaceKnownSelect_taclet0000101_22" (formula "20") (term "1,1"))
                           (rule "replaceKnownSelect_taclet0000101_23" (formula "20") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000101_30" (formula "20") (term "1,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet0000101_24" (formula "20") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10000101_32" (formula "20") (term "1,1"))
                           (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "20") (term "0,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "25") (inst "sk=f_0"))
                     (rule "allRight" (formula "25") (inst "sk=o_0"))
                     (rule "orRight" (formula "25"))
                     (rule "orRight" (formula "25"))
                     (rule "pullOutSelect" (formula "27") (term "1") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                     (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "28"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "replaceKnownSelect_taclet1000101_20" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000101_26" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_3 = null)"
                  (rule "false_right" (formula "25"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_3 != null, but x_6 Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "25"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                  (rule "false_right" (formula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "6"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_array = null)"
               (rule "false_right" (formula "24"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_array != null, but i Out of Bounds!)"
                (builtin "One Step Simplification" (formula "24"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "false_right" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "18"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "if x_3 false"
             (builtin "One Step Simplification" (formula "24"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "b_1"))
         (rule "blockEmpty" (formula "21") (term "1,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=KIMapImpl_count_0"))
         (rule "simplifySelectOfAnon" (formula "15"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
         (rule "eqSymm" (formula "15") (term "0,0,0"))
         (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "15") (term "2,0"))
         (rule "sortsDisjointModuloNull" (formula "15") (term "0,0,0"))
         (rule "replace_known_right" (formula "15") (term "1,0,0,0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
         (rule "ifthenelse_negated" (formula "15") (term "0"))
         (rule "inEqSimp_commuteGeq" (formula "16"))
         (rule "pullOutSelect" (formula "15") (term "1,0") (inst "selectSK=KIMapImpl_count_1"))
         (rule "simplifySelectOfMemset" (formula "15"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "dismissNonSelectedField" (formula "15") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "15") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "15") (term "2,0"))
         (rule "elementOfArrayRange" (formula "15") (term "0,0") (inst "iv=iv"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "simplifySelectOfCreate" (formula "15"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfMemset" (formula "15"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "simplifySelectOfStore" (formula "15"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "simplifySelectOfStore" (formula "15"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "simplifySelectOfStore" (formula "15"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "simplifySelectOfCreate" (formula "15"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
         (rule "castDel" (formula "15") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "15") (term "0,0"))
         (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "15"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "12"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1"))
         (rule "polySimp_elimOne" (formula "15") (term "1"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1"))
         (rule "polySimp_elimOne" (formula "15") (term "1"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
         (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "variableDeclarationAssign" (formula "23") (term "1"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
         (rule "assignment_read_attribute_this" (formula "23"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "replaceKnownSelect_taclet201_0" (formula "23") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet201_10" (formula "23") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "23") (term "1"))
         (rule "emptyModality" (formula "23") (term "1"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "impRight" (formula "23"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "19"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
         (rule "inEqSimp_homoInEq1" (formula "18"))
         (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
         (rule "add_literals" (formula "18") (term "1,0"))
         (rule "times_zero_1" (formula "18") (term "0"))
         (rule "leq_literals" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "17"))
         (rule "inEqSimp_commuteLeq" (formula "12"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "16"))
         (rule "methodCallReturn" (formula "21") (term "1"))
         (rule "assignment" (formula "21") (term "1"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "methodCallEmpty" (formula "21") (term "1"))
         (rule "tryEmpty" (formula "21") (term "1"))
         (rule "emptyModality" (formula "21") (term "1"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
         (rule "replaceKnownSelect_taclet201_0" (formula "21") (term "1,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet201_10" (formula "21") (term "1,1,0,0,0"))
         (rule "eqSymm" (formula "21") (term "1,0,0,1"))
         (rule "applyEq" (formula "21") (term "1,1,0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "allRight" (formula "21") (inst "sk=f_0"))
         (rule "allRight" (formula "21") (inst "sk=o_0"))
         (rule "orRight" (formula "21"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "eqSymm" (formula "23"))
         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
         (rule "simplifySelectOfMemset" (formula "2"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "simplifySelectOfStore" (formula "2"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "simplifySelectOfStore" (formula "2"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "simplifySelectOfStore" (formula "2"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "simplifySelectOfCreate" (formula "2"))
          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
         (rule "castDel" (formula "2") (term "1,0"))
         (rule "eqSymm" (formula "2") (term "0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
         (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "6") (term "0,0"))
         (rule "commute_and" (formula "8") (term "0,0,0"))
         (rule "commute_and" (formula "8") (term "1,0,0"))
         (rule "commute_and" (formula "4") (term "0,0"))
         (rule "commute_and" (formula "3") (term "0,0"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "1") (term "0,0"))
         (rule "cnf_rightDist" (formula "8") (term "0,0"))
         (rule "commute_or" (formula "8") (term "0,0,0"))
         (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
         (rule "commute_or" (formula "8") (term "0,1,0,0"))
         (rule "commute_or" (formula "8") (term "1,1,0,0"))
         (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
         (rule "commute_or" (formula "8") (term "1,0,0,0"))
         (rule "shift_paren_and" (formula "8") (term "0,0"))
         (rule "ifthenelse_split" (formula "7") (term "0"))
         (branch "o_0 = x_arr_2 TRUE"
            (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
            (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "hideAuxiliaryEq" (formula "8"))
            (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "applyEq" (formula "8") (term "0,0,1,1,0,0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "8") (term "0,1,1,0,0") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "ifthenelse_negated" (formula "8") (term "0"))
            (rule "applyEq" (formula "29") (term "1,0,0,1") (ifseqformula "7"))
            (rule "replace_known_right" (formula "29") (term "0,1") (ifseqformula "25"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "notRight" (formula "29"))
            (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "8"))
            (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "8"))
            (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "1"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "8"))
            (rule "close" (formula "27") (ifseqformula "8"))
         )
         (branch "o_0 = x_arr_2 FALSE"
            (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "7"))
            (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0,0,0") (ifseqformula "7"))
            (rule "hideAuxiliaryEq" (formula "7"))
            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "24"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_right" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "commute_and_2" (formula "1") (term "0,0"))
            (rule "commute_and_2" (formula "1") (term "0,0,0"))
            (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
            (rule "commute_and" (formula "1") (term "0,0,0,0"))
            (rule "commute_and_2" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (newObject = null)"
      (rule "false_right" (formula "18"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
