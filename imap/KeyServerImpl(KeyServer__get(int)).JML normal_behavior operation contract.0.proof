\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jan 31 12:58:56 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=50000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}


\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Fri Jan 31 12:58:56 CET 2020
contract=KeyServerImpl[KeyServer\\:\\:get(int)].JML normal_behavior operation contract.0
name=KeyServerImpl[KeyServer\\:\\:get(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "49ea85945cd6c693d72d27b4476aa0916bad8383"))

(autoModeTime "163")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "id,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,0,1,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Class_invariant_axiom_for_KeyServerImpl" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "15"))
(rule "eqSymm" (formula "14"))
(rule "eqSymm" (formula "13"))
(rule "disjointDefinition" (formula "11"))
(rule "disjointDefinition" (formula "9"))
(rule "disjointDefinition" (formula "10"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_get,savedHeapBefore_get"))
 (builtin "One Step Simplification" (formula "20"))
(rule "returnUnfold" (formula "20") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "20") (term "1"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "20") (term "1") (inst "#v0=k"))
(rule "variableDeclaration" (formula "20") (term "1") (newnames "k"))
(rule "assignment_read_attribute_this" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_get_0,result_0,exc_0") (contract "KIMap[KIMap::get(int)].JML normal_behavior operation contract.0"))
(branch "Post (get)"
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "6")))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
   (rule "methodCallReturn" (formula "22") (term "1"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "methodCallEmpty" (formula "22") (term "1"))
   (rule "tryEmpty" (formula "22") (term "1"))
   (rule "emptyModality" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "17")))
   (rule "Class_invariant_axiom_for_KeyServerImpl" (formula "22") (ifseqformula "3"))
   (rule "eqSymm" (formula "22") (term "1,0"))
   (rule "eqSymm" (formula "22") (term "1"))
   (rule "eqSymm" (formula "22") (term "1,0,0"))
   (rule "replace_known_right" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "19"))
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "18")) (ifInst ""  (formula "20")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
   (rule "disjointDefinition" (formula "22") (term "1,0"))
   (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "10"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "disjointDefinition" (formula "22") (term "1"))
   (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "11"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "disjointDefinition" (formula "22"))
   (rule "close" (formula "22") (ifseqformula "9"))
)
(branch "Exceptional Post (get)"
    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "6")))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "16"))
   (rule "close" (formula "19") (ifseqformula "18"))
)
(branch "Pre (get)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
   (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
   (rule "close" (formula "20") (ifseqformula "5"))
)
(branch "Null reference (k = null)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
   (rule "closeTrue" (formula "20"))
)
)
}
