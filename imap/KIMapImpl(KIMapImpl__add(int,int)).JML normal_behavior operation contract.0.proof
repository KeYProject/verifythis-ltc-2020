\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 16 14:08:35 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Mon Dec 16 14:08:35 CET 2019
contract=KIMapImpl[KIMapImpl\\:\\:add(int,int)].JML normal_behavior operation contract.0
name=KIMapImpl[KIMapImpl\\:\\:add(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "weigl" ) (keyVersion "5c71d010aea2ef9b4a159569bd7f9d3d7b0f4027"))

(autoModeTime "1732")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "id,pkey,self,result,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,1,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,1,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,0,0,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,1,0,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,1,0,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "1"))
(rule "mul_literals" (formula "5") (term "1,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,1,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,1,1,0,1,0,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "1,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,1,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,1,1,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,1,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,1,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0"))
(rule "add_literals" (formula "5") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,1,0,1,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "8") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "5"))
(rule "polySimp_mulLiterals" (formula "5") (term "0"))
(rule "polySimp_elimOne" (formula "5") (term "0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "nnf_imp2or" (formula "8") (term "0,0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_KIMapImpl" (formula "6") (inst "j=j") (inst "i=i") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "9") (term "0,1,0,0"))
(rule "eqSymm" (formula "12"))
(rule "eqSymm" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
(rule "polySimp_addComm1" (formula "9") (term "0,1,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0"))
(rule "inEqSimp_sepNegMonomial0" (formula "8"))
(rule "polySimp_mulLiterals" (formula "8") (term "0"))
(rule "polySimp_elimOne" (formula "8") (term "0"))
(rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
(rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
(rule "add_literals" (formula "8") (term "1,1,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0"))
(rule "qeq_literals" (formula "8") (term "0"))
 (builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "nnf_imp2or" (formula "8") (term "0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
(rule "commute_or_2" (formula "8") (term "0,0,0"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_add,savedHeapBefore_add"))
 (builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1"))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "pos"))
 (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_posOfId,result_0,exc_0") (contract "KIMapImpl[KIMapImpl::posOfId(int)].JML normal_behavior operation contract.0"))
(branch "Post (posOfId)"
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1"))
   (rule "polySimp_addComm1" (formula "12") (term "0,1,1"))
   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
   (rule "assignment" (formula "18") (term "1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
   (rule "mul_literals" (formula "11") (term "1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "12") (term "0,1,1"))
   (rule "nnf_imp2or" (formula "11") (term "0,1"))
   (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0,1"))
   (rule "Class_invariant_axiom_for_KIMapImpl" (formula "13") (inst "j=j") (inst "i=i") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "14"))
   (rule "eqSymm" (formula "16") (term "0,1,0,0"))
   (rule "eqSymm" (formula "13"))
   (rule "eqSymm" (formula "16"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
   (rule "polySimp_elimOne" (formula "13") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "5"))
   (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
   (rule "add_literals" (formula "13") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0"))
   (rule "qeq_literals" (formula "13") (term "0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "nnf_imp2or" (formula "13") (term "0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0"))
   (rule "commute_and" (formula "12") (term "1"))
   (rule "commute_or_2" (formula "13") (term "0,0,0"))
   (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "arrayLengthNotNegative" (formula "5") (term "0"))
   (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "18") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "18") (term "1"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,1,0"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "7") (term "0"))
   (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
   (rule "ifSplit" (formula "18"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "assignment_read_attribute_this" (formula "19"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_contradInEq0" (formula "14") (term "0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
      (rule "qeq_literals" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "postincrement_attribute" (formula "17") (term "1") (inst "#v=k"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "k"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "eval_order_access4" (formula "17") (term "1") (inst "#v1=x") (inst "#v0=k_1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "k_1"))
      (rule "assignment" (formula "17") (term "1"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_1"))
      (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x_2"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
      (rule "remove_parentheses_right" (formula "17") (term "1"))
      (rule "compound_addition_1" (formula "17") (term "1") (inst "#v=x_3"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
      (rule "assignment_read_attribute" (formula "17"))
      (branch "Normal Execution (k != null)"
          (builtin "One Step Simplification" (formula "17"))
         (rule "assignmentAdditionInt" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "17") (term "1"))
         (rule "assignment" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "assignment_write_attribute" (formula "17"))
         (branch "Normal Execution (k_1 != null)"
             (builtin "One Step Simplification" (formula "17"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "eval_order_array_access1" (formula "17") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "17") (term "1"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "17"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
            (rule "assignment_to_primitive_array_component" (formula "17"))
            (branch "Normal Execution (x_arr != null)"
                (builtin "One Step Simplification" (formula "17"))
               (rule "eval_order_array_access1" (formula "17") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "17") (term "1"))
               (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "17"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
               (rule "assignment_to_primitive_array_component" (formula "17"))
               (branch "Normal Execution (x_arr_1 != null)"
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallReturn" (formula "17") (term "1"))
                  (rule "assignment" (formula "17") (term "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "tryEmpty" (formula "17") (term "1"))
                  (rule "emptyModality" (formula "17") (term "1"))
                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "8")))
                  (rule "eqSymm" (formula "17") (term "1,0,0,1"))
                  (rule "eqSymm" (formula "17") (term "0,0,0,0"))
                  (rule "polySimp_homoEq" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "17") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "pullOutSelect" (formula "17") (term "0,0,0,1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "17") (term "1,1,0,0,0,1,1,0") (inst "selectSK=KIMapImpl_count_0"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "18") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0,0,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "17") (term "0,0,0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_KIMapImpl" (formula "17") (term "1,0") (inst "j=j") (inst "i=i") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "eqSymm" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0,0,1,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "replaceKnownSelect_taclet000000_3" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_4" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet000000_3" (formula "17") (term "0,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_4" (formula "17") (term "0,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet000000_3" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000000_4" (formula "17") (term "1,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "replace_known_right" (formula "17") (term "0,1,0,0,0,0,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0,1,0"))
                  (rule "replace_known_right" (formula "17") (term "0,0,0,0,0,1,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,0,0,1,0"))
                  (rule "replace_known_left" (formula "17") (term "0,0,0,1,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "0,0,0,1,0"))
                  (rule "replace_known_right" (formula "17") (term "0,0,0,1,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                  (rule "replace_known_left" (formula "17") (term "1,0,1,0") (ifseqformula "6"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,1,0"))
                  (rule "inEqSimp_subsumption1" (formula "17") (term "0,1,0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "17") (term "0,0,1,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "nnf_imp2or" (formula "17") (term "0,0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                        (rule "allRight" (formula "19") (inst "sk=i_0"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "eqSymm" (formula "21") (term "0,0,0"))
                        (rule "eqSymm" (formula "21") (term "0,0,1"))
                        (rule "inEqSimp_geqRight" (formula "20"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "close" (formula "24") (ifseqformula "2"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "19") (inst "sk=j_0"))
                        (rule "allRight" (formula "19") (inst "sk=i_0"))
                        (rule "orRight" (formula "19"))
                        (rule "notRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfStore" (formula "4"))
                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")))
                        (rule "simplifySelectOfStore" (formula "4"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "castDel" (formula "4") (term "1,0"))
                        (rule "eqSymm" (formula "5"))
                        (rule "simplifySelectOfStore" (formula "5"))
                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")))
                        (rule "simplifySelectOfStore" (formula "5"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "castDel" (formula "5") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "self.count = j_0 TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,0"))
                           (rule "times_zero_1" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "15") (term "1,1,0,0,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "allLeft" (formula "18") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "18") (term "0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "1"))
                           (rule "andLeft" (formula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "18"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "1,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0"))
                           (rule "add_literals" (formula "18") (term "0"))
                           (rule "leq_literals" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "self.count = j_0 FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "19"))
                           (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "false_right" (formula "19"))
                           (rule "allLeft" (formula "15") (inst "t=j_0"))
                           (rule "eqSymm" (formula "15") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "self.count = i_0 TRUE"
                              (rule "eqSymm" (formula "5"))
                              (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "16") (term "1,1,0,0,0,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "5"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "self.count = i_0 FALSE"
                              (rule "eqSymm" (formula "4"))
                              (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "4"))
                              (rule "allLeft" (formula "15") (inst "t=i_0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "19") (inst "sk=f_0"))
                     (rule "allRight" (formula "19") (inst "sk=o_0"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_1 = null)"
                  (rule "false_right" (formula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_1 != null, but pos Out of Bounds!)"
                  (rule "false_right" (formula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "8"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr = null)"
               (rule "false_right" (formula "18"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr != null, but pos Out of Bounds!)"
                (builtin "One Step Simplification" (formula "18"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "false_right" (formula "18"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (k_1 = null)"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (k = null)"
         (rule "false_right" (formula "18"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "19"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "inEqSimp_leqRight" (formula "13"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "eval_order_array_access1" (formula "19") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "19"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "assignment_to_primitive_array_component" (formula "19"))
      (branch "Normal Execution (x_arr != null)"
          (builtin "One Step Simplification" (formula "19"))
         (rule "eval_order_array_access1" (formula "19") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "19") (term "1"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_1"))
         (rule "assignment_read_attribute_this" (formula "19"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "dismissNonSelectedField" (formula "19") (term "0,1,0"))
         (rule "assignment_to_primitive_array_component" (formula "19"))
         (branch "Normal Execution (x_arr_1 != null)"
             (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
            (rule "leq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "methodCallReturn" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "tryEmpty" (formula "18") (term "1"))
            (rule "emptyModality" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
            (rule "eqSymm" (formula "18") (term "1,0,0,1"))
            (rule "eqSymm" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_homoEq" (formula "18") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0,0"))
            (rule "replace_known_left" (formula "18") (term "1,0,0,0") (ifseqformula "12"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "pullOutSelect" (formula "18") (term "0,0,0,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "19") (term "0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "18") (term "0,0,0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Class_invariant_axiom_for_KIMapImpl" (formula "18") (term "1,0") (inst "j=j") (inst "i=i") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "eqSymm" (formula "18") (term "0,1,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "1,0,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
            (rule "replace_known_right" (formula "18") (term "0,1,0,0,0,0,1,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,0,1,0"))
            (rule "replace_known_right" (formula "18") (term "0,0,0,0,0,1,0") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "0,1,0,0,1,0"))
            (rule "replace_known_right" (formula "18") (term "0,1,0,0,1,0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "dismissNonSelectedField" (formula "18") (term "0,0,0,0,1,0"))
            (rule "eqSymm" (formula "18") (term "0,0,1,0"))
            (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,0"))
            (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_subsumption1" (formula "18") (term "0,1,0") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
            (rule "qeq_literals" (formula "18") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "nnf_imp2or" (formula "18") (term "0,0,1,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,0"))
            (rule "andRight" (formula "18"))
            (branch "Case 1"
               (rule "andRight" (formula "18"))
               (branch "Case 1"
                  (rule "allRight" (formula "18") (inst "sk=i_0"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "eqSymm" (formula "20") (term "0,0,0"))
                  (rule "eqSymm" (formula "20") (term "0,0,1"))
                  (rule "inEqSimp_leqRight" (formula "18"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "20") (term "1,1") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "pullOutSelect" (formula "21") (term "1,0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfStore" (formula "2"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0,0"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                  (rule "close" (formula "23") (ifseqformula "3"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "18") (inst "sk=j_0"))
                  (rule "allRight" (formula "18") (inst "sk=i_0"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "notRight" (formula "20"))
                  (rule "orRight" (formula "19"))
                  (rule "inEqSimp_geqRight" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "20"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfStore" (formula "4"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "21")))
                  (rule "simplifySelectOfStore" (formula "4"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "castDel" (formula "4") (term "1,0"))
                  (rule "eqSymm" (formula "5"))
                  (rule "simplifySelectOfStore" (formula "5"))
                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")))
                  (rule "simplifySelectOfStore" (formula "5"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "castDel" (formula "5") (term "1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "allLeft" (formula "17") (inst "t=j_0"))
                  (rule "eqSymm" (formula "17") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "leq_literals" (formula "17") (term "0,1,0,0,0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "ifthenelse_split" (formula "4") (term "0"))
                  (branch "result_0 = j_0 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "21") (term "0,2,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "20"))
                     (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0"))
                     (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0,0"))
                     (rule "leq_literals" (formula "5") (term "0,0"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "allLeft" (formula "17") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "1"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0"))
                     (rule "add_literals" (formula "17") (term "0"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
                  (branch "result_0 = j_0 FALSE"
                     (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "result_0 = i_0 TRUE"
                        (rule "eqSymm" (formula "5"))
                        (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "22"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "5"))
                        (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "leq_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "false_right" (formula "21"))
                        (rule "allLeft" (formula "16") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "16") (term "0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "1"))
                        (rule "andLeft" (formula "16"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,1,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0"))
                        (rule "add_literals" (formula "16") (term "0"))
                        (rule "leq_literals" (formula "16"))
                        (rule "closeFalse" (formula "16"))
                     )
                     (branch "result_0 = i_0 FALSE"
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "allLeft" (formula "16") (inst "t=i_0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "closeFalse" (formula "16"))
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "18") (inst "sk=f_0"))
               (rule "allRight" (formula "18") (inst "sk=o_0"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "23"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (x_arr_1 != null, but pos Out of Bounds!)"
            (rule "false_right" (formula "20"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "9"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
            (rule "leq_literals" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "8") (term "0,0"))
            (rule "mul_literals" (formula "8") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "polySimp_elimOne" (formula "8") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "14"))
            (rule "andLeft" (formula "8"))
            (rule "inEqSimp_homoInEq1" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
            (rule "add_literals" (formula "8") (term "1,1,0"))
            (rule "times_zero_1" (formula "8") (term "1,0"))
            (rule "add_literals" (formula "8") (term "0"))
            (rule "leq_literals" (formula "8"))
            (rule "closeFalse" (formula "8"))
         )
      )
      (branch "Null Reference (x_arr = null)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr != null, but pos Out of Bounds!)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "false_right" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_literals" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
         (rule "leq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "14"))
         (rule "andLeft" (formula "8"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "1,1,0"))
         (rule "times_zero_1" (formula "8") (term "1,0"))
         (rule "add_literals" (formula "8") (term "0"))
         (rule "leq_literals" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
   )
)
(branch "Exceptional Post (posOfId)"
    (builtin "One Step Simplification" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "12") (ifseqformula "11"))
)
(branch "Pre (posOfId)"
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_KIMapImpl" (formula "13") (inst "j=j") (inst "i=i") (ifseqformula "3"))
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")) (ifInst ""  (formula "9")))
   (rule "eqSymm" (formula "13") (term "0,1,0,0"))
   (rule "eqSymm" (formula "13") (term "0,0,0"))
   (rule "eqSymm" (formula "13") (term "0,1,0,0,1"))
   (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "6"))
    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0"))
   (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "7"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,0,1"))
   (rule "inEqSimp_subsumption1" (formula "13") (term "0") (ifseqformula "5"))
   (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
   (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0"))
   (rule "qeq_literals" (formula "13") (term "0,0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "allRight" (formula "13") (inst "sk=j_0"))
   (rule "allRight" (formula "13") (inst "sk=i_0"))
   (rule "impRight" (formula "13"))
   (rule "notRight" (formula "14"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "inEqSimp_homoInEq0" (formula "4"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
   (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "arrayLengthNotNegative" (formula "11") (term "0"))
   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
   (rule "allLeft" (formula "13") (inst "t=j_0"))
   (rule "eqSymm" (formula "13") (term "0,1,0"))
   (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
   (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "1"))
   (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0,0,0") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,0"))
   (rule "leq_literals" (formula "13") (term "0,1,0,0,0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "allLeft" (formula "13") (inst "t=i_0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "13") (term "0,0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
   (rule "andLeft" (formula "13"))
   (rule "inEqSimp_homoInEq1" (formula "13"))
   (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
   (rule "add_literals" (formula "13") (term "1,1,0"))
   (rule "times_zero_1" (formula "13") (term "1,0"))
   (rule "add_literals" (formula "13") (term "0"))
   (rule "leq_literals" (formula "13"))
   (rule "closeFalse" (formula "13"))
)
)
}
