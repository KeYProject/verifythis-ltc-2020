\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jan 31 09:54:17 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=3000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Fri Jan 31 09:54:17 CET 2020
contract=KIMapImpl[KIMap\\:\\:put(int,int)].JML normal_behavior operation contract.0
name=KIMapImpl[KIMap\\:\\:put(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "49ea85945cd6c693d72d27b4476aa0916bad8383"))

(autoModeTime "27026")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "key,value,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "assignment" (formula "7") (term "1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "Class_invariant_axiom_for_KIMapImpl" (formula "5") (inst "j=j") (inst "x=x") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "3"))
 (builtin "One Step Simplification" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "10") (term "1,0,1,0"))
(rule "eqSymm" (formula "9") (term "0,1,0,0"))
(rule "eqSymm" (formula "6"))
(rule "eqSymm" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "commuteUnion" (formula "12") (term "1,1"))
(rule "commute_and" (formula "11") (term "0,0"))
(rule "commute_and" (formula "10") (term "0,0,1,0"))
(rule "commute_and" (formula "9") (term "0,0,0,0"))
(rule "commute_and_2" (formula "9") (term "0,0,0"))
(rule "associativeLawUnion" (formula "12") (term "1"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_put,savedHeapBefore_put"))
 (builtin "One Step Simplification" (formula "17"))
(rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x"))
(rule "compound_equality_comparison_2" (formula "17") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute_this" (formula "17"))
 (builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
(rule "eval_order_array_access6" (formula "17") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr"))
(rule "assignment_read_attribute_this" (formula "17"))
 (builtin "One Step Simplification" (formula "17"))
(rule "assignment_read_length" (formula "17"))
(branch "Normal Execution (x_arr != null)"
    (builtin "One Step Simplification" (formula "17"))
   (rule "equality_comparison_simple" (formula "17") (term "1"))
    (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "17") (term "0,0,1,0"))
   (rule "ifSplit" (formula "17"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
      (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
      (rule "methodCallUnfoldArguments" (formula "18") (term "1"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "var"))
      (rule "compound_multiplication_1" (formula "18") (term "1") (inst "#v=x"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_3"))
      (rule "eval_order_array_access6" (formula "18") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_1"))
      (rule "assignment_read_attribute_this" (formula "18"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "assignment_read_length" (formula "18"))
      (branch "Normal Execution (x_arr_1 != null)"
          (builtin "One Step Simplification" (formula "18"))
         (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
         (rule "assignmentMultiplicationInt" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "translateJavaMulInt" (formula "18") (term "0,1,0"))
          (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_resize,exc_0,heapAfter_resize,anon_heap_resize") (contract "KIMapImpl[KIMapImpl::resize(int)].JML normal_behavior operation contract.0"))
         (branch "Post (resize)"
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "20"))
            (rule "notLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "notLeft" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "blockEmpty" (formula "29") (term "1"))
            (rule "pullOutSelect" (formula "17") (term "0,0") (inst "selectSK=KIMapImpl_keys_0"))
            (rule "applyEq" (formula "20") (term "1,0,0,1,0") (ifseqformula "17"))
            (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "17"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
            (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")))
            (rule "eqSymm" (formula "18"))
            (rule "applyEq" (formula "19") (term "1") (ifseqformula "18"))
            (rule "elementOfUnion" (formula "17") (term "0,0"))
            (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "elementOfUnion" (formula "17") (term "0,0"))
            (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "17"))
            (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "17"))
            (rule "hideAuxiliaryEq" (formula "17"))
            (rule "eqSymm" (formula "17"))
            (rule "applyEq" (formula "18") (term "1") (ifseqformula "17"))
            (rule "pullOutSelect" (formula "18") (term "0,0") (inst "selectSK=KIMapImpl_values_0"))
            (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "24") (term "0") (ifseqformula "18"))
            (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")))
            (rule "eqSymm" (formula "19"))
            (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
            (rule "elementOfUnion" (formula "18") (term "0,0"))
            (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "elementOfUnion" (formula "18") (term "0,0"))
            (rule "elementOfSingleton" (formula "18") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "18"))
            (rule "applyEqReverse" (formula "20") (term "1,0,1,1,0") (ifseqformula "18"))
            (rule "hideAuxiliaryEq" (formula "18"))
            (rule "eqSymm" (formula "18"))
            (rule "eqSymm" (formula "17"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
            (rule "eqSymm" (formula "17"))
            (rule "pullOutSelect" (formula "19") (term "1,1,0,0") (inst "selectSK=KIMapImpl_count_0"))
            (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")))
            (rule "elementOfUnion" (formula "19") (term "0,0"))
            (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "elementOfUnion" (formula "19") (term "0,0"))
            (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "elementOfSingleton" (formula "19") (term "0,0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "applyEqReverse" (formula "20") (term "1,1,0,0") (ifseqformula "19"))
            (rule "hideAuxiliaryEq" (formula "19"))
            (rule "bsum_num_of_is_max2" (formula "19") (ifseqformula "6"))
            (rule "polySimp_elimSub" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "1,1"))
            (rule "add_zero_right" (formula "19") (term "1"))
            (rule "commuteUnion_2" (formula "15") (term "1,0"))
            (rule "commuteUnion" (formula "15") (term "0,1,0"))
            (rule "commuteUnion_2" (formula "15") (term "1,0"))
            (rule "Class_invariant_axiom_for_KIMapImpl" (formula "21") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "21") (term "0,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "21") (term "0,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "21") (term "1,1,1,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "21") (term "1,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "21") (term "1,1,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "21") (term "1,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "21") (term "1,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "1,1,0,1,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "21") (term "0,1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "21") (term "1,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,1,1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "21") (term "1,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "1,1,0,1,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "21") (term "0,1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "21") (term "1,1,0,0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "1,0,1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "21") (term "1,1,0,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,0,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,1,1,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "21") (term "1,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "1,0,0,1,0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "1,1,0,1,0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "21") (term "1,1,0,0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "1,0,1,0,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "21") (term "1,1,0,0,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,0,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "1,0,0,1,0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "1,1,0,1,0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "22"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "22"))
            (rule "notLeft" (formula "21"))
            (rule "eqSymm" (formula "26") (term "1,0,1,0"))
            (rule "eqSymm" (formula "25") (term "0,1,0,0"))
            (rule "eqSymm" (formula "29"))
            (rule "eqSymm" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "17"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "18"))
            (rule "eqSymm" (formula "22"))
            (rule "bsum_num_of_is_max2" (formula "25") (ifseqformula "6"))
            (rule "polySimp_elimSub" (formula "25") (term "1"))
            (rule "mul_literals" (formula "25") (term "1,1"))
            (rule "add_zero_right" (formula "25") (term "1"))
            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=KIMap_footprint_0"))
            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")) (ifInst ""  (formula "3")))
            (rule "applyEq" (formula "27") (term "2,0") (ifseqformula "13"))
            (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
            (rule "elementOfUnion" (formula "27") (term "0,0"))
            (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "elementOfUnion" (formula "27") (term "0,0"))
            (rule "elementOfSingleton" (formula "27") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "pullOutSelect" (formula "26") (term "0,0,1,0") (inst "selectSK=KIMap_m_0"))
            (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "26"))
            (rule "applyEq" (formula "25") (term "0,0,0,2,0") (ifseqformula "26"))
            (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "38")) (ifInst ""  (formula "3")))
            (rule "elementOfUnion" (formula "26") (term "0,0"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "bsum_num_of_is_max2" (formula "27") (ifseqformula "6"))
            (rule "polySimp_elimSub" (formula "27") (term "1"))
            (rule "times_zero_2" (formula "27") (term "1,1"))
            (rule "add_zero_right" (formula "27") (term "1"))
            (rule "elementOfUnion" (formula "26") (term "0,0"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "elementOfSingleton" (formula "26") (term "0,0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "27") (term "0,0,1,0") (ifseqformula "26"))
            (rule "applyEqReverse" (formula "25") (term "0,0,0,2,0") (ifseqformula "26"))
            (rule "hideAuxiliaryEq" (formula "26"))
            (rule "bsum_num_of_is_max2" (formula "26") (ifseqformula "6"))
            (rule "polySimp_elimSub" (formula "26") (term "1"))
            (rule "mul_literals" (formula "26") (term "1,1"))
            (rule "add_zero_right" (formula "26") (term "1"))
            (rule "commuteUnion" (formula "28") (term "1,1"))
            (rule "commuteUnion" (formula "27") (term "1,1"))
            (rule "commute_and" (formula "20") (term "0,0"))
            (rule "commute_and" (formula "26") (term "0,0"))
             (builtin "Use Operation Contract" (formula "38") (newnames "heapBefore_add,result,exc_1,heapAfter_add,anon_heap_add") (contract "KIMapImpl[KIMapImpl::add(int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (add)"
                (builtin "One Step Simplification" (formula "40"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "30") (term "0,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "30") (term "0,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "30") (term "1,0,0,0,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "30") (term "1,0,0,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "30") (term "0,1,0,1,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet0000_7" (formula "30") (term "0,1,0,1,1,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "30") (term "0,1,0,1,0,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_8" (formula "30") (term "0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "30") (term "1,1,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "30") (term "1,0,1,0,1,0,1,1"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "36"))
               (rule "eqSymm" (formula "33") (term "1,1"))
               (rule "eqSymm" (formula "36"))
               (rule "polySimp_elimSub" (formula "33") (term "0,1,1"))
               (rule "mul_literals" (formula "33") (term "1,0,1,1"))
               (rule "polySimp_addComm0" (formula "33") (term "1,0,1"))
               (rule "polySimp_addComm0" (formula "33") (term "0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "32"))
               (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=KIMapImpl_count_1"))
               (rule "applyEq" (formula "34") (term "1,0,1,1") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "33"))
               (rule "applyEq" (formula "34") (term "0,0,1") (ifseqformula "33"))
               (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "47")))
               (rule "replaceKnownSelect_taclet0000_4" (formula "33") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "33") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "34") (term "0,0"))
               (rule "eqSymm" (formula "34") (term "1,1"))
               (rule "replace_known_left" (formula "33") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "elementOfUnion" (formula "33") (term "0,0"))
               (rule "elementOfSingleton" (formula "33") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "elementOfUnion" (formula "33") (term "0,0"))
               (rule "elementOfSingleton" (formula "33") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "33"))
               (rule "applyEqReverse" (formula "34") (term "1,1,1,1") (ifseqformula "33"))
               (rule "applyEqReverse" (formula "34") (term "0,0,1") (ifseqformula "33"))
               (rule "applyEqReverse" (formula "34") (term "1,0,0") (ifseqformula "33"))
               (rule "hideAuxiliaryEq" (formula "33"))
               (rule "eqSymm" (formula "33") (term "0,0"))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "36"))
               (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
               (rule "hideAuxiliaryEq" (formula "36"))
               (rule "elementOfUnion" (formula "35") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfUnion" (formula "35") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfUnion" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,1,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "35"))
               (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "elementOfUnion" (formula "34") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "34") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "pullOutSelect" (formula "36") (term "1") (inst "selectSK=KIMap_m_1"))
               (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
               (rule "replaceKnownSelect_taclet0000_7" (formula "36") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_8" (formula "36") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "elementOfUnion" (formula "36") (term "0,0"))
               (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "eqSymm" (formula "36"))
               (rule "pullOutSelect" (formula "35") (term "2,0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfUnion" (formula "35") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfUnion" (formula "35") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "35") (term "1,0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "elementOfSingleton" (formula "35") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "pullOutSelect" (formula "36") (term "1,0,0,0,1,1,0,0") (inst "selectSK=KIMapImpl_values_1"))
               (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "36"))
               (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "36"))
               (rule "applyEq" (formula "37") (term "1,0,1,0,1,1,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "37") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "35") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "36"))
               (rule "applyEq" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "37") (term "0,0,0,1,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "37") (term "0,1,0,0,0") (ifseqformula "36"))
               (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "37") (term "0,0,0,0"))
               (rule "eqSymm" (formula "37") (term "1,0,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "elementOfUnion" (formula "36") (term "0,0"))
               (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "elementOfUnion" (formula "36") (term "0,0"))
               (rule "elementOfSingleton" (formula "36") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "elementOfUnion" (formula "36") (term "0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "eqSymm" (formula "36") (term "1,0,0"))
               (rule "eqSymm" (formula "36") (term "0,0,0"))
               (rule "sortsDisjointModuloNull" (formula "36") (term "1,0,0"))
               (rule "replace_known_right" (formula "36") (term "1,1,0,0") (ifseqformula "48"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "43")))
               (rule "sortsDisjointModuloNull" (formula "36") (term "0,0"))
               (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "48")))
               (rule "applyEqReverse" (formula "37") (term "1,0,0,0,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "35") (term "1,1,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "35") (term "1,2,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "37") (term "1,1,0,0,0") (ifseqformula "36"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0") (ifseqformula "36"))
               (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "36"))
               (rule "hideAuxiliaryEq" (formula "36"))
               (rule "replace_known_right" (formula "35") (term "0,1,0,0") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "42")))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "pullOutSelect" (formula "34") (term "1,1,0") (inst "selectSK=KIMapImpl_keys_1"))
               (rule "applyEq" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "35") (term "0,1,0,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "35") (term "1,0,0,0,1,1,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "35") (term "0,0,0,0,0") (ifseqformula "34"))
               (rule "applyEq" (formula "35") (term "1,2,0") (ifseqformula "34"))
               (rule "applyEq" (formula "35") (term "1,0,1,0,1,1,0,0") (ifseqformula "34"))
               (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "47")))
               (rule "replaceKnownSelect_taclet0000_0" (formula "34") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "34") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0,0") (ifseqformula "15"))
               (rule "eqSymm" (formula "35") (term "1,0,0,0"))
               (rule "eqSymm" (formula "35") (term "0,0,0,0"))
               (rule "replace_known_left" (formula "34") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0"))
               (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0"))
               (rule "elementOfSingleton" (formula "34") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "eqSymm" (formula "34") (term "0,0,0"))
               (rule "eqSymm" (formula "34") (term "1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
               (rule "replace_known_right" (formula "34") (term "1,0,0,0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
               (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
               (rule "replace_known_right" (formula "34") (term "1,0,0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")))
               (rule "applyEqReverse" (formula "35") (term "1,0,1,0,1,1,0,0") (ifseqformula "34"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,0,1,1,0,0") (ifseqformula "34"))
               (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "34"))
               (rule "applyEqReverse" (formula "35") (term "1,0,0,0,0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
               (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "34"))
               (rule "hideAuxiliaryEq" (formula "34"))
               (rule "commuteUnion_2" (formula "30") (term "1,0"))
               (rule "commuteUnion_2" (formula "30") (term "0,1,0"))
               (rule "commuteUnion_2" (formula "30") (term "1,0"))
               (rule "commuteUnion" (formula "30") (term "0,0,1,0"))
               (rule "commuteUnion_2" (formula "30") (term "0,1,0"))
               (rule "commute_and" (formula "24") (term "0,0,1,0"))
               (rule "commute_and" (formula "23") (term "0,0,0,0"))
               (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "arrayLengthNotNegative" (formula "7") (term "0"))
               (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
               (rule "commute_and" (formula "33") (term "1"))
               (rule "commute_and" (formula "33") (term "0"))
               (rule "associativeLawUnion" (formula "28") (term "1"))
               (rule "associativeLawUnion" (formula "27") (term "1"))
               (rule "arrayLengthNotNegative" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "methodCallEmpty" (formula "47") (term "1"))
               (rule "Class_invariant_axiom_for_KIMapImpl" (formula "37") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "replaceKnownSelect_taclet00000_18" (formula "37") (term "0,0,1,1,1"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,1,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "37") (term "0,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,1,1,1,1"))
               (rule "replaceKnownSelect_taclet00000_15" (formula "37") (term "0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "37") (term "1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_18" (formula "37") (term "1,1,1,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_15" (formula "37") (term "0,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_16" (formula "37") (term "0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "37") (term "1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "37") (term "1,1,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_16" (formula "37") (term "0,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "37") (term "1,0,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "1,1,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "37") (term "0,1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,0,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_18" (formula "37") (term "1,0,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,1,1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "37") (term "1,0,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "1,1,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "37") (term "0,1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "37") (term "1,1,0,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00000_9" (formula "37") (term "1,1,0,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,0,1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_18" (formula "37") (term "0,1,1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "1,0,1,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,0,1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "37") (term "1,0,1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,1,1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "1,1,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_21" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_18" (formula "37") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "37") (term "1,1,0,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "37") (term "1,1,0,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,0,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "37") (term "0,1,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "1,0,1,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "1,1,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "37") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "37") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "38"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "38"))
               (rule "notLeft" (formula "37"))
               (rule "eqSymm" (formula "42") (term "1,0,1,0"))
               (rule "eqSymm" (formula "41") (term "0,1,0,0"))
               (rule "eqSymm" (formula "45"))
               (rule "eqSymm" (formula "38"))
               (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "39"))
               (rule "inEqSimp_commuteLeq" (formula "40"))
               (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "36"))
               (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "36"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "17"))
               (rule "inEqSimp_commuteGeq" (formula "40"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "17"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "37"))
               (rule "applyEq" (formula "36") (term "1") (ifseqformula "17"))
               (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=KIMap_footprint_1"))
               (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
               (rule "replaceKnownSelect_taclet0000_6" (formula "42") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "42") (term "0,0,1,0,0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "applyEq" (formula "42") (term "1") (ifseqformula "43"))
               (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "27"))
               (rule "elementOfUnion" (formula "42") (term "0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "eqSymm" (formula "42") (term "1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "42") (term "1,0,0"))
               (rule "replace_known_right" (formula "42") (term "0,1,0,0") (ifseqformula "47"))
                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
               (rule "elementOfUnion" (formula "42") (term "0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "eqSymm" (formula "42") (term "1,0,0"))
               (rule "sortsDisjointModuloNull" (formula "42") (term "1,0,0"))
               (rule "replace_known_right" (formula "42") (term "1,1,0,0") (ifseqformula "52"))
                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "45")))
               (rule "elementOfUnion" (formula "42") (term "0,0"))
               (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "elementOfSingleton" (formula "42") (term "0,0"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "eqSymm" (formula "42"))
               (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
               (rule "commuteUnion" (formula "42") (term "1,0"))
               (rule "eqSymm" (formula "42"))
               (rule "applyEq" (formula "43") (term "1") (ifseqformula "42"))
               (rule "applyEq" (formula "27") (term "1") (ifseqformula "42"))
               (rule "applyEq" (formula "26") (term "1") (ifseqformula "42"))
               (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
               (rule "cnf_rightDist" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "commute_and_2" (formula "23") (term "0,0,0"))
               (rule "commute_or" (formula "33"))
               (rule "commute_and" (formula "43") (term "0,0"))
               (rule "tryEmpty" (formula "55") (term "1"))
               (rule "cnf_rightDist" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "commute_or" (formula "34"))
               (rule "cnf_rightDist" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "commute_or" (formula "33"))
               (rule "commute_or" (formula "34"))
               (rule "commute_and" (formula "44") (term "0,0,1,0"))
               (rule "commute_and" (formula "43") (term "0,0,0,0"))
               (rule "associativeLawUnion" (formula "46") (term "1"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "true_left" (formula "46"))
               (rule "associativeLawUnion" (formula "46") (term "1"))
               (rule "associativeLawUnion" (formula "28") (term "1"))
               (rule "associativeLawUnion" (formula "27") (term "1"))
               (rule "commute_and_2" (formula "43") (term "0,0,0"))
               (rule "emptyModality" (formula "56") (term "1"))
               (rule "andRight" (formula "56"))
               (branch "Case 1"
                  (rule "andRight" (formula "56"))
                  (branch "Case 1"
                     (rule "andRight" (formula "56"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "replaceKnownSelect_taclet00000_15" (formula "56") (term "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_16" (formula "56") (term "1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "closeTrue" (formula "56"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "polySimp_homoEq" (formula "33") (term "1"))
                        (rule "polySimp_homoEq" (formula "34") (term "0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,0"))
                        (rule "times_zero_1" (formula "9") (term "0"))
                        (rule "leq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                        (rule "mul_literals" (formula "32") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "33") (term "0"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                        (rule "mul_literals" (formula "33") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "33") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                        (rule "mul_literals" (formula "6") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                        (rule "inEqSimp_invertInEq0" (formula "21"))
                        (rule "mul_literals" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "6"))
                        (rule "mul_literals" (formula "16") (term "1,1,0"))
                        (rule "greater_literals" (formula "16") (term "0,0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "6"))
                        (rule "mul_literals" (formula "19") (term "1,1,0"))
                        (rule "greater_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                        (rule "leq_literals" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                        (rule "mul_literals" (formula "36") (term "0,0"))
                        (rule "add_zero_left" (formula "36") (term "0"))
                        (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "6"))
                        (rule "greater_literals" (formula "36") (term "0,0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "mul_literals" (formula "36") (term "1,0"))
                        (rule "leq_literals" (formula "36") (term "0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "inEqSimp_or_subsumption6" (formula "28"))
                        (rule "inEqSimp_gtToGeq" (formula "28") (term "0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,1"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,1"))
                        (rule "qeq_literals" (formula "28") (term "0,1"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "36"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                        (rule "mul_literals" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1"))
                        (rule "mul_literals" (formula "28") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "38") (term "0,0"))
                        (rule "nnf_imp2or" (formula "8") (term "0,0"))
                        (rule "nnf_imp2or" (formula "40") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                        (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "40") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                        (rule "mul_literals" (formula "40") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "38") (term "0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0"))
                        (rule "commute_and" (formula "39") (term "0,0,1,0"))
                        (rule "commute_and" (formula "9") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "commute_and" (formula "19") (term "0,0,1,0"))
                        (rule "commute_or_2" (formula "40") (term "0"))
                        (rule "Class_invariant_axiom_for_KIMapImpl" (formula "51") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "replaceKnownSelect_taclet00000_23" (formula "51") (term "0,1"))
                        (rule "replaceKnownSelect_taclet00000_18" (formula "51") (term "0,0,1,1,1"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,1,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "51") (term "0,0,1,1,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,1,1,1,1"))
                        (rule "replaceKnownSelect_taclet00000_15" (formula "51") (term "0,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00000_18" (formula "51") (term "1,1,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00000_9" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet00000_15" (formula "51") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_16" (formula "51") (term "0,0,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "51") (term "1,1,1,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_16" (formula "51") (term "0,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00000_9" (formula "51") (term "1,0,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_9" (formula "51") (term "0,1,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "1,1,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00000_18" (formula "51") (term "1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,1,1,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "51") (term "1,0,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "51") (term "0,1,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "1,1,0,1,0,1,0"))
                        (rule "replaceKnownSelect_taclet00000_9" (formula "51") (term "1,1,0,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "1,0,1,0,1,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet00000_9" (formula "51") (term "1,1,0,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_18" (formula "51") (term "0,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "51") (term "1,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,0,1,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,1,1,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "1,1,0,1,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "1,0,0,1,0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_18" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet00000_21" (formula "51") (term "0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "51") (term "1,1,0,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "1,0,1,0,1,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_10" (formula "51") (term "1,1,0,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "51") (term "0,1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "1,1,0,1,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "1,0,0,1,0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_19" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000_22" (formula "51") (term "0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "eqSymm" (formula "51") (term "0,1,0,0,0,0,0"))
                        (rule "eqSymm" (formula "51") (term "1,0,1,0,1,0,0"))
                        (rule "eqSymm" (formula "51") (term "1,0,0,0,0,0,0"))
                        (rule "eqSymm" (formula "51") (term "0,1,0,0,1,0,0,0"))
                        (rule "replace_known_right" (formula "51") (term "0,1,0,0,0,0,0") (ifseqformula "42"))
                         (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "43")) (ifInst ""  (formula "45")))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "51") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "51") (term "1,0,0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1,0,0,1,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "1,1,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "51") (term "0,1,0,0,0,0"))
                        (rule "replace_known_left" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "applyEq" (formula "51") (term "0,1,0,0,0,0,0") (ifseqformula "35"))
                        (rule "eqSymm" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "replace_known_left" (formula "51") (term "1,0,0,0,0,0") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "34"))
                        (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "41"))
                        (rule "eqSymm" (formula "51") (term "1"))
                        (rule "applyEq" (formula "51") (term "0,1,0,0,0,0") (ifseqformula "15"))
                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0"))
                        (rule "replace_known_left" (formula "51") (term "1,0,0,0,0") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "applyEq" (formula "51") (term "0,0,1,0,1,0") (ifseqformula "34"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,1,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "1,0,0,0,0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0,0,0,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "0,1,0,0,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,0,1,0,0"))
                        (rule "replace_known_left" (formula "51") (term "1,0,0") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_subsumption6" (formula "51") (term "0,0,0") (ifseqformula "6"))
                        (rule "greater_literals" (formula "51") (term "0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0,0"))
                        (rule "leq_literals" (formula "51") (term "0,0,0,0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "commuteUnion" (formula "51") (term "1,0,1"))
                        (rule "eqSymm" (formula "51") (term "1"))
                        (rule "nnf_imp2or" (formula "51") (term "0,1,0"))
                        (rule "nnf_imp2or" (formula "51") (term "0,0,0,0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,1,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,1,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,0"))
                        (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "arrayLengthNotNegative" (formula "35") (term "0"))
                        (rule "applyEq" (formula "35") (term "0") (ifseqformula "36"))
                        (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "6"))
                        (rule "mul_literals" (formula "35") (term "1,1,0"))
                        (rule "greater_literals" (formula "35") (term "0,0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "leq_literals" (formula "35") (term "0"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "commute_or_2" (formula "38") (term "0,0,0"))
                        (rule "commute_or_2" (formula "8") (term "0,0,0"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or" (formula "40") (term "0,0"))
                        (rule "commute_or_2" (formula "18") (term "0,0,0"))
                        (rule "cnf_eqv" (formula "39") (term "0"))
                        (rule "nnf_notEx" (formula "39") (term "1,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,1,0,0"))
                        (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0"))
                        (rule "cnf_eqv" (formula "9") (term "0"))
                        (rule "nnf_notEx" (formula "9") (term "1,0,0"))
                        (rule "nnf_notAnd" (formula "9") (term "0,1,0,0"))
                        (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0"))
                        (rule "cnf_eqv" (formula "19") (term "0"))
                        (rule "nnf_notEx" (formula "19") (term "1,0,0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,1,0,0"))
                        (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0"))
                        (rule "distr_forallAnd" (formula "39"))
                        (rule "andLeft" (formula "39"))
                        (rule "distr_forallAnd" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "distr_forallAnd" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "commute_or" (formula "11") (term "0,0"))
                        (rule "commute_or_2" (formula "23") (term "0"))
                        (rule "commute_or_2" (formula "43") (term "0"))
                        (rule "cnf_rightDist" (formula "18") (term "0"))
                        (rule "distr_forallAnd" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "commute_or" (formula "41") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "commute_or" (formula "8") (term "0,0,0,0"))
                        (rule "commute_or" (formula "20") (term "0,0,0,0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "commute_or" (formula "19") (term "0"))
                        (rule "commute_or_2" (formula "41") (term "0,0,0"))
                        (rule "commute_or_2" (formula "8") (term "0,0,0"))
                        (rule "commute_or_2" (formula "20") (term "0,0,0"))
                        (rule "associativeLawUnion" (formula "55") (term "1,1"))
                         (builtin "One Step Simplification" (formula "55"))
                        (rule "allRight" (formula "55") (inst "sk=j_0"))
                        (rule "orRight" (formula "55"))
                        (rule "orRight" (formula "55"))
                        (rule "inEqSimp_geqRight" (formula "56"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "56"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "57") (term "1,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "49"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "57") (term "1") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "53"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "42"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "ex_pull_out3" (formula "46") (term "0"))
                        (rule "cnf_rightDist" (formula "46") (term "0,0"))
                        (rule "commute_or" (formula "46") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "46") (term "0,0,0"))
                        (rule "commute_or" (formula "46") (term "1,0,0,0"))
                        (rule "ex_pull_out3" (formula "13") (term "0"))
                        (rule "cnf_rightDist" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                        (rule "commute_or" (formula "13") (term "1,0,0,0"))
                        (rule "ex_pull_out3" (formula "25") (term "0"))
                        (rule "cnf_rightDist" (formula "25") (term "0,0"))
                        (rule "commute_or" (formula "25") (term "1,0,0"))
                        (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                        (rule "commute_or" (formula "25") (term "1,0,0,0"))
                        (rule "all_pull_out3" (formula "45") (term "0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0"))
                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                        (rule "swapQuantifiersAll" (formula "45"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "all_pull_out3" (formula "12") (term "0"))
                        (rule "shift_paren_or" (formula "12") (term "0,0"))
                        (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                        (rule "swapQuantifiersAll" (formula "12"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "all_pull_out3" (formula "24") (term "0"))
                        (rule "shift_paren_or" (formula "24") (term "0,0"))
                        (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                        (rule "swapQuantifiersAll" (formula "24"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "1,1,0,0,2,0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,1,0,1") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0") (ifseqformula "17"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "allLeft" (formula "51") (inst "t=j_0"))
                        (rule "replaceKnownSelect_taclet10000000_26" (formula "51") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000000_27" (formula "51") (term "1,0,0"))
                        (rule "replaceKnownSelect_taclet10000000_24" (formula "51") (term "1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10000000_25" (formula "51") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "51") (term "0,0"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "51"))
                        (rule "andLeft" (formula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,1,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0"))
                        (rule "add_literals" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "closeTrue" (formula "56"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "allRight" (formula "56") (inst "sk=f_0"))
                  (rule "allRight" (formula "56") (inst "sk=o_0"))
                  (rule "orRight" (formula "56"))
                  (rule "orRight" (formula "56"))
                  (rule "eqSymm" (formula "58"))
                  (rule "polySimp_homoEq" (formula "34") (term "0"))
                  (rule "polySimp_homoEq" (formula "33") (term "1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                  (rule "add_literals" (formula "22") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "times_zero_1" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "55") (term "2") (ifseqformula "12"))
                  (rule "polySimp_sepPosMonomial" (formula "33") (term "0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                  (rule "mul_literals" (formula "32") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                  (rule "mul_literals" (formula "20") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                  (rule "inEqSimp_invertInEq0" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "6"))
                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "6"))
                  (rule "greater_literals" (formula "18") (term "0,0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1,0"))
                  (rule "leq_literals" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "elementOfUnion" (formula "51"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "orRight" (formula "51"))
                  (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "14"))
                  (rule "eqSymm" (formula "55"))
                  (rule "elementOfUnion" (formula "52"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "orRight" (formula "52"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                  (rule "mul_literals" (formula "37") (term "0,0"))
                  (rule "add_zero_left" (formula "37") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "7"))
                  (rule "mul_literals" (formula "37") (term "1,1,0"))
                  (rule "greater_literals" (formula "37") (term "0,0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "leq_literals" (formula "37") (term "0"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "true_left" (formula "37"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_or_subsumption6" (formula "29"))
                  (rule "inEqSimp_gtToGeq" (formula "29") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "29") (term "0,0,1"))
                  (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                  (rule "add_literals" (formula "29") (term "0,0,1"))
                  (rule "qeq_literals" (formula "29") (term "0,1"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "37"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                  (rule "mul_literals" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                  (rule "mul_literals" (formula "29") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,0"))
                  (rule "nnf_imp2or" (formula "19") (term "0,0"))
                  (rule "nnf_imp2or" (formula "9") (term "0,0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "41") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "cnf_eqv" (formula "40") (term "0"))
                  (rule "nnf_notEx" (formula "40") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,1,0,0,1,0,0"))
                  (rule "cnf_eqv" (formula "10") (term "0"))
                  (rule "nnf_notEx" (formula "10") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,1,0,0"))
                  (rule "commute_and" (formula "20") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_and" (formula "1") (term "0,0,0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or_2" (formula "41") (term "0"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "37"))
                  (rule "inEqSimp_subsumption6" (formula "36") (ifseqformula "7"))
                  (rule "greater_literals" (formula "36") (term "0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "mul_literals" (formula "36") (term "1,0"))
                  (rule "leq_literals" (formula "36") (term "0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "true_left" (formula "36"))
                  (rule "cut_direct" (formula "55") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "false_right" (formula "56"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEqRigid" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "45"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "notRight" (formula "56"))
                     (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")))
                     (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "distr_forallAnd" (formula "41"))
                     (rule "andLeft" (formula "41"))
                     (rule "distr_forallAnd" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "44") (term "0,0"))
                     (rule "commute_or_2" (formula "24") (term "0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "44") (term "0"))
                     (rule "cnf_rightDist" (formula "20") (term "0"))
                     (rule "distr_forallAnd" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "commute_or" (formula "21") (term "0"))
                     (rule "commute_or" (formula "43") (term "0,0,1,0"))
                     (rule "commute_or" (formula "11") (term "0,0,1,0"))
                     (rule "commute_or" (formula "42") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "42") (term "0,0,0"))
                     (rule "commute_or" (formula "22") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or" (formula "10") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "10") (term "0,0,0"))
                     (rule "cnf_eqv" (formula "23") (term "0"))
                     (rule "nnf_notEx" (formula "23") (term "1,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,1,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0"))
                     (rule "distr_forallAnd" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "commute_and" (formula "45") (term "0,0,1,0"))
                     (rule "commute_and" (formula "12") (term "0,0,1,0"))
                     (rule "all_pull_out3" (formula "44") (term "0"))
                     (rule "shift_paren_or" (formula "44") (term "0,0"))
                     (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                     (rule "swapQuantifiersAll" (formula "44"))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "all_pull_out3" (formula "11") (term "0"))
                     (rule "shift_paren_or" (formula "11") (term "0,0"))
                     (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                     (rule "swapQuantifiersAll" (formula "11"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "ex_pull_out3" (formula "24") (term "0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0"))
                     (rule "commute_or" (formula "24") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                     (rule "commute_or" (formula "24") (term "1,0,0,0"))
                     (rule "ex_pull_out3" (formula "45") (term "0"))
                     (rule "cnf_rightDist" (formula "45") (term "0,0"))
                     (rule "commute_or" (formula "45") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "45") (term "0,0,0"))
                     (rule "commute_or" (formula "45") (term "1,0,0,0"))
                     (rule "ex_pull_out3" (formula "12") (term "0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch " !f_0 = java.lang.Object::<created> & ( o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> | o_0 = self.values@anon_heap_resize<<anonHeapFunction>>) TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "notLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "62"))
                        (rule "all_pull_out3" (formula "23") (term "0"))
                        (rule "shift_paren_or" (formula "23") (term "0,0"))
                        (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                        (rule "swapQuantifiersAll" (formula "23"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "allLeft" (formula "46") (inst "t=result"))
                        (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "34"))
                        (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                        (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "46") (term "0,0,1"))
                        (rule "leq_literals" (formula "46") (term "0,1"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "32"))
                        (rule "qeq_literals" (formula "46") (term "0,1"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "pullOutSelect" (formula "46") (term "1") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "54")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "38"))
                        (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "46"))
                        (rule "hideAuxiliaryEq" (formula "46"))
                        (rule "pullOutSelect" (formula "46") (term "1,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "replace_known_right" (formula "46") (term "0,0,1,0,0") (ifseqformula "53"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "37"))
                        (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "eqSymm" (formula "46") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "46") (term "1,0,0,0") (ifseqformula "51"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "elementOfUnion" (formula "46") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "46"))
                        (rule "hideAuxiliaryEq" (formula "46"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "1") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0,0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "allLeft" (formula "48") (inst "t=result"))
                        (rule "replaceKnownSelect_taclet01100000_30" (formula "48") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "48") (term "1,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "36"))
                        (rule "qeq_literals" (formula "48") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "inEqSimp_contradInEq1" (formula "48") (term "1") (ifseqformula "38"))
                        (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                        (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "48") (term "0,0,1"))
                        (rule "leq_literals" (formula "48") (term "0,1"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "allLeft" (formula "50") (inst "t=key<<origin(\"ensures @ file KIMapImpl.java @ line 143\",\"[]\")>>"))
                        (rule "exLeft" (formula "50") (inst "sk=j_0_0"))
                        (rule "andLeft" (formula "50"))
                        (rule "andLeft" (formula "50"))
                        (rule "eqSymm" (formula "52") (term "1"))
                        (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "inEqSimp_homoInEq0" (formula "51"))
                        (rule "polySimp_addComm1" (formula "51") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1"))
                        (rule "polySimp_rightDist" (formula "51") (term "1"))
                        (rule "mul_literals" (formula "51") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                        (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "60")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "20"))
                        (rule "eqSymm" (formula "53"))
                        (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                        (rule "hideAuxiliaryEq" (formula "53"))
                        (rule "replace_known_right" (formula "52") (term "0,0,1,0,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "3")))
                        (rule "elementOfUnion" (formula "52") (term "0,0"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "eqSymm" (formula "52") (term "1,0,0"))
                        (rule "replace_known_right" (formula "52") (term "1,0,0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "elementOfUnion" (formula "52") (term "0,0"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "46"))
                        (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                        (rule "mul_literals" (formula "51") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                        (rule "polySimp_mulComm0" (formula "51") (term "1"))
                        (rule "polySimp_rightDist" (formula "51") (term "1"))
                        (rule "mul_literals" (formula "51") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                        (rule "allLeft" (formula "49") (inst "t=j_0_0"))
                        (rule "replaceKnownSelect_taclet01100000_32" (formula "49") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "49") (term "1,0,0"))
                        (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "48"))
                         (builtin "One Step Simplification" (formula "49"))
                        (rule "true_left" (formula "49"))
                        (rule "allLeft" (formula "56") (inst "t=j_0_0"))
                        (rule "replaceKnownSelect_taclet01100000_32" (formula "56") (term "1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "56") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "56") (term "1"))
                        (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "55"))
                        (rule "eqSymm" (formula "56") (term "0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0") (ifseqformula "50"))
                        (rule "qeq_literals" (formula "56") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "inEqSimp_contradInEq1" (formula "56") (term "1") (ifseqformula "52"))
                        (rule "inEqSimp_homoInEq1" (formula "56") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1"))
                        (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "56") (term "0,0,1"))
                        (rule "leq_literals" (formula "56") (term "0,1"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "20"))
                        (rule "eqSymm" (formula "57"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "57"))
                        (rule "hideAuxiliaryEq" (formula "57"))
                        (rule "replace_known_left" (formula "56") (term "1,0,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")))
                        (rule "elementOfUnion" (formula "56") (term "0,0"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "allLeft" (formula "17") (inst "t=result"))
                        (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "37"))
                        (rule "qeq_literals" (formula "17") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "17"))
                        (rule "allLeft" (formula "26") (inst "t=result"))
                        (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "38"))
                        (rule "qeq_literals" (formula "26") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "pullOutSelect" (formula "26") (term "0,1") (inst "selectSK=arr_7"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "66")) (ifInst ""  (formula "67")))
                        (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "allLeft" (formula "59") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                        (rule "replaceKnownSelect_taclet01100000_28" (formula "59") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_29" (formula "59") (term "1,0,0"))
                        (rule "replaceKnownSelect_taclet01100000_30" (formula "59") (term "1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "59") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "59"))
                        (rule "true_left" (formula "59"))
                        (rule "allLeft" (formula "51") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                        (rule "replaceKnownSelect_taclet01100000_30" (formula "51") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "51") (term "1,0,0"))
                        (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "51"))
                        (rule "allLeft" (formula "25") (inst "t=result"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "39"))
                        (rule "qeq_literals" (formula "25") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_8"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                        (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "allLeft" (formula "33") (inst "t=result"))
                        (rule "replaceKnownSelect_taclet01100000_36" (formula "33") (term "1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_37" (formula "33") (term "1,0,0"))
                        (rule "replaceKnownSelect_taclet01100000_38" (formula "33") (term "1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "33") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "40"))
                        (rule "qeq_literals" (formula "33") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "allLeft" (formula "15") (inst "t=result"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "41"))
                        (rule "qeq_literals" (formula "15") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "cut_direct" (formula "28") (term "0"))
                        (branch "CUT: self.count <= result TRUE"
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_exactShadow1" (formula "52") (ifseqformula "25"))
                           (rule "greater_literals" (formula "52") (term "0"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                           (rule "mul_literals" (formula "52") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "52") (term "1"))
                           (rule "polySimp_rightDist" (formula "52") (term "1"))
                           (rule "mul_literals" (formula "52") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "25"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "12"))
                           (rule "leq_literals" (formula "38") (term "0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "inEqSimp_exactShadow1" (formula "38") (ifseqformula "26"))
                           (rule "greater_literals" (formula "38") (term "0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0"))
                           (rule "add_literals" (formula "38") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1"))
                           (rule "allLeft" (formula "25") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "52"))
                           (rule "qeq_literals" (formula "25") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                           (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "25"))
                           (rule "hideAuxiliaryEq" (formula "25"))
                           (rule "allLeft" (formula "30") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet001100000_40" (formula "30") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001100000_41" (formula "30") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "53"))
                           (rule "qeq_literals" (formula "30") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "16") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "54"))
                           (rule "qeq_literals" (formula "16") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "allLeft" (formula "51") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet01100000_32" (formula "51") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "51") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "51") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "51") (term "1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "51") (term "1,0,0,0") (ifseqformula "58"))
                           (rule "inEqSimp_homoInEq1" (formula "51") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "51") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "allLeft" (formula "35") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet001100000_40" (formula "35") (term "1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001100000_41" (formula "35") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "56"))
                           (rule "qeq_literals" (formula "35") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "pullOutSelect" (formula "35") (term "1,0") (inst "selectSK=arr_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "22"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                           (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "19") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "57"))
                           (rule "qeq_literals" (formula "19") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "30") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet001100000_42" (formula "30") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001100000_43" (formula "30") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "58"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "55") (inst "t=result"))
                           (rule "replaceKnownSelect_taclet01100000_30" (formula "55") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "55") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "55") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "55") (term "1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0,0,0") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq1" (formula "55") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "55") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "55") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "allLeft" (formula "15") (inst "t=j_0_0"))
                           (rule "eqSymm" (formula "15") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "allLeft" (formula "33") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet001100000_40" (formula "33") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001100000_41" (formula "33") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "33") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
                           (rule "commute_or_2" (formula "33") (term "0,0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "cut_direct" (formula "15") (term "1,0"))
                           (branch "CUT: self.count <= j_0_0 TRUE"
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "15"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "15"))
                              (rule "mul_literals" (formula "13") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "13"))
                              (rule "leq_literals" (formula "55") (term "0"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "inEqSimp_exactShadow1" (formula "56") (ifseqformula "16"))
                              (rule "greater_literals" (formula "56") (term "0"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                              (rule "mul_literals" (formula "56") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "56") (term "0"))
                              (rule "add_literals" (formula "56") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                              (rule "mul_literals" (formula "56") (term "1"))
                              (rule "inEqSimp_exactShadow1" (formula "40") (ifseqformula "16"))
                              (rule "greater_literals" (formula "40") (term "0"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                              (rule "mul_literals" (formula "40") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                              (rule "polySimp_elimOne" (formula "40") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "40"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "14"))
                              (rule "mul_literals" (formula "12") (term "1,1,0"))
                              (rule "greater_literals" (formula "12") (term "0,0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "leq_literals" (formula "12") (term "0"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow1" (formula "56") (ifseqformula "40"))
                              (rule "greater_literals" (formula "56") (term "0"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "0,0"))
                              (rule "mul_literals" (formula "56") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "56") (term "0"))
                              (rule "add_literals" (formula "56") (term "1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                              (rule "mul_literals" (formula "56") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "56") (ifseqformula "13"))
                              (rule "mul_literals" (formula "56") (term "1,1,0"))
                              (rule "greater_literals" (formula "56") (term "0,0"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "leq_literals" (formula "56") (term "0"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "allLeft" (formula "51") (inst "t=result"))
                              (rule "replaceKnownSelect_taclet01100000_30" (formula "51") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "51") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "51") (term "0,0"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "40"))
                              (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0"))
                              (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "51") (term "0"))
                              (rule "add_literals" (formula "51") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                              (rule "mul_literals" (formula "51") (term "1"))
                              (rule "allLeft" (formula "53") (inst "t=j_0_0"))
                              (rule "replaceKnownSelect_taclet01100000_32" (formula "53") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "53") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "inEqSimp_commuteGeq" (formula "53") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "53") (term "0,0"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "inEqSimp_antiSymm" (formula "51") (ifseqformula "53"))
                              (rule "applyEq" (formula "45") (term "0,2,0") (ifseqformula "51"))
                              (rule "applyEq" (formula "51") (term "0") (ifseqformula "50"))
                              (rule "inEqSimp_homoInEq1" (formula "51"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                              (rule "add_literals" (formula "51") (term "1,0"))
                              (rule "times_zero_1" (formula "51") (term "0"))
                              (rule "leq_literals" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "applyEq" (formula "40") (term "0") (ifseqformula "50"))
                              (rule "inEqSimp_homoInEq0" (formula "40"))
                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "0"))
                              (rule "add_literals" (formula "40") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,0"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "50"))
                              (rule "applyEq" (formula "52") (term "1,1,0,0") (ifseqformula "49"))
                              (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "49"))
                              (rule "inEqSimp_homoInEq1" (formula "55"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                              (rule "add_literals" (formula "55") (term "1,1,0"))
                              (rule "applyEq" (formula "27") (term "1") (ifseqformula "49"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "48"))
                              (rule "inEqSimp_homoInEq0" (formula "50"))
                              (rule "polySimp_pullOutFactor1" (formula "50") (term "0"))
                              (rule "add_literals" (formula "50") (term "1,0"))
                              (rule "times_zero_1" (formula "50") (term "0"))
                              (rule "qeq_literals" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "48"))
                              (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "41") (term "0,2,0") (ifseqformula "46"))
                              (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "45"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                              (rule "mul_literals" (formula "38") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "49"))
                              (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                              (rule "polySimp_elimOne" (formula "49") (term "0"))
                              (rule "cut_direct" (formula "39") (term "0"))
                              (branch "CUT: self.count@anon_heap_add<<anonHeapFunction>> = self.count TRUE"
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq0" (formula "42"))
                                 (rule "polySimp_pullOutFactor0" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                 (rule "applyEq" (formula "46") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "50") (term "1,1,1,1,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "53") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "44") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                 (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "41") (term "0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "true_left" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "47"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "15"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0"))
                                 (rule "leq_literals" (formula "15"))
                                 (rule "closeFalse" (formula "15"))
                              )
                              (branch "CUT: self.count@anon_heap_add<<anonHeapFunction>> = self.count FALSE"
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                 (rule "polySimp_homoEq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "38"))
                                 (rule "inEqSimp_commuteLeq" (formula "43"))
                                 (rule "applyEq" (formula "45") (term "1,1,0,0,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "51") (term "1,1,1,1,0,0,0") (ifseqformula "38"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,1,1,1,0,0,0"))
                                 (rule "add_zero_left" (formula "51") (term "1,1,1,0,0,0"))
                                 (rule "applyEq" (formula "47") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "54") (term "1,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq1" (formula "49"))
                                 (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                 (rule "add_literals" (formula "49") (term "1,0"))
                                 (rule "times_zero_1" (formula "49") (term "0"))
                                 (rule "leq_literals" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "applyEq" (formula "55") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "55"))
                                 (rule "polySimp_sepPosMonomial" (formula "39"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1"))
                                 (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "16") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "18") (term "1,1,1,1,0,0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "13") (term "0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "38"))
                                 (rule "inEqSimp_homoInEq0" (formula "14"))
                                 (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "1,0"))
                                 (rule "times_zero_1" (formula "14") (term "0"))
                                 (rule "qeq_literals" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "37"))
                                 (rule "inEqSimp_homoInEq1" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,1,0,0,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "37"))
                                 (rule "polySimp_homoEq" (formula "53"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0"))
                                 (rule "add_zero_right" (formula "53") (term "0"))
                                 (rule "equal_literals" (formula "53"))
                                 (rule "false_right" (formula "53"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "23") (term "1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "13") (term "1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "39") (term "0,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "37"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                 (rule "mul_literals" (formula "40") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "40") (term "0"))
                                  (builtin "One Step Simplification" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "allLeft" (formula "46") (inst "t=key<<origin(\"ensures @ file KIMapImpl.java @ line 143\",\"[]\")>>"))
                                 (rule "exLeft" (formula "46") (inst "sk=j_0_1"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "andLeft" (formula "46"))
                                 (rule "eqSymm" (formula "48") (term "1"))
                                 (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "49"))
                                 (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "49"))
                                 (rule "hideAuxiliaryEq" (formula "49"))
                                 (rule "replace_known_left" (formula "48") (term "1,0,1,0,0") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                                 (rule "elementOfUnion" (formula "48") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "eqSymm" (formula "48") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "48") (term "1,0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "elementOfUnion" (formula "48") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                                 (rule "times_zero_1" (formula "46") (term "0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "46") (term "0"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "allLeft" (formula "44") (inst "t=j_0_0"))
                                 (rule "replaceKnownSelect_taclet01100000_32" (formula "44") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "44") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "allLeft" (formula "52") (inst "t=j_0_0"))
                                 (rule "replaceKnownSelect_taclet01100000_34" (formula "52") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01100000_35" (formula "52") (term "1,0,0"))
                                 (rule "replaceKnownSelect_taclet01100000_32" (formula "52") (term "1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "52") (term "1,0,0,0"))
                                 (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "50"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "allLeft" (formula "44") (inst "t=j_0_1"))
                                 (rule "replaceKnownSelect_taclet10001100000_44" (formula "44") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001100000_45" (formula "44") (term "1,0,0"))
                                 (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "allLeft" (formula "52") (inst "t=j_0_1"))
                                 (rule "replaceKnownSelect_taclet10001100000_44" (formula "52") (term "1,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001100000_45" (formula "52") (term "1,0,0,0"))
                                 (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "50"))
                                 (rule "eqSymm" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "52") (term "1") (ifseqformula "47"))
                                 (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "52") (term "0,0,1"))
                                 (rule "leq_literals" (formula "52") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_contradInEq1" (formula "52") (term "1") (ifseqformula "46"))
                                 (rule "qeq_literals" (formula "52") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "60")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "53"))
                                 (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                                 (rule "hideAuxiliaryEq" (formula "53"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,1,0,0") (ifseqformula "60"))
                                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")))
                                 (rule "elementOfUnion" (formula "52") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "allLeft" (formula "41") (inst "t=j_0_1"))
                                 (rule "replaceKnownSelect_taclet10001100000_44" (formula "41") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10001100000_45" (formula "41") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "47"))
                                 (rule "qeq_literals" (formula "41") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "41"))
                                 (rule "inEqSimp_antiSymm" (formula "41") (ifseqformula "48"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq1" (formula "42"))
                                 (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "times_zero_1" (formula "42") (term "0"))
                                 (rule "leq_literals" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "41"))
                                 (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq0" (formula "48"))
                                 (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                 (rule "add_literals" (formula "48") (term "1,0"))
                                 (rule "times_zero_1" (formula "48") (term "0"))
                                 (rule "qeq_literals" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "41"))
                                 (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "47") (term "0"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "cut_direct" (formula "5") (term "0"))
                                 (branch "CUT: o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> TRUE"
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                    (rule "sortsDisjointModuloNull" (formula "62"))
                                    (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "61")))
                                    (rule "false_right" (formula "62"))
                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                    (rule "close" (formula "55") (ifseqformula "4"))
                                 )
                                 (branch "CUT: o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> FALSE"
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                    (rule "close" (formula "58") (ifseqformula "4"))
                                 )
                              )
                           )
                           (branch "CUT: self.count <= j_0_0 FALSE"
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "replace_known_right" (formula "33") (term "1,0") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "71"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_leqRight" (formula "71"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "36") (term "1") (ifseqformula "29"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "39"))
                              (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "38") (term "1") (ifseqformula "31"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "30"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "allLeft" (formula "21") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_0))"))
                              (rule "exLeft" (formula "21") (inst "sk=j_0_1"))
                              (rule "andLeft" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "eqSymm" (formula "23") (term "1"))
                              (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "22"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "34"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                              (rule "mul_literals" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                              (rule "mul_literals" (formula "22") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                              (rule "allLeft" (formula "61") (inst "t=j_0_0"))
                              (rule "replaceKnownSelect_taclet01100000_32" (formula "61") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "61") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "61") (term "0") (ifseqformula "66"))
                              (rule "qeq_literals" (formula "61") (term "0,0"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "61"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: self.count <= result FALSE"
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "64"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_leqRight" (formula "64"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "35") (term "0") (ifseqformula "19"))
                           (rule "eqSymm" (formula "35"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "allLeft" (formula "32") (inst "t=result"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "32") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "32") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "27"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "allLeft" (formula "32") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "32") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "32") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                           (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "27"))
                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "allLeft" (formula "35") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_36" (formula "35") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_37" (formula "35") (term "1,0,0"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "35") (term "1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "35") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                           (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "19"))
                           (rule "eqSymm" (formula "35") (term "0,0"))
                           (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "29"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "allLeft" (formula "28") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "28") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "28") (term "0,1"))
                           (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "allLeft" (formula "33") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(result))"))
                           (rule "exLeft" (formula "33") (inst "sk=j_0_1"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "eqSymm" (formula "35") (term "1"))
                           (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "inEqSimp_homoInEq0" (formula "34"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "mul_literals" (formula "34") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                           (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_9"))
                           (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "allLeft" (formula "18") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(result))"))
                           (rule "exLeft" (formula "18") (inst "sk=j_0_2"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "16"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "38") (term "1") (ifseqformula "20"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "allLeft" (formula "33") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_36" (formula "33") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_37" (formula "33") (term "0,1"))
                           (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "allLeft" (formula "15") (inst "t=result"))
                           (rule "eqSymm" (formula "15") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0,0"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "21"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "allLeft" (formula "42") (inst "t=j_0_2"))
                           (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "42") (term "0,0,1"))
                           (rule "leq_literals" (formula "42") (term "0,1"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "42") (term "0,1"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=arr_10"))
                           (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "77")) (ifInst ""  (formula "78")))
                           (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "42"))
                           (rule "hideAuxiliaryEq" (formula "42"))
                           (rule "pullOutSelect" (formula "42") (term "1,0") (inst "selectSK=arr_11"))
                           (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "75")) (ifInst ""  (formula "76")))
                           (rule "applyEqReverse" (formula "43") (term "1,0") (ifseqformula "42"))
                           (rule "hideAuxiliaryEq" (formula "42"))
                           (rule "allLeft" (formula "16") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "eqSymm" (formula "16") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0"))
                           (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "16") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                           (rule "true_left" (formula "16"))
                           (rule "allLeft" (formula "36") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_40" (formula "36") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_41" (formula "36") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                           (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "40"))
                           (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "allLeft" (formula "43") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_40" (formula "43") (term "1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_41" (formula "43") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "applyEq" (formula "43") (term "1,0,0,0") (ifseqformula "39"))
                           (rule "applyEq" (formula "43") (term "0,0,0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "43") (term "0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "38"))
                           (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "43") (term "0,0,1"))
                           (rule "leq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "1") (ifseqformula "37"))
                           (rule "qeq_literals" (formula "43") (term "0,1"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=arr_12"))
                           (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "43"))
                           (rule "hideAuxiliaryEq" (formula "43"))
                           (rule "allLeft" (formula "22") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_2))"))
                           (rule "exLeft" (formula "22") (inst "sk=j_0_3"))
                           (rule "andLeft" (formula "22"))
                           (rule "andLeft" (formula "22"))
                           (rule "eqSymm" (formula "24") (term "1"))
                           (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_homoInEq0" (formula "23"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "allLeft" (formula "35") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_44" (formula "35") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_45" (formula "35") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "35") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "35") (term "0,0"))
                            (builtin "One Step Simplification" (formula "35"))
                           (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "35"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "46"))
                           (rule "applyEq" (formula "46") (term "1") (ifseqformula "26"))
                           (rule "allLeft" (formula "44") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_2))"))
                           (rule "exLeft" (formula "44") (inst "sk=j_0_4"))
                           (rule "andLeft" (formula "44"))
                           (rule "andLeft" (formula "44"))
                           (rule "eqSymm" (formula "46") (term "1"))
                           (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "inEqSimp_homoInEq0" (formula "45"))
                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1"))
                           (rule "polySimp_rightDist" (formula "45") (term "1"))
                           (rule "mul_literals" (formula "45") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                           (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_13"))
                           (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "30"))
                            (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "83")) (ifInst ""  (formula "84")))
                           (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "46"))
                           (rule "hideAuxiliaryEq" (formula "46"))
                           (rule "allLeft" (formula "36") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_40" (formula "36") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_41" (formula "36") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "36") (term "1,0"))
                           (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "44"))
                           (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "43"))
                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "36") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "42"))
                           (rule "qeq_literals" (formula "36") (term "0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "36"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "47") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "44") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "35") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "36"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "36"))
                           (rule "applyEq" (formula "21") (term "1") (ifseqformula "36"))
                           (rule "allLeft" (formula "27") (inst "t=j_0_2"))
                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                           (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "37"))
                           (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "51"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "27") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "20"))
                           (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                           (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "27") (term "0,0,1"))
                           (rule "leq_literals" (formula "27") (term "0,1"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
                           (rule "applyEq" (formula "52") (term "1") (ifseqformula "27"))
                           (rule "applyEq" (formula "39") (term "1") (ifseqformula "27"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                           (rule "allLeft" (formula "18") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "22"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "allLeft" (formula "28") (inst "t=j_0_1"))
                           (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                           (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "52"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "44"))
                           (rule "qeq_literals" (formula "28") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "28") (term "0,0,1"))
                           (rule "leq_literals" (formula "28") (term "0,1"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "53") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "52") (term "1") (ifseqformula "28"))
                           (rule "applyEq" (formula "40") (term "1") (ifseqformula "28"))
                           (rule "allLeft" (formula "29") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                           (rule "applyEq" (formula "29") (term "1,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "53"))
                           (rule "eqSymm" (formula "29") (term "0,0"))
                           (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "27"))
                            (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "allLeft" (formula "41") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_42" (formula "41") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_43" (formula "41") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                           (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "26"))
                           (rule "eqSymm" (formula "41") (term "1"))
                           (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "28"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "allLeft" (formula "41") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_46" (formula "41") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_47" (formula "41") (term "0,1"))
                           (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "54"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "true_left" (formula "41"))
                           (rule "allLeft" (formula "43") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_44" (formula "43") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_45" (formula "43") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                           (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "37"))
                           (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "17"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "true_left" (formula "43"))
                           (rule "allLeft" (formula "39") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "75"))
                           (rule "qeq_literals" (formula "39") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "pullOutSelect" (formula "39") (term "0,1") (inst "selectSK=arr_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "32"))
                            (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "87")) (ifInst ""  (formula "88")))
                           (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "39"))
                           (rule "hideAuxiliaryEq" (formula "39"))
                           (rule "allLeft" (formula "72") (inst "t=result"))
                           (rule "replaceKnownSelect_taclet01100000_30" (formula "72") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "72") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "72") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "72") (term "1,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "72") (term "1,0,0,0") (ifseqformula "63"))
                           (rule "inEqSimp_homoInEq1" (formula "72") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "72") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "72") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "72"))
                           (rule "allLeft" (formula "44") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet101100000_50" (formula "44") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_51" (formula "44") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "77"))
                           (rule "qeq_literals" (formula "44") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "44"))
                           (rule "allLeft" (formula "18") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "78"))
                           (rule "qeq_literals" (formula "18") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "75") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet01100000_32" (formula "75") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_33" (formula "75") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "75") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "75") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "75") (term "1,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "75") (term "1,0,0,0") (ifseqformula "81"))
                           (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "75") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "75") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "75") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "75"))
                           (rule "allLeft" (formula "43") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "80"))
                           (rule "qeq_literals" (formula "43") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "43"))
                           (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_15"))
                           (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "94")) (ifInst ""  (formula "95")))
                           (rule "applyEqReverse" (formula "44") (term "0,1") (ifseqformula "43"))
                           (rule "hideAuxiliaryEq" (formula "43"))
                           (rule "allLeft" (formula "58") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet101100000_52" (formula "58") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_53" (formula "58") (term "1,0,0"))
                           (rule "replaceKnownSelect_taclet101100000_50" (formula "58") (term "1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_51" (formula "58") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0") (ifseqformula "81"))
                           (rule "qeq_literals" (formula "58") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "allLeft" (formula "30") (inst "t=j_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "82"))
                           (rule "qeq_literals" (formula "30") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "allLeft" (formula "46") (inst "t=result"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "46") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "46") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "46") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0"))
                           (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "38"))
                           (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "46") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "allLeft" (formula "16") (inst "t=j_0_0"))
                           (rule "eqSymm" (formula "16") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0"))
                           (rule "allLeft" (formula "48") (inst "t=j_0_0"))
                           (rule "replaceKnownSelect_taclet101100000_50" (formula "48") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_51" (formula "48") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "48") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0"))
                           (rule "allLeft" (formula "82") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_30" (formula "82") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_31" (formula "82") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "82") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "82") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "82") (term "1,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "82") (term "1,0,0,0") (ifseqformula "71"))
                           (rule "inEqSimp_homoInEq1" (formula "82") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "82") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "82") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "82") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "82") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "80")))
                           (rule "true_left" (formula "82"))
                           (rule "allLeft" (formula "49") (inst "t=result<<origin(\"ensures @ file KIMapImpl.java @ line 70\",\"[]\")>>"))
                           (rule "replaceKnownSelect_taclet01100000_38" (formula "49") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet01100000_39" (formula "49") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "49") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "49") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0"))
                           (rule "applyEq" (formula "49") (term "1,0,1,0") (ifseqformula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "49") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "49") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "47")))
                           (rule "true_left" (formula "49"))
                           (rule "commute_or_2" (formula "16") (term "0,0"))
                           (rule "commute_or_2" (formula "48") (term "0,0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_or_2" (formula "48") (term "0"))
                           (rule "allLeft" (formula "49") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_44" (formula "49") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_45" (formula "49") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "49") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "49") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0,0,0"))
                           (rule "applyEq" (formula "49") (term "1,0,1,0") (ifseqformula "40"))
                           (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0,0,0") (ifseqformula "22"))
                           (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "49") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "allLeft" (formula "85") (inst "t=j_0_1"))
                           (rule "inEqSimp_commuteGeq" (formula "85") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "85") (term "1,0") (ifseqformula "53"))
                           (rule "qeq_literals" (formula "85") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "pullOutSelect" (formula "85") (term "1,0") (inst "selectSK=arr_16"))
                           (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "99")))
                           (rule "replaceKnownSelect_taclet101100000_40" (formula "85") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_41" (formula "85") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,0,0") (ifseqformula "35"))
                           (rule "replace_known_right" (formula "85") (term "0,0,1,0,0") (ifseqformula "100"))
                            (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "4")))
                           (rule "applyEq" (formula "85") (term "2,0") (ifseqformula "55"))
                           (rule "elementOfUnion" (formula "85") (term "0,0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "eqSymm" (formula "85") (term "1,0,0"))
                           (rule "replace_known_right" (formula "85") (term "1,0,0") (ifseqformula "98"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "elementOfUnion" (formula "85") (term "0,0"))
                            (builtin "One Step Simplification" (formula "85"))
                           (rule "applyEqReverse" (formula "86") (term "1,0") (ifseqformula "85"))
                           (rule "hideAuxiliaryEq" (formula "85"))
                           (rule "allLeft" (formula "17") (inst "t=j_0_1"))
                           (rule "eqSymm" (formula "17") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0,0,0") (ifseqformula "55"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "95") (inst "t=j_0_2"))
                           (rule "inEqSimp_commuteGeq" (formula "95") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "95") (term "1,0") (ifseqformula "22"))
                           (rule "qeq_literals" (formula "95") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "pullOutSelect" (formula "95") (term "1,0") (inst "selectSK=arr_17"))
                           (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "69"))
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "103")))
                           (rule "replaceKnownSelect_taclet101100000_42" (formula "95") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_43" (formula "95") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,1,0,0") (ifseqformula "36"))
                           (rule "replace_known_left" (formula "95") (term "1,0,1,0,0") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "104")))
                           (rule "applyEq" (formula "95") (term "2,0") (ifseqformula "29"))
                           (rule "elementOfUnion" (formula "95") (term "0,0"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "applyEqReverse" (formula "96") (term "1,0") (ifseqformula "95"))
                           (rule "hideAuxiliaryEq" (formula "95"))
                           (rule "pullOutSelect" (formula "95") (term "1,0,0") (inst "selectSK=arr_18"))
                           (rule "simplifySelectOfAnonEQ" (formula "95") (ifseqformula "69"))
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "101")))
                           (rule "replaceKnownSelect_taclet101100000_44" (formula "95") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_45" (formula "95") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "0,1,0,0") (ifseqformula "36"))
                           (rule "replace_known_left" (formula "95") (term "1,0,1,0,0") (ifseqformula "4"))
                            (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "102")))
                           (rule "applyEq" (formula "95") (term "2,0") (ifseqformula "41"))
                           (rule "elementOfUnion" (formula "95") (term "0,0"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "eqSymm" (formula "95") (term "1,0,0"))
                           (rule "replace_known_right" (formula "95") (term "1,0,0") (ifseqformula "100"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "elementOfUnion" (formula "95") (term "0,0"))
                            (builtin "One Step Simplification" (formula "95"))
                           (rule "applyEqReverse" (formula "96") (term "1,0,0") (ifseqformula "95"))
                           (rule "hideAuxiliaryEq" (formula "95"))
                           (rule "allLeft" (formula "18") (inst "t=j_0_2"))
                           (rule "eqSymm" (formula "18") (term "0,1,0"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,0"))
                           (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "43"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0,0,0") (ifseqformula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "52") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_40" (formula "52") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_41" (formula "52") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "52") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "52") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0"))
                           (rule "applyEq" (formula "52") (term "1,0,1,0") (ifseqformula "58"))
                           (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0,0,0") (ifseqformula "57"))
                           (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0,0,0"))
                           (rule "add_literals" (formula "52") (term "1,1,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "52") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "52") (term "0,0,1,0,0,0"))
                           (rule "leq_literals" (formula "52") (term "0,1,0,0,0"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "allLeft" (formula "98") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_54" (formula "98") (term "1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_55" (formula "98") (term "1,0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "98") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "98") (term "1,0") (ifseqformula "56"))
                           (rule "qeq_literals" (formula "98") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "98"))
                           (rule "pullOutSelect" (formula "98") (term "1,0") (inst "selectSK=arr_19"))
                           (rule "simplifySelectOfAnonEQ" (formula "98") (ifseqformula "71"))
                            (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "106")))
                           (rule "replaceKnownSelect_taclet101100000_46" (formula "98") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_47" (formula "98") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "0,1,0,0") (ifseqformula "37"))
                           (rule "replace_known_right" (formula "98") (term "0,0,1,0,0") (ifseqformula "107"))
                            (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "2")))
                           (rule "applyEq" (formula "98") (term "2,0") (ifseqformula "65"))
                           (rule "elementOfUnion" (formula "98") (term "0,0"))
                            (builtin "One Step Simplification" (formula "98"))
                           (rule "applyEqReverse" (formula "99") (term "1,0") (ifseqformula "98"))
                           (rule "hideAuxiliaryEq" (formula "98"))
                           (rule "allLeft" (formula "89") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_58" (formula "89") (term "1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_59" (formula "89") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "89") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "89") (term "1,0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "89") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "allLeft" (formula "86") (inst "t=j_0_1"))
                           (rule "replaceKnownSelect_taclet101100000_54" (formula "86") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_55" (formula "86") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "86") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "86") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "86") (term "1,0,0,0"))
                           (rule "allLeft" (formula "87") (inst "t=j_0_2"))
                           (rule "replaceKnownSelect_taclet101100000_58" (formula "87") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet101100000_59" (formula "87") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "87") (term "0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "87") (term "1,0,0,0"))
                           (rule "cut_direct" (formula "77") (term "0"))
                           (branch "CUT: self.count@anon_heap_add<<anonHeapFunction>> = self.count TRUE"
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "true_left" (formula "78"))
                              (rule "replace_known_left" (formula "76") (term "1") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "76"))
                              (rule "true_left" (formula "76"))
                              (rule "applyEq" (formula "91") (term "1,1,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "99") (term "0,1") (ifseqformula "76"))
                              (rule "applyEq" (formula "100") (term "0,1") (ifseqformula "76"))
                              (rule "applyEq" (formula "75") (term "0") (ifseqformula "76"))
                              (rule "applyEq" (formula "81") (term "0") (ifseqformula "75"))
                              (rule "inEqSimp_homoInEq0" (formula "81"))
                              (rule "polySimp_pullOutFactor0" (formula "81") (term "0"))
                              (rule "add_literals" (formula "81") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "81") (term "0"))
                              (rule "applyEq" (formula "86") (term "1,1,0,0,0,0") (ifseqformula "75"))
                              (rule "applyEq" (formula "80") (term "0") (ifseqformula "75"))
                              (rule "applyEq" (formula "99") (term "1,1,0") (ifseqformula "75"))
                              (rule "applyEq" (formula "92") (term "0") (ifseqformula "75"))
                              (rule "applyEq" (formula "87") (term "0,1") (ifseqformula "75"))
                              (rule "applyEq" (formula "83") (term "0,1,0,0,0") (ifseqformula "75"))
                              (rule "applyEq" (formula "88") (term "0,1") (ifseqformula "75"))
                              (rule "applyEq" (formula "94") (term "1,1,1,1,0,0,0") (ifseqformula "75"))
                              (rule "applyEq" (formula "84") (term "0,1,0,0,0") (ifseqformula "75"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "92"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                              (rule "add_literals" (formula "21") (term "0,0,1"))
                              (rule "leq_literals" (formula "21") (term "0,1"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "92"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_literals" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "54") (term "1") (ifseqformula "92"))
                              (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1"))
                              (rule "add_literals" (formula "54") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "54") (term "1,0,0,1"))
                              (rule "add_literals" (formula "54") (term "0,0,1"))
                              (rule "leq_literals" (formula "54") (term "0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "92"))
                              (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0"))
                              (rule "leq_literals" (formula "44") (term "0,0"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "applyEq" (formula "54") (term "1") (ifseqformula "44"))
                              (rule "applyEq" (formula "65") (term "1,0,0") (ifseqformula "44"))
                              (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "33"))
                              (rule "eqSymm" (formula "65") (term "0"))
                              (rule "applyEq" (formula "50") (term "1,0,1,0,0") (ifseqformula "44"))
                              (rule "inEqSimp_contradInEq1" (formula "65") (term "1") (ifseqformula "91"))
                              (rule "inEqSimp_homoInEq1" (formula "65") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                              (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                              (rule "add_literals" (formula "65") (term "0,0,1"))
                              (rule "leq_literals" (formula "65") (term "0,1"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "65"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "inEqSimp_contradInEq1" (formula "96") (term "1") (ifseqformula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "96") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "96") (term "0,0,1"))
                              (rule "add_literals" (formula "96") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "96") (term "1,0,0,1"))
                              (rule "add_literals" (formula "96") (term "0,0,1"))
                              (rule "leq_literals" (formula "96") (term "0,1"))
                               (builtin "One Step Simplification" (formula "96"))
                              (rule "inEqSimp_contradInEq1" (formula "95") (term "1") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "95") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,1"))
                              (rule "add_literals" (formula "95") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "95") (term "1,0,0,1"))
                              (rule "add_literals" (formula "95") (term "0,0,1"))
                              (rule "leq_literals" (formula "95") (term "0,1"))
                               (builtin "One Step Simplification" (formula "95"))
                              (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0,0,0") (ifseqformula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "81") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "81") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "81") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "81"))
                              (rule "inEqSimp_contradInEq1" (formula "85") (term "1") (ifseqformula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "85") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0,1"))
                              (rule "add_literals" (formula "85") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "85") (term "1,0,0,1"))
                              (rule "add_literals" (formula "85") (term "0,0,1"))
                              (rule "leq_literals" (formula "85") (term "0,1"))
                               (builtin "One Step Simplification" (formula "85"))
                              (rule "inEqSimp_contradInEq1" (formula "86") (term "1") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "86") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,1"))
                              (rule "add_literals" (formula "86") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "86") (term "1,0,0,1"))
                              (rule "add_literals" (formula "86") (term "0,0,1"))
                              (rule "leq_literals" (formula "86") (term "0,1"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "inEqSimp_subsumption1" (formula "78") (ifseqformula "13"))
                              (rule "leq_literals" (formula "78") (term "0"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "true_left" (formula "78"))
                              (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "89"))
                              (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
                              (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "49") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "49") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "inEqSimp_contradInEq1" (formula "81") (term "1,0,0,0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "81") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "81") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "81") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "81") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "81") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "81") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "81"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "89"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "16") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "allLeft" (formula "34") (inst "t=j_0_3"))
                              (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                              (rule "applyEq" (formula "34") (term "1,0,0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "63"))
                              (rule "eqSymm" (formula "34") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "26"))
                              (rule "qeq_literals" (formula "34") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                              (rule "add_literals" (formula "34") (term "0,0,1"))
                              (rule "leq_literals" (formula "34") (term "0,1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "allLeft" (formula "22") (inst "t=j_0_3"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                              (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "allLeft" (formula "46") (inst "t=j_0_4"))
                              (rule "replaceKnownSelect_taclet101100000_48" (formula "46") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101100000_49" (formula "46") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
                              (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "61"))
                              (rule "eqSymm" (formula "46") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "59"))
                              (rule "qeq_literals" (formula "46") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "60"))
                              (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                              (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0"))
                              (rule "leq_literals" (formula "46") (term "0,0"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "allLeft" (formula "62") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_1))"))
                              (rule "exLeft" (formula "62") (inst "sk=j_0_5"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "eqSymm" (formula "64") (term "1"))
                              (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "inEqSimp_homoInEq0" (formula "63"))
                              (rule "polySimp_addComm1" (formula "63") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "63"))
                              (rule "polySimp_mulComm0" (formula "63") (term "1"))
                              (rule "polySimp_rightDist" (formula "63") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "63") (term "1,1"))
                              (rule "mul_literals" (formula "63") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "63") (term "1,1"))
                              (rule "pullOutSelect" (formula "64") (term "0") (inst "selectSK=arr_20"))
                              (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "106")) (ifInst ""  (formula "107")))
                              (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "64"))
                              (rule "hideAuxiliaryEq" (formula "64"))
                              (rule "allLeft" (formula "29") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_1))"))
                              (rule "exLeft" (formula "29") (inst "sk=j_0_6"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "eqSymm" (formula "31") (term "1"))
                              (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_homoInEq0" (formula "30"))
                              (rule "polySimp_addComm1" (formula "30") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1"))
                              (rule "mul_literals" (formula "30") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                              (rule "allLeft" (formula "38") (inst "t=j_0_4"))
                              (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                              (rule "applyEq" (formula "38") (term "1,0,0,0") (ifseqformula "50"))
                              (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "71"))
                              (rule "eqSymm" (formula "38") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "64"))
                              (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                              (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                              (rule "add_literals" (formula "38") (term "0,0,1"))
                              (rule "leq_literals" (formula "38") (term "0,1"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "63"))
                              (rule "qeq_literals" (formula "38") (term "0,1"))
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "allLeft" (formula "19") (inst "t=j_0_3"))
                              (rule "eqSymm" (formula "19") (term "0,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0"))
                              (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "19") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "allLeft" (formula "23") (inst "t=j_0_4"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                              (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "52"))
                              (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "allLeft" (formula "23") (inst "t=j_0_2"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                              (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "50"))
                              (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "allLeft" (formula "75") (inst "t=j_0_4"))
                              (rule "replaceKnownSelect_taclet101100000_48" (formula "75") (term "1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101100000_49" (formula "75") (term "1,0,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "75") (term "1"))
                              (rule "applyEq" (formula "75") (term "1,0,0,0") (ifseqformula "66"))
                              (rule "applyEq" (formula "75") (term "0,0,0") (ifseqformula "72"))
                              (rule "eqSymm" (formula "75") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "65"))
                              (rule "inEqSimp_homoInEq1" (formula "75") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,1"))
                              (rule "add_literals" (formula "75") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "75") (term "1,0,0,1"))
                              (rule "add_literals" (formula "75") (term "0,0,1"))
                              (rule "leq_literals" (formula "75") (term "0,1"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "inEqSimp_contradInEq1" (formula "75") (term "1") (ifseqformula "64"))
                              (rule "qeq_literals" (formula "75") (term "0,1"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "pullOutSelect" (formula "75") (term "0") (inst "selectSK=arr_21"))
                              (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "43"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "114")) (ifInst ""  (formula "115")))
                              (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "75"))
                              (rule "hideAuxiliaryEq" (formula "75"))
                              (rule "allLeft" (formula "60") (inst "t=j_0_4"))
                              (rule "replaceKnownSelect_taclet101100000_48" (formula "60") (term "1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101100000_49" (formula "60") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "60") (term "1"))
                              (rule "applyEq" (formula "60") (term "1,0,0") (ifseqformula "67"))
                              (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "true_left" (formula "60"))
                              (rule "allLeft" (formula "76") (inst "t=j_0_3"))
                              (rule "inEqSimp_commuteGeq" (formula "76") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "76") (term "1,0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "76") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "76"))
                              (rule "inEqSimp_contradInEq1" (formula "76") (term "1") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "76") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "76") (term "0,0,1"))
                              (rule "add_literals" (formula "76") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "76") (term "1,0,0,1"))
                              (rule "add_literals" (formula "76") (term "0,0,1"))
                              (rule "leq_literals" (formula "76") (term "0,1"))
                               (builtin "One Step Simplification" (formula "76"))
                              (rule "pullOutSelect" (formula "76") (term "1,0") (inst "selectSK=arr_22"))
                              (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "43"))
                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "113")) (ifInst ""  (formula "114")))
                              (rule "applyEqReverse" (formula "77") (term "1,0") (ifseqformula "76"))
                              (rule "hideAuxiliaryEq" (formula "76"))
                              (rule "pullOutSelect" (formula "76") (term "1") (inst "selectSK=arr_23"))
                              (rule "simplifySelectOfAnonEQ" (formula "76") (ifseqformula "43"))
                               (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "115")) (ifInst ""  (formula "116")))
                              (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "76"))
                              (rule "hideAuxiliaryEq" (formula "76"))
                              (rule "allLeft" (formula "52") (inst "t=j_0_3"))
                              (rule "replaceKnownSelect_taclet0101100000_66" (formula "52") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0101100000_67" (formula "52") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
                              (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "29"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "1,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,1,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,1,0"))
                              (rule "add_literals" (formula "52") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "52") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "52") (term "0,0"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "52"))
                              (rule "applyEq" (formula "77") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "77"))
                              (rule "allLeft" (formula "61") (inst "t=j_0_3"))
                              (rule "replaceKnownSelect_taclet0101100000_66" (formula "61") (term "1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0101100000_67" (formula "61") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                              (rule "applyEq" (formula "61") (term "1,0,0") (ifseqformula "52"))
                              (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "true_left" (formula "61"))
                              (rule "allLeft" (formula "55") (inst "t=j_0_4"))
                              (rule "replaceKnownSelect_taclet0101100000_64" (formula "55") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0101100000_65" (formula "55") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
                              (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "77"))
                              (rule "eqSymm" (formula "55") (term "1"))
                              (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "allLeft" (formula "55") (inst "t=j_0_3"))
                              (rule "replaceKnownSelect_taclet0101100000_68" (formula "55") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0101100000_69" (formula "55") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "55") (term "1,0"))
                              (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "78"))
                              (rule "eqSymm" (formula "55") (term "1"))
                              (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "allLeft" (formula "15") (inst "t=j_0_2"))
                              (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "50"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "15") (term "0,0"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "15"))
                              (rule "mul_literals" (formula "85") (term "0,0"))
                              (rule "add_zero_left" (formula "85") (term "0"))
                              (rule "allLeft" (formula "16") (inst "t=j_0_1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "64"))
                              (rule "qeq_literals" (formula "16") (term "0,0"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "16"))
                              (rule "mul_literals" (formula "86") (term "0,0"))
                              (rule "add_zero_left" (formula "86") (term "0"))
                              (rule "allLeft" (formula "17") (inst "t=j_0_3"))
                              (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "32"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "17") (term "0,0"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "87") (ifseqformula "17"))
                              (rule "mul_literals" (formula "87") (term "0,0"))
                              (rule "add_zero_left" (formula "87") (term "0"))
                              (rule "allLeft" (formula "63") (inst "t=j_0_4"))
                              (rule "replaceKnownSelect_taclet101100000_48" (formula "63") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet101100000_49" (formula "63") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "63") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "63") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "63") (term "1,0,0,0"))
                              (rule "applyEq" (formula "63") (term "1,0,1,0") (ifseqformula "71"))
                              (rule "inEqSimp_contradInEq1" (formula "63") (term "1,0,0,0") (ifseqformula "70"))
                              (rule "inEqSimp_homoInEq1" (formula "63") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "63") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "63") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "63") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "63") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "63"))
                              (rule "allLeft" (formula "64") (inst "t=j_0_3"))
                              (rule "replaceKnownSelect_taclet0101100000_66" (formula "64") (term "0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0101100000_67" (formula "64") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "64") (term "0,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "64") (term "1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "64") (term "1,0,0"))
                              (rule "applyEq" (formula "64") (term "1,0,1,0") (ifseqformula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "64") (term "1,0,0,0") (ifseqformula "31"))
                              (rule "inEqSimp_homoInEq1" (formula "64") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "64") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "64") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "64"))
                              (rule "allLeft" (formula "23") (inst "t=j_0_4"))
                              (rule "eqSymm" (formula "23") (term "0,1,0"))
                              (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0"))
                              (rule "applyEq" (formula "23") (term "1,0,1,0") (ifseqformula "55"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0,0,0") (ifseqformula "72"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "allLeft" (formula "18") (inst "t=j_0_4"))
                              (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "72"))
                              (rule "qeq_literals" (formula "18") (term "0,0"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "91") (ifseqformula "18"))
                              (rule "mul_literals" (formula "91") (term "0,0"))
                              (rule "add_zero_left" (formula "91") (term "0"))
                              (rule "allLeft" (formula "19") (inst "t=j_0_0"))
                              (rule "eqSymm" (formula "19") (term "0,1"))
                              (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "108"))
                              (rule "qeq_literals" (formula "19") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "allLeft" (formula "79") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_0))"))
                              (rule "exLeft" (formula "79") (inst "sk=j_0_7"))
                              (rule "andLeft" (formula "79"))
                              (rule "andLeft" (formula "79"))
                              (rule "eqSymm" (formula "81") (term "1"))
                              (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "81"))
                              (rule "replace_known_left" (formula "79") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "79"))
                              (rule "replace_known_left" (formula "80") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "80"))
                              (rule "inEqSimp_homoInEq0" (formula "80"))
                              (rule "polySimp_addComm1" (formula "80") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "80"))
                              (rule "polySimp_mulComm0" (formula "80") (term "1"))
                              (rule "polySimp_rightDist" (formula "80") (term "1"))
                              (rule "mul_literals" (formula "80") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "80") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "80") (term "1,1"))
                              (rule "pullOutSelect" (formula "81") (term "0") (inst "selectSK=arr_24"))
                              (rule "simplifySelectOfAnonEQ" (formula "81") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "125")) (ifInst ""  (formula "126")))
                              (rule "applyEqReverse" (formula "82") (term "0") (ifseqformula "81"))
                              (rule "hideAuxiliaryEq" (formula "81"))
                              (rule "allLeft" (formula "39") (inst "t=int::select(heap,
            int[]::select(heap, self, KIMapImpl::$keys),
            arr(j_0_0))"))
                              (rule "exLeft" (formula "39") (inst "sk=j_0_8"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "eqSymm" (formula "41") (term "1"))
                              (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_homoInEq0" (formula "40"))
                              (rule "polySimp_addComm1" (formula "40") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1"))
                              (rule "polySimp_rightDist" (formula "40") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                              (rule "mul_literals" (formula "40") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                              (rule "cut_direct" (formula "6") (term "0"))
                              (branch "CUT: o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> TRUE"
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "138") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "138") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "138") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "6"))
                                 (rule "close" (formula "128") (ifseqformula "5"))
                              )
                              (branch "CUT: o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> FALSE"
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEq" (formula "125") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "136") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "139") (term "1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "6"))
                                 (rule "close" (formula "130") (ifseqformula "5"))
                              )
                           )
                           (branch "CUT: self.count@anon_heap_add<<anonHeapFunction>> = self.count FALSE"
                               (builtin "One Step Simplification" (formula "77"))
                              (rule "replace_known_right" (formula "76") (term "1") (ifseqformula "104"))
                               (builtin "One Step Simplification" (formula "76"))
                              (rule "applyEq" (formula "76") (term "0") (ifseqformula "77"))
                              (rule "polySimp_homoEq" (formula "76"))
                              (rule "polySimp_mulComm0" (formula "76") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "76") (term "1,0"))
                              (rule "mul_literals" (formula "76") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "76") (term "0"))
                              (rule "polySimp_addComm1" (formula "76") (term "0,0"))
                              (rule "add_literals" (formula "76") (term "0,0,0"))
                              (rule "add_zero_left" (formula "76") (term "0,0"))
                              (rule "applyEq" (formula "104") (term "0") (ifseqformula "77"))
                              (rule "polySimp_homoEq" (formula "104"))
                              (rule "polySimp_mulComm0" (formula "104") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "104") (term "1,0"))
                              (rule "mul_literals" (formula "104") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "104") (term "0"))
                              (rule "polySimp_addComm0" (formula "104") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "104") (term "0"))
                              (rule "add_literals" (formula "104") (term "1,1,0"))
                              (rule "times_zero_1" (formula "104") (term "1,0"))
                              (rule "add_zero_right" (formula "104") (term "0"))
                              (rule "equal_literals" (formula "104"))
                              (rule "false_right" (formula "104"))
                              (rule "applyEq" (formula "102") (term "1,1,0") (ifseqformula "77"))
                              (rule "applyEq" (formula "90") (term "0,1") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "90") (term "1"))
                              (rule "polySimp_mulComm0" (formula "90") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "90") (term "1,0,1"))
                              (rule "mul_literals" (formula "90") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "90") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "90") (term "0,0,1"))
                              (rule "applyEq" (formula "83") (term "0") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "83"))
                              (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                              (rule "mul_literals" (formula "83") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "83") (term "0"))
                              (rule "polySimp_addComm0" (formula "83") (term "0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "83") (term "0"))
                              (rule "add_literals" (formula "83") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "83") (term "1,0"))
                              (rule "applyEq" (formula "82") (term "0") (ifseqformula "77"))
                              (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "91") (term "1"))
                              (rule "polySimp_mulComm0" (formula "91") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "91") (term "1,0,1"))
                              (rule "mul_literals" (formula "91") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "91") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "91") (term "0,0,1"))
                              (rule "applyEq" (formula "86") (term "0,1,0,0,0") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "86") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "86") (term "1,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "86") (term "1,0,1,0,0,0"))
                              (rule "mul_literals" (formula "86") (term "0,1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "86") (term "0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "86") (term "0,0,1,0,0,0"))
                              (rule "applyEq" (formula "95") (term "0") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq1" (formula "95"))
                              (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                              (rule "mul_literals" (formula "95") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "95") (term "0"))
                              (rule "polySimp_addComm1" (formula "95") (term "0,0"))
                              (rule "add_literals" (formula "95") (term "0,0,0"))
                              (rule "add_zero_left" (formula "95") (term "0,0"))
                              (rule "applyEq" (formula "101") (term "0,1") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "101") (term "1"))
                              (rule "polySimp_mulComm0" (formula "101") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "101") (term "1,0,1"))
                              (rule "mul_literals" (formula "101") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "101") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "101") (term "0,0,1"))
                              (rule "applyEq" (formula "88") (term "1,1,0,0,0,0") (ifseqformula "77"))
                              (rule "applyEq" (formula "100") (term "0,1") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "100") (term "1"))
                              (rule "polySimp_mulComm0" (formula "100") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "100") (term "1,0,1"))
                              (rule "mul_literals" (formula "100") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "100") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "100") (term "0,0,1"))
                              (rule "applyEq" (formula "97") (term "1,1,1,1,0,0,0") (ifseqformula "77"))
                              (rule "polySimp_addAssoc" (formula "97") (term "1,1,1,0,0,0"))
                              (rule "add_literals" (formula "97") (term "0,1,1,1,0,0,0"))
                              (rule "add_zero_left" (formula "97") (term "1,1,1,0,0,0"))
                              (rule "applyEq" (formula "87") (term "0,1,0,0,0") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq0" (formula "87") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "87") (term "1,0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "87") (term "1,0,1,0,0,0"))
                              (rule "mul_literals" (formula "87") (term "0,1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "87") (term "0,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "87") (term "0,0,1,0,0,0"))
                              (rule "applyEq" (formula "75") (term "0") (ifseqformula "77"))
                              (rule "inEqSimp_homoInEq1" (formula "75"))
                              (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                              (rule "mul_literals" (formula "75") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "75") (term "0"))
                              (rule "polySimp_addComm1" (formula "75") (term "0,0"))
                              (rule "add_literals" (formula "75") (term "0,0,0"))
                              (rule "add_zero_left" (formula "75") (term "0,0"))
                              (rule "applyEq" (formula "92") (term "1,1,0") (ifseqformula "77"))
                              (rule "polySimp_sepNegMonomial" (formula "76"))
                              (rule "polySimp_mulLiterals" (formula "76") (term "0"))
                              (rule "polySimp_elimOne" (formula "76") (term "0"))
                              (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "76"))
                              (rule "inEqSimp_homoInEq1" (formula "74"))
                              (rule "polySimp_mulLiterals" (formula "74") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "74") (term "0"))
                              (rule "add_literals" (formula "74") (term "1,1,0"))
                              (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "76"))
                              (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "76"))
                              (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "76"))
                              (rule "applyEq" (formula "53") (term "1,1,0,0,0,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "76"))
                              (rule "applyEq" (formula "57") (term "0") (ifseqformula "76"))
                              (rule "applyEq" (formula "67") (term "1,1,0") (ifseqformula "76"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "76"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch " !f_0 = java.lang.Object::<created> & ( o_0 = self.keys@anon_heap_resize<<anonHeapFunction>> | o_0 = self.values@anon_heap_resize<<anonHeapFunction>>) FALSE"
                        (rule "close" (formula "62") (ifseqformula "2"))
                     )
                  )
               )
            )
            (branch "Exceptional Post (add)"
                (builtin "One Step Simplification" (formula "30"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "30") (term "0,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "30") (term "0,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "30") (term "0,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "30") (term "1,0,0,0,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "30") (term "1,0,0,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "30") (term "0,1,0,1,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet0000_7" (formula "30") (term "0,1,0,1,1,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "30") (term "0,1,0,1,0,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_8" (formula "30") (term "0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "30") (term "1,1,1,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "30") (term "1,0,1,0,1,0,1,1"))
               (rule "andLeft" (formula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "15"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "33"))
               (rule "notLeft" (formula "31"))
               (rule "close" (formula "35") (ifseqformula "34"))
            )
            (branch "Pre (add)"
                (builtin "One Step Simplification" (formula "38"))
               (rule "wellFormedAnonEQ" (formula "38") (term "1") (ifseqformula "15"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "38") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "38") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "38") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "38") (term "0,0,1,0,0"))
               (rule "translateJavaSubInt" (formula "38") (term "1,0,0"))
               (rule "replace_known_left" (formula "38") (term "1,1") (ifseqformula "14"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "2")))
               (rule "polySimp_elimSub" (formula "38") (term "1,0"))
               (rule "mul_literals" (formula "38") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "9"))
               (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
               (rule "add_literals" (formula "9") (term "1,0"))
               (rule "times_zero_1" (formula "9") (term "0"))
               (rule "leq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "inEqSimp_homoInEq1" (formula "21"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
               (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
               (rule "add_literals" (formula "21") (term "1,0"))
               (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
               (rule "polySimp_addComm1" (formula "37") (term "0,0"))
               (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "16"))
               (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
               (rule "add_literals" (formula "37") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,0,0"))
               (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
               (rule "mul_literals" (formula "20") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "inEqSimp_invertInEq0" (formula "21"))
               (rule "mul_literals" (formula "21") (term "1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
               (rule "polySimp_elimOne" (formula "21") (term "0"))
               (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "6"))
               (rule "mul_literals" (formula "20") (term "1,1,0"))
               (rule "greater_literals" (formula "20") (term "0,0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "leq_literals" (formula "20") (term "0"))
                (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
               (rule "leq_literals" (formula "8") (term "0"))
                (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "nnf_imp2or" (formula "22") (term "0"))
               (rule "nnf_imp2or" (formula "8") (term "0,0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_imp2or" (formula "19") (term "0,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "mul_literals" (formula "22") (term "1,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "mul_literals" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "mul_literals" (formula "18") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0"))
               (rule "associativeLawUnion" (formula "24") (term "1"))
               (rule "associativeLawUnion" (formula "23") (term "1"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "cnf_eqv" (formula "20") (term "0"))
               (rule "nnf_notEx" (formula "20") (term "1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,1,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0,0"))
               (rule "distr_forallAnd" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "cnf_eqv" (formula "9") (term "0"))
               (rule "nnf_notEx" (formula "9") (term "1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,1,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0,1,0,0"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "distr_forallAnd" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "Class_invariant_axiom_for_KIMapImpl" (formula "36") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "replaceKnownSelect_taclet0000_6" (formula "36") (term "0,1"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "0,0,1,1,1"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,1,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "0,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,1,1,1,1"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "36") (term "1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet0000_7" (formula "36") (term "0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_7" (formula "36") (term "0,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "1,1,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "36") (term "1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_8" (formula "36") (term "0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_8" (formula "36") (term "0,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "1,1,1,0,1,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "1,1,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "36") (term "0,1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "36") (term "1,0,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "1,0,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,0,1,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,1,1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "1,1,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "36") (term "0,1,1,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "36") (term "1,0,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "36") (term "1,1,0,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_4" (formula "36") (term "1,1,0,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,0,1,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "1,0,1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "0,1,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "1,0,1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,0,1,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,1,1,1,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_0" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet0000_2" (formula "36") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "36") (term "1,1,0,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "36") (term "1,1,0,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,0,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "1,0,1,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "0,1,1,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "1,1,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "1,0,0,1,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "36") (term "0,0,0,0,0,0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "36") (term "0,0,1,0,0,0,0,0,0,0,0"))
               (rule "eqSymm" (formula "36") (term "0,1,0,0,0,0,0"))
               (rule "eqSymm" (formula "36") (term "1,0,1,0,1,0,0"))
               (rule "eqSymm" (formula "36") (term "1,0,0,0,0,0,0"))
               (rule "eqSymm" (formula "36") (term "0,1,0,0,1,0,0,0"))
               (rule "replace_known_right" (formula "36") (term "0,1,0,0,0,0,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "28")) (ifInst ""  (formula "30")))
               (rule "inEqSimp_gtToGeq" (formula "36") (term "0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0,1,0,0,0"))
               (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0,1,0,0"))
               (rule "applyEq" (formula "36") (term "0,1,1,0,0,0,0") (ifseqformula "16"))
               (rule "inEqSimp_homoInEq1" (formula "36") (term "1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1" (formula "36") (term "0,1,1,0,0,0,0"))
               (rule "add_literals" (formula "36") (term "1,0,1,1,0,0,0,0"))
               (rule "applyEq" (formula "36") (term "1,0,0,0,0,0,0,0") (ifseqformula "16"))
               (rule "applyEq" (formula "36") (term "0,1,0,0,0,0,0") (ifseqformula "17"))
               (rule "eqSymm" (formula "36") (term "1,0,0,0,0,0"))
               (rule "replace_known_left" (formula "36") (term "1,0,0,0,0,0") (ifseqformula "16"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "applyEq" (formula "36") (term "0,1") (ifseqformula "26"))
               (rule "eqSymm" (formula "36") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0,1,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1,0,0,0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0,0,0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0,0,0,1,0,0,0"))
               (rule "inEqSimp_invertInEq0" (formula "36") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "0,1,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_subsumption6" (formula "36") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "greater_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
               (rule "leq_literals" (formula "36") (term "0,0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "inEqSimp_subsumption1" (formula "36") (term "0,0,0,0") (ifseqformula "6"))
               (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "commuteUnion" (formula "36") (term "1,0,1"))
               (rule "eqSymm" (formula "36") (term "1"))
               (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0"))
               (rule "nnf_imp2or" (formula "36") (term "0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "36") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0,0,0"))
               (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "20"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or_2" (formula "8") (term "0,0,0"))
               (rule "commute_or_2" (formula "20") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "19") (term "0"))
               (rule "commute_or" (formula "9") (term "0,0,1,0"))
               (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "16") (term "0"))
               (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
               (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "6"))
               (rule "greater_literals" (formula "16") (term "0,0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1,0"))
               (rule "leq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
               (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "6"))
               (rule "mul_literals" (formula "17") (term "1,1,0"))
               (rule "greater_literals" (formula "17") (term "0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "leq_literals" (formula "17") (term "0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "true_left" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "7") (term "0"))
               (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
               (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
               (rule "leq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "arrayLengthNotNegative" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
               (rule "leq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "arrayLengthIsAnInt" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "commute_and" (formula "10") (term "0,0,1,0"))
               (rule "distr_forallAnd" (formula "19"))
               (rule "andLeft" (formula "19"))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "ex_pull_out3" (formula "23") (term "0"))
               (rule "all_pull_out3" (formula "22") (term "0"))
               (rule "commute_or" (formula "20") (term "0"))
               (rule "commute_or" (formula "8") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "22") (term "0,0"))
               (rule "commute_or_2" (formula "8") (term "0,0,0"))
               (rule "shift_paren_or" (formula "22") (term "0,0,0"))
               (rule "swapQuantifiersAll" (formula "22"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "associativeLawUnion" (formula "37") (term "1,1"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "cnf_rightDist" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "23") (term "1,0,0"))
               (rule "andRight" (formula "37"))
               (branch "Case 1"
                  (rule "allRight" (formula "37") (inst "sk=x_4_0"))
                  (rule "eqSymm" (formula "37") (term "1,0,1"))
                  (rule "equiv_right" (formula "37"))
                  (branch "Case 1"
                     (rule "nnf_ex2all" (formula "38"))
                     (rule "nnf_notAnd" (formula "1") (term "0"))
                     (rule "nnf_notAnd" (formula "1") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                     (rule "commute_or" (formula "25") (term "1,0,0,0"))
                     (rule "all_pull_out3" (formula "11") (term "0"))
                     (rule "shift_paren_or" (formula "11") (term "0,0"))
                     (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                     (rule "swapQuantifiersAll" (formula "11"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "ex_pull_out3" (formula "12") (term "0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                     (rule "commute_or" (formula "12") (term "1,0,0,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0,1,1") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "16"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "5"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1") (ifseqformula "18"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "allLeft" (formula "15") (inst "t=x_4_0"))
                     (rule "exLeft" (formula "15") (inst "sk=j_0_0"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "eqSymm" (formula "17") (term "1"))
                     (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "16"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "mul_literals" (formula "16") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                     (rule "allLeft" (formula "32") (inst "t=x_4_0"))
                     (rule "exLeft" (formula "32") (inst "sk=j_0_1"))
                     (rule "andLeft" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "eqSymm" (formula "34") (term "1"))
                     (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "33"))
                     (rule "polySimp_addComm1" (formula "33") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "mul_literals" (formula "33") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "allLeft" (formula "19") (inst "t=j_0_1"))
                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "33"))
                     (rule "qeq_literals" (formula "19") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "19") (term "0,0,1"))
                     (rule "leq_literals" (formula "19") (term "0,1"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "allLeft" (formula "20") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                     (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "20") (term "0,1,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "allLeft" (formula "14") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "18"))
                     (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "allLeft" (formula "30") (inst "t=j_0_1"))
                     (rule "replaceKnownSelect_taclet0020000_9" (formula "30") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0020000_10" (formula "30") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                     (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "37"))
                     (rule "eqSymm" (formula "30") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "35"))
                     (rule "qeq_literals" (formula "30") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "30"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                     (rule "applyEq" (formula "19") (term "1") (ifseqformula "20"))
                     (rule "allLeft" (formula "31") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                     (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "31") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                     (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                     (rule "hideAuxiliaryEq" (formula "31"))
                     (rule "allLeft" (formula "35") (inst "t=j_0_0"))
                     (rule "replaceKnownSelect_taclet0020000_11" (formula "35") (term "1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0020000_12" (formula "35") (term "1,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                     (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "31"))
                     (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "allLeft" (formula "4") (inst "t=j_0_1"))
                     (rule "replaceKnownSelect_taclet0020000_9" (formula "4") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0020000_10" (formula "4") (term "0,0,1"))
                     (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "37"))
                     (rule "qeq_literals" (formula "4") (term "0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "38"))
                     (rule "andLeft" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
                  (branch "Case 2"
                     (rule "exLeft" (formula "1") (inst "sk=j_0_0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                     (rule "commute_or" (formula "26") (term "1,0,0,0"))
                     (rule "all_pull_out3" (formula "12") (term "0"))
                     (rule "shift_paren_or" (formula "12") (term "0,0"))
                     (rule "shift_paren_or" (formula "12") (term "0,0,0"))
                     (rule "swapQuantifiersAll" (formula "12"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "ex_pull_out3" (formula "13") (term "0"))
                     (rule "cnf_rightDist" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
                     (rule "commute_or" (formula "13") (term "1,0,0,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0") (ifseqformula "16"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "1,1,1,0,2,0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "40"))
                      (builtin "One Step Simplification" (formula "5"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,0") (ifseqformula "18"))
                     (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "allLeft" (formula "14") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "leq_literals" (formula "14") (term "0,1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "14") (term "0,1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "allLeft" (formula "28") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "28") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")) (ifInst ""  (formula "42")))
                     (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                     (rule "hideAuxiliaryEq" (formula "28"))
                     (rule "allLeft" (formula "17") (inst "t=j_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                     (rule "add_literals" (formula "17") (term "0,0,1"))
                     (rule "leq_literals" (formula "17") (term "0,1"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "17") (term "0,1"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "allLeft" (formula "32") (inst "t=j_0_0"))
                     (rule "replaceKnownSelect_taclet1020000_9" (formula "32") (term "1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1020000_10" (formula "32") (term "1,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                     (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                     (rule "add_literals" (formula "32") (term "0,0,1"))
                     (rule "leq_literals" (formula "32") (term "0,1"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "closeFalse" (formula "32"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "37") (inst "sk=j_0"))
                  (rule "orRight" (formula "37"))
                  (rule "orRight" (formula "37"))
                  (rule "inEqSimp_geqRight" (formula "38"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "38"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "39") (term "1,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                  (rule "applyEqReverse" (formula "40") (term "1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "39") (term "1") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                  (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                  (rule "commute_or" (formula "25") (term "1,0,0,0"))
                  (rule "all_pull_out3" (formula "11") (term "0"))
                  (rule "shift_paren_or" (formula "11") (term "0,0"))
                  (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                  (rule "swapQuantifiersAll" (formula "11"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "ex_pull_out3" (formula "12") (term "0"))
                  (rule "cnf_rightDist" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "12") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
                  (rule "commute_or" (formula "12") (term "1,0,0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "1,0") (ifseqformula "15"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,1,1") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "5"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "1,1,0,0,2,0") (ifseqformula "18"))
                  (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "allLeft" (formula "24") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet120000_9" (formula "24") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet120000_10" (formula "24") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                  (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "24") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "24") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "24") (term "0,0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "24"))
                  (rule "allLeft" (formula "32") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet120000_11" (formula "32") (term "1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet120000_12" (formula "32") (term "1,0,0"))
                  (rule "replaceKnownSelect_taclet120000_9" (formula "32") (term "1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet120000_10" (formula "32") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "24"))
                  (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "32") (term "0,0"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "4"))
                  (rule "andLeft" (formula "32"))
                  (rule "inEqSimp_homoInEq1" (formula "32"))
                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                  (rule "add_literals" (formula "32") (term "1,1,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0"))
                  (rule "add_zero_right" (formula "32") (term "0"))
                  (rule "leq_literals" (formula "32"))
                  (rule "closeFalse" (formula "32"))
               )
            )
         )
         (branch "Exceptional Post (resize)"
             (builtin "One Step Simplification" (formula "20"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "16"))
            (rule "close" (formula "20") (ifseqformula "19"))
         )
         (branch "Pre (resize)"
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "2")))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "6"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "inEqSimp_commuteGeq" (formula "18") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,0"))
            (rule "times_zero_1" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
            (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0"))
            (rule "add_literals" (formula "17") (term "1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "0,0"))
            (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
            (rule "leq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "mul_literals" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "Class_invariant_axiom_for_KIMapImpl" (formula "16") (inst "j=j") (inst "x=x_4") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")) (ifInst ""  (formula "12")))
            (rule "eqSymm" (formula "16") (term "0,1,0,0,0,0,0"))
            (rule "eqSymm" (formula "16") (term "1,0,1,0,1,0,0"))
            (rule "eqSymm" (formula "16") (term "0,1,0,0,1,0,0,0"))
            (rule "eqSymm" (formula "16") (term "1,0,0,0,0,0,0"))
            (rule "replace_known_right" (formula "16") (term "0,1,0,0,0,0,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,1,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "16") (term "0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0,0,0"))
            (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "11"))
            (rule "eqSymm" (formula "16") (term "1"))
            (rule "applyEq" (formula "16") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "16") (term "1,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "1,0,1,1,0,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "0,1,1,0,0,0,0"))
            (rule "leq_literals" (formula "16") (term "1,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "applyEq" (formula "16") (term "0,1,0,0,0,0,0") (ifseqformula "7"))
            (rule "eqSymm" (formula "16") (term "1,0,0,0,0,0"))
            (rule "replace_known_left" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
            (rule "replace_known_left" (formula "16") (term "0,0,0,0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "inEqSimp_subsumption1" (formula "16") (term "0,0,0,0") (ifseqformula "6"))
            (rule "leq_literals" (formula "16") (term "0,0,0,0,0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "commuteUnion" (formula "16") (term "1,0,1"))
            (rule "eqSymm" (formula "16") (term "1"))
            (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "16") (term "0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "commute_or_2" (formula "8") (term "0,0,0"))
            (rule "commute_and" (formula "9") (term "0,0,1,0"))
            (rule "replace_known_left" (formula "16") (term "1,0,0") (ifseqformula "9"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "commute_or" (formula "8") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "8"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "commute_or_2" (formula "8") (term "0,0,0"))
            (rule "cnf_eqv" (formula "9") (term "0"))
            (rule "nnf_notEx" (formula "9") (term "1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,0"))
            (rule "distr_forallAnd" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
            (rule "leq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "arrayLengthIsAnInt" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "7") (term "0"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "associativeLawUnion" (formula "17") (term "1,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "allRight" (formula "17") (inst "sk=j_0"))
            (rule "orRight" (formula "17"))
            (rule "orRight" (formula "17"))
            (rule "inEqSimp_leqRight" (formula "17"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "18"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "ex_pull_out3" (formula "12") (term "0"))
            (rule "cnf_rightDist" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "12") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "12") (term "0,0,0"))
            (rule "commute_or" (formula "12") (term "1,0,0,0"))
            (rule "allLeft" (formula "13") (inst "t=j_0"))
            (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "20"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,1"))
            (rule "leq_literals" (formula "13") (term "0,1"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
            (rule "qeq_literals" (formula "2") (term "0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
      (branch "Null Reference (x_arr_1 = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "18"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
       (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_add,result,exc_0,heapAfter_add,anon_heap_add") (contract "KIMapImpl[KIMapImpl::add(int,int)].JML normal_behavior operation contract.0"))
      (branch "Post (add)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaAddInt" (formula "14") (term "1,0,1,0,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,1,0,1,0,1,1"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "18"))
         (rule "eqSymm" (formula "17") (term "1,1"))
         (rule "eqSymm" (formula "20"))
         (rule "polySimp_elimSub" (formula "17") (term "0,1,1"))
         (rule "mul_literals" (formula "17") (term "1,0,1,1"))
         (rule "polySimp_addComm0" (formula "17") (term "1,0,1"))
         (rule "polySimp_addComm0" (formula "17") (term "0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "pullOutSelect" (formula "17") (term "0,0,1") (inst "selectSK=KIMapImpl_count_0"))
         (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
         (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "17"))
         (rule "applyEq" (formula "18") (term "1,0,1,1") (ifseqformula "17"))
         (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
         (rule "eqSymm" (formula "18") (term "0,0"))
         (rule "eqSymm" (formula "18") (term "1,1"))
         (rule "elementOfUnion" (formula "17") (term "0,0"))
         (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "elementOfUnion" (formula "17") (term "0,0"))
         (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "17"))
         (rule "applyEqReverse" (formula "18") (term "0,0,1") (ifseqformula "17"))
         (rule "applyEqReverse" (formula "18") (term "1,1,1,1") (ifseqformula "17"))
         (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "17"))
         (rule "hideAuxiliaryEq" (formula "17"))
         (rule "eqSymm" (formula "17") (term "0,0"))
         (rule "pullOutSelect" (formula "18") (term "1,0") (inst "selectSK=KIMapImpl_keys_0"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "18") (term "0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "elementOfUnion" (formula "18") (term "0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "elementOfUnion" (formula "18") (term "0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "eqSymm" (formula "18") (term "1,0,0"))
         (rule "eqSymm" (formula "18") (term "0,0,0"))
         (rule "sortsDisjointModuloNull" (formula "18") (term "1,0,0"))
         (rule "replace_known_right" (formula "18") (term "0,1,0,0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "27")))
         (rule "sortsDisjointModuloNull" (formula "18") (term "0,0"))
         (rule "replace_known_right" (formula "18") (term "1,0,0") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")))
         (rule "applyEqReverse" (formula "19") (term "1,0") (ifseqformula "18"))
         (rule "hideAuxiliaryEq" (formula "18"))
         (rule "pullOutSelect" (formula "19") (term "1,0") (inst "selectSK=KIMapImpl_values_0"))
         (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
         (rule "elementOfUnion" (formula "19") (term "0,0"))
         (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elementOfUnion" (formula "19") (term "0,0"))
         (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elementOfUnion" (formula "19") (term "0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "eqSymm" (formula "19") (term "0,0,0"))
         (rule "eqSymm" (formula "19") (term "1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "19") (term "0,0,0"))
         (rule "replace_known_right" (formula "19") (term "0,0,0,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "27")))
         (rule "sortsDisjointModuloNull" (formula "19") (term "0,0"))
         (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
         (rule "applyEqReverse" (formula "20") (term "1,0") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=KIMap_m_0"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
         (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "21"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "elementOfUnion" (formula "20") (term "0,0"))
         (rule "elementOfSingleton" (formula "20") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "eqSymm" (formula "20"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")))
         (rule "eqSymm" (formula "19"))
         (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
         (rule "eqSymm" (formula "20"))
         (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "elementOfUnion" (formula "19") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elementOfUnion" (formula "19") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "19") (term "1,0,0,0"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "elementOfUnion" (formula "19") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")))
         (rule "commuteUnion" (formula "14") (term "1,0"))
         (rule "commuteUnion" (formula "14") (term "1,1,0"))
         (rule "commute_and" (formula "17") (term "1"))
         (rule "commute_and" (formula "17") (term "0"))
         (rule "Class_invariant_axiom_for_KIMapImpl" (formula "21") (inst "j=j") (inst "x=x_3") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "21"))
         (rule "replaceKnownSelect_taclet010_4" (formula "21") (term "0,0,1,1,1"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,1,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "21") (term "0,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,1,1,1,1"))
         (rule "replaceKnownSelect_taclet010_6" (formula "21") (term "0,0,0,1,0,0"))
         (rule "replaceKnownSelect_taclet010_6" (formula "21") (term "0,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet010_0" (formula "21") (term "1,1,0,0,1,0"))
         (rule "replaceKnownSelect_taclet010_4" (formula "21") (term "1,1,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "21") (term "0,0,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "21") (term "0,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "21") (term "1,1,0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "21") (term "1,1,1,0,1,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "1,1,0,1,0,1,0"))
         (rule "replaceKnownSelect_taclet010_0" (formula "21") (term "0,1,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_0" (formula "21") (term "1,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,0,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,1,1,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_4" (formula "21") (term "1,0,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "1,1,0,1,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "21") (term "0,1,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "21") (term "1,0,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,0,1,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_4" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_0" (formula "21") (term "1,1,0,0,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet010_0" (formula "21") (term "1,1,0,0,1,0,1,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "1,0,1,0,1,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,0,1,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,1,1,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "21") (term "1,0,1,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "1,1,0,1,0,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_2" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_4" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,0,1,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "21") (term "1,1,0,0,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "21") (term "1,1,0,0,1,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "1,0,1,0,1,0,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "1,1,0,1,0,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "eqSymm" (formula "25") (term "1,0,1,0"))
         (rule "eqSymm" (formula "24") (term "0,1,0,0"))
         (rule "eqSymm" (formula "28"))
         (rule "eqSymm" (formula "21"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21"))
         (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "20"))
         (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "20"))
         (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=KIMap_footprint_0"))
         (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")) (ifInst ""  (formula "2")))
         (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "12"))
         (rule "applyEq" (formula "26") (term "1") (ifseqformula "27"))
         (rule "elementOfUnion" (formula "26") (term "0,0"))
         (rule "elementOfSingleton" (formula "26") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "elementOfUnion" (formula "26") (term "0,0"))
         (rule "elementOfSingleton" (formula "26") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "elementOfUnion" (formula "26") (term "0,0"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "eqSymm" (formula "26") (term "0,0,0"))
         (rule "eqSymm" (formula "26") (term "1,0,0"))
         (rule "sortsDisjointModuloNull" (formula "26") (term "0,0,0"))
         (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
         (rule "sortsDisjointModuloNull" (formula "26") (term "0,0"))
         (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
         (rule "eqSymm" (formula "26"))
         (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
         (rule "commuteUnion" (formula "26") (term "1,0"))
         (rule "eqSymm" (formula "26"))
         (rule "applyEq" (formula "12") (term "1") (ifseqformula "26"))
         (rule "applyEq" (formula "27") (term "1") (ifseqformula "26"))
         (rule "methodCallEmpty" (formula "33") (term "1"))
         (rule "cnf_rightDist" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "commute_or" (formula "17"))
         (rule "associativeLawUnion" (formula "14") (term "1,0"))
         (rule "commute_and" (formula "26") (term "0,0"))
         (rule "cnf_rightDist" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "commute_or" (formula "18"))
         (rule "cnf_rightDist" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "commute_or" (formula "17"))
         (rule "commute_or" (formula "18"))
         (rule "arrayLengthIsAnInt" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "arrayLengthNotNegative" (formula "5") (term "0"))
         (rule "commute_and" (formula "28") (term "0,0,1,0"))
         (rule "commute_and" (formula "27") (term "0,0,0,0"))
         (rule "arrayLengthNotNegative" (formula "7") (term "0"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
         (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "associativeLawUnion" (formula "30") (term "1"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "associativeLawUnion" (formula "13") (term "1"))
         (rule "commute_and_2" (formula "27") (term "0,0,0"))
         (rule "associativeLawUnion" (formula "30") (term "1"))
         (rule "associativeLawUnion" (formula "15") (term "1,0"))
         (rule "tryEmpty" (formula "36") (term "1"))
         (rule "emptyModality" (formula "36") (term "1"))
         (rule "andRight" (formula "36"))
         (branch "Case 1"
            (rule "andRight" (formula "36"))
            (branch "Case 1"
               (rule "andRight" (formula "36"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "replaceKnownSelect_taclet010_6" (formula "36") (term "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "36") (term "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "closeTrue" (formula "36"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "polySimp_homoEq" (formula "18") (term "1"))
                  (rule "polySimp_homoEq" (formula "19") (term "0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "18") (term "1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                  (rule "mul_literals" (formula "18") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                  (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "31"))
                  (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0"))
                  (rule "leq_literals" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "false_right" (formula "31"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                  (rule "times_zero_1" (formula "24") (term "0,0"))
                  (rule "add_zero_left" (formula "24") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                  (rule "leq_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "inEqSimp_or_subsumption6" (formula "17"))
                  (rule "inEqSimp_gtToGeq" (formula "17") (term "0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1"))
                  (rule "qeq_literals" (formula "17") (term "0,1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                  (rule "mul_literals" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                  (rule "mul_literals" (formula "17") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "26") (term "0,0"))
                  (rule "nnf_imp2or" (formula "28") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "commute_and" (formula "10") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_and" (formula "27") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "Class_invariant_axiom_for_KIMapImpl" (formula "34") (inst "j=j") (inst "x=x_3") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "replaceKnownSelect_taclet010_12" (formula "34") (term "0,1"))
                  (rule "replaceKnownSelect_taclet010_4" (formula "34") (term "0,0,1,1,1"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,1,1,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "34") (term "0,0,1,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,1,1,1,1"))
                  (rule "replaceKnownSelect_taclet010_6" (formula "34") (term "0,0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet010_6" (formula "34") (term "0,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet010_4" (formula "34") (term "1,1,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet010_0" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "34") (term "0,0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "34") (term "0,0,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "34") (term "1,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet010_0" (formula "34") (term "0,1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_0" (formula "34") (term "1,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "1,1,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,1,1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_4" (formula "34") (term "1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "34") (term "0,1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "34") (term "1,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "1,1,0,1,0,1,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet010_0" (formula "34") (term "1,1,0,0,1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet010_0" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_4" (formula "34") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,1,1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,0,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "34") (term "1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "1,1,0,1,0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_2" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet010_4" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "1,0,1,0,1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "34") (term "1,1,0,0,1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_1" (formula "34") (term "1,1,0,0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "34") (term "0,1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "1,1,0,1,0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_3" (formula "34") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "34") (term "0,1,0,0,0,0,0"))
                  (rule "eqSymm" (formula "34") (term "1,0,1,0,1,0,0"))
                  (rule "eqSymm" (formula "34") (term "1,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "34") (term "0,1,0,0,1,0,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "30")) (ifInst ""  (formula "6")) (ifInst ""  (formula "32")) (ifInst ""  (formula "25")))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "34") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0,0,0"))
                  (rule "replace_known_left" (formula "34") (term "1,0,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "applyEq" (formula "34") (term "0,0,1,0,1,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "29"))
                  (rule "eqSymm" (formula "34") (term "1"))
                  (rule "applyEq" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "23"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,1,0,0"))
                  (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1,0,0,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "commuteUnion" (formula "34") (term "1,0,1"))
                  (rule "eqSymm" (formula "34") (term "1"))
                  (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "34") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0,0,0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or" (formula "28") (term "0,0"))
                  (rule "commute_or_2" (formula "9") (term "0,0,0"))
                  (rule "cnf_eqv" (formula "10") (term "0"))
                  (rule "nnf_notEx" (formula "10") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,0"))
                  (rule "distr_forallAnd" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "cnf_eqv" (formula "28") (term "0"))
                  (rule "nnf_notEx" (formula "28") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                  (rule "distr_forallAnd" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "30") (term "0"))
                  (rule "commute_or" (formula "27") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "commute_or" (formula "9") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0,0,0"))
                  (rule "commute_or_2" (formula "9") (term "0,0,0"))
                  (rule "associativeLawUnion" (formula "36") (term "1,1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "allRight" (formula "36") (inst "sk=j_0"))
                  (rule "orRight" (formula "36"))
                  (rule "orRight" (formula "36"))
                  (rule "inEqSimp_geqRight" (formula "37"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "37"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "38") (term "1,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "39") (term "1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "ex_pull_out3" (formula "14") (term "0"))
                  (rule "cnf_rightDist" (formula "14") (term "0,0"))
                  (rule "commute_or" (formula "14") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "14") (term "0,0,0"))
                  (rule "commute_or" (formula "14") (term "1,0,0,0"))
                  (rule "all_pull_out3" (formula "13") (term "0"))
                  (rule "shift_paren_or" (formula "13") (term "0,0"))
                  (rule "shift_paren_or" (formula "13") (term "0,0,0"))
                  (rule "swapQuantifiersAll" (formula "13"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "ex_pull_out3" (formula "32") (term "0"))
                  (rule "cnf_rightDist" (formula "32") (term "0,0"))
                  (rule "commute_or" (formula "32") (term "1,0,0"))
                  (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
                  (rule "commute_or" (formula "32") (term "1,0,0,0"))
                  (rule "all_pull_out3" (formula "31") (term "0"))
                  (rule "shift_paren_or" (formula "31") (term "0,0"))
                  (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                  (rule "swapQuantifiersAll" (formula "31"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "allLeft" (formula "33") (inst "t=result"))
                  (rule "replaceKnownSelect_taclet010_10" (formula "33") (term "1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_11" (formula "33") (term "1,0,0"))
                  (rule "replaceKnownSelect_taclet010_8" (formula "33") (term "1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010_9" (formula "33") (term "1,0,0,0"))
                  (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                  (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,1"))
                  (rule "leq_literals" (formula "33") (term "0,1"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "20"))
                  (rule "qeq_literals" (formula "33") (term "0,1"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "allLeft" (formula "34") (inst "t=j_0"))
                  (rule "replaceKnownSelect_taclet100010_15" (formula "34") (term "1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_16" (formula "34") (term "1,0,0"))
                  (rule "replaceKnownSelect_taclet100010_13" (formula "34") (term "1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_14" (formula "34") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "41"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "34") (term "0,0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "34"))
                  (rule "andLeft" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "36"))
               (rule "closeTrue" (formula "36"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "36"))
            (rule "allRight" (formula "36") (inst "sk=f_0"))
            (rule "allRight" (formula "36") (inst "sk=o_0"))
            (rule "orRight" (formula "36"))
            (rule "orRight" (formula "36"))
            (rule "eqSymm" (formula "38"))
            (rule "polySimp_homoEq" (formula "18") (term "1"))
            (rule "polySimp_homoEq" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "inEqSimp_gtToGeq" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1,0,0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,0"))
            (rule "applyEq" (formula "36") (term "2") (ifseqformula "13"))
            (rule "polySimp_sepPosMonomial" (formula "18") (term "1"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
            (rule "polySimp_rightDist" (formula "18") (term "1,1"))
            (rule "mul_literals" (formula "18") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "19") (term "0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0"))
            (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "31"))
            (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "9"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
            (rule "add_literals" (formula "31") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "31") (term "1,0,0"))
            (rule "add_zero_right" (formula "31") (term "0,0"))
            (rule "leq_literals" (formula "31") (term "0"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "false_right" (formula "31"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "elementOfUnion" (formula "34"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "orRight" (formula "34"))
            (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
            (rule "eqSymm" (formula "38"))
            (rule "elementOfUnion" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "orRight" (formula "35"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (add)"
          (builtin "One Step Simplification" (formula "20"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,1,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "14") (term "1,0,1,0,1,0,1,1"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "17"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (add)"
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")))
         (rule "translateJavaSubInt" (formula "18") (term "1,0"))
         (rule "polySimp_elimSub" (formula "18") (term "1,0"))
         (rule "mul_literals" (formula "18") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "18") (term "1,0"))
         (rule "inEqSimp_gtToGeq" (formula "5"))
         (rule "times_zero_1" (formula "5") (term "1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
         (rule "mul_literals" (formula "5") (term "1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
         (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "13"))
         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "8"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
         (rule "add_literals" (formula "13") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0"))
         (rule "leq_literals" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "false_right" (formula "13"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "Class_invariant_axiom_for_KIMapImpl" (formula "17") (inst "j=j") (inst "x=x_3") (inst "j_0=j_0") (inst "j_1=j_1") (inst "i=i") (ifseqformula "3"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
         (rule "eqSymm" (formula "17") (term "1,0,1,0,1,0,0"))
         (rule "eqSymm" (formula "17") (term "0,1,0,0,1,0,0,0"))
         (rule "eqSymm" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "17") (term "0,1,0,0,0,0,0"))
         (rule "replace_known_right" (formula "17") (term "0,1,0,0,0,0,0") (ifseqformula "15"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "6")))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "17") (term "0,0,0,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,1,0,0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0,0,0,0"))
         (rule "replace_known_left" (formula "17") (term "0,1,0,0,0,0") (ifseqformula "7"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0"))
         (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "12"))
         (rule "eqSymm" (formula "17") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
         (rule "replace_known_left" (formula "17") (term "0,0,0,0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,0,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,0,0") (ifseqformula "8"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0"))
         (rule "qeq_literals" (formula "17") (term "0,0,0,0,0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "commuteUnion" (formula "17") (term "1,0,1"))
         (rule "eqSymm" (formula "17") (term "1"))
         (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0"))
         (rule "nnf_imp2or" (formula "17") (term "0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0,0"))
         (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_and" (formula "10") (term "0,0,1,0"))
         (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "10"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "commute_or_2" (formula "9") (term "0,0,0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or" (formula "9") (term "0,0,0,0"))
         (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "commute_or_2" (formula "9") (term "0,0,0"))
         (rule "cnf_eqv" (formula "10") (term "0"))
         (rule "nnf_notEx" (formula "10") (term "1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,0"))
         (rule "distr_forallAnd" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "arrayLengthIsAnInt" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthNotNegative" (formula "6") (term "0"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthIsAnInt" (formula "6") (term "1"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthNotNegative" (formula "6") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "associativeLawUnion" (formula "18") (term "1,1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "allRight" (formula "18") (inst "sk=j_0"))
         (rule "orRight" (formula "18"))
         (rule "orRight" (formula "18"))
         (rule "inEqSimp_geqRight" (formula "19"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "19"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "ex_pull_out3" (formula "13") (term "0"))
         (rule "cnf_rightDist" (formula "13") (term "0,0"))
         (rule "commute_or" (formula "13") (term "1,0,0"))
         (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
         (rule "commute_or" (formula "13") (term "1,0,0,0"))
         (rule "allLeft" (formula "14") (inst "t=j_0"))
         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "21"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "14") (term "0,0,1"))
         (rule "leq_literals" (formula "14") (term "0,1"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "1"))
         (rule "qeq_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "closeFalse" (formula "14"))
      )
   )
)
(branch "Null Reference (x_arr = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
   (rule "closeFalse" (formula "1"))
)
)
}
