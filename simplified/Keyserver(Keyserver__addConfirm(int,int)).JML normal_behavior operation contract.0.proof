\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Feb 05 11:44:49 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource ".";

\proofObligation "#Proof Obligation Settings
#Wed Feb 05 11:44:49 CET 2020
contract=Keyserver[Keyserver\\:\\:addConfirm(int,int)].JML normal_behavior operation contract.0
name=Keyserver[Keyserver\\:\\:addConfirm(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "sdg" ) (keyVersion "5c71d010aea2ef9b4a159569bd7f9d3d7b0f4027"))

(autoModeTime "5633")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,1,0") (newnames "id,code,self,result,exc,heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "exLeft" (formula "10") (inst "sk=i_0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "12"))
(rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "18") (term "0,1,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "18") (term "1,1,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "18") (term "1,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "9"))
(rule "times_zero_1" (formula "9") (term "1,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "11"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "assignment" (formula "18") (term "1"))
(rule "sequentialToParallel2" (formula "18"))
(rule "simplifyUpdate3" (formula "18") (term "1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9"))
(rule "mul_literals" (formula "9") (term "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "11"))
(rule "polySimp_mulLiterals" (formula "11") (term "0"))
(rule "polySimp_elimOne" (formula "11") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "18") (term "0,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "10"))
(rule "leq_literals" (formula "13") (term "0"))
(rule "concrete_or_1" (formula "13"))
(rule "true_left" (formula "13"))
(rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
(rule "leq_literals" (formula "7") (term "0"))
(rule "concrete_or_1" (formula "7"))
(rule "true_left" (formula "7"))
(rule "elementOfUnion" (formula "16") (term "0,0,0,0,1,0,1"))
(rule "elementOfAllFields" (formula "16") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfAllFields" (formula "16") (term "0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "16") (term "1,0,0,1,1,0,0,0,1"))
(rule "double_not" (formula "16") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "16") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "0,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "16") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "1,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "16") (term "0,0,1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "16") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_Keyserver" (formula "14") (inst "j=j") (inst "i=i") (ifseqformula "3"))
(rule "expand_inInt" (formula "14") (term "1,0,0,0,1"))
(rule "expand_inInt" (formula "14") (term "1,0,0,0,0,1"))
(rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,0,1"))
(rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0,0,0,1"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "19"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "19"))
(rule "notLeft" (formula "18"))
(rule "notLeft" (formula "19"))
(rule "notLeft" (formula "18"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "eqSymm" (formula "20") (term "0,1,0,0"))
(rule "eqSymm" (formula "30"))
(rule "eqSymm" (formula "27"))
(rule "eqSymm" (formula "23"))
(rule "eqSymm" (formula "22"))
(rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0,0,0"))
(rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18"))
(rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0,0"))
(rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0,0"))
(rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "19"))
(rule "polySimp_rightDist" (formula "10") (term "0,0"))
(rule "mul_literals" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1"))
(rule "polySimp_rightDist" (formula "10") (term "1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
(rule "mul_literals" (formula "10") (term "0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1"))
(rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
(rule "times_zero_1" (formula "19") (term "0,0"))
(rule "add_zero_left" (formula "19") (term "0"))
(rule "nnf_imp2or" (formula "22") (term "0,0"))
(rule "nnf_notAnd" (formula "22") (term "0,0,0"))
(rule "nnf_notAnd" (formula "22") (term "1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,1,0,0,0"))
(rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
(rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,0"))
(rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0"))
(rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,1,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,1,1,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,1,0,0,0,0"))
(rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,0,0"))
(rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0,0,0,0"))
(rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,0"))
(rule "methodBodyExpand" (formula "34") (term "1") (newnames "heapBefore_addConfirm,savedHeapBefore_addConfirm"))
(rule "simplifyUpdate2" (formula "34") (term "1"))
(rule "variableDeclarationAssign" (formula "34") (term "1"))
(rule "variableDeclaration" (formula "34") (term "1") (newnames "pos"))
(rule "commute_or" (formula "22") (term "1,0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0,0,0"))
(rule "shift_paren_or" (formula "22") (term "0,0,0,0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0,0"))
(rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0"))
(rule "commute_or_2" (formula "22") (term "0,0,0,0,0,0,0"))
(rule "commute_or" (formula "22") (term "0,0,0,0,0,0,0,0"))
(rule "inEqSimp_or_subsumption0" (formula "22") (term "0,0,0,0,0,0,0,0"))
(rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0,0,0,0,0"))
(rule "concrete_and_2" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
(rule "concrete_or_2" (formula "22") (term "0,0,0,0,0,0,0,0"))
 (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_posOfId,result_0,exc_0") (contract "Keyserver[Keyserver::posOfId(int)].JML normal_behavior operation contract.0"))
(branch "Post (posOfId)"
   (rule "expand_inInt" (formula "23") (term "1,0,1,1"))
   (rule "simplifyUpdate2" (formula "35"))
   (rule "expand_inInt" (formula "23") (term "1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,1,1"))
   (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,1,0,1,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "simplifyUpdate2" (formula "23") (term "1"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "24"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "27"))
   (rule "simplifyUpdate2" (formula "28"))
   (rule "applyOnRigidFormula" (formula "26"))
   (rule "simplifyUpdate2" (formula "26") (term "0"))
   (rule "applyOnRigidFormula" (formula "27"))
   (rule "simplifyUpdate2" (formula "27") (term "0"))
   (rule "applyOnRigidFormula" (formula "26") (term "1"))
   (rule "applyOnRigidFormula" (formula "27") (term "1"))
   (rule "simplifyUpdate2" (formula "27") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,1"))
   (rule "simplifyUpdate2" (formula "26") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "27") (term "0,1"))
   (rule "applyOnPV" (formula "27") (term "1,0,1"))
   (rule "simplifyUpdate1" (formula "27") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "26") (term "1,0,1"))
   (rule "applyOnRigidFormula" (formula "26") (term "0,1,0,1"))
   (rule "applyOnPV" (formula "26") (term "1,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "26") (term "0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1"))
   (rule "polySimp_addComm1" (formula "27") (term "0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1"))
   (rule "assignment" (formula "41") (term "1"))
   (rule "sequentialToParallel2" (formula "41"))
   (rule "simplifyUpdate3" (formula "41") (term "1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "27") (term "0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1"))
   (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1"))
   (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
   (rule "leq_literals" (formula "24") (term "0"))
   (rule "concrete_or_1" (formula "24"))
   (rule "true_left" (formula "24"))
   (rule "nnf_imp2or" (formula "25") (term "0,1"))
   (rule "nnf_notAnd" (formula "25") (term "0,0,1"))
   (rule "nnf_notAnd" (formula "25") (term "0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,1"))
   (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,1"))
   (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,1"))
   (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,1"))
   (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "25") (term "1,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "25") (term "1,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "25") (term "1,0,0,1,1,0,0,1"))
   (rule "add_literals" (formula "25") (term "0,0,1,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,1"))
   (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0,1"))
   (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,1"))
   (rule "mul_literals" (formula "25") (term "1,0,1,0,0,1"))
   (rule "Class_invariant_axiom_for_Keyserver" (formula "27") (inst "j=j") (inst "i=i") (ifseqformula "3"))
   (rule "expand_inInt" (formula "27") (term "1,0,0,0,1"))
   (rule "expand_inInt" (formula "27") (term "1,0,0,0,0,1"))
   (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0,0,1"))
   (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0,0,0,1"))
   (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0,0,0,1"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "29"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "31"))
   (rule "notLeft" (formula "31"))
   (rule "notLeft" (formula "30"))
   (rule "notLeft" (formula "29"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "29"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "29"))
   (rule "notLeft" (formula "30"))
   (rule "notLeft" (formula "29"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "29"))
   (rule "notLeft" (formula "28"))
   (rule "notLeft" (formula "27"))
   (rule "eqSymm" (formula "28") (term "0,1,0,0"))
   (rule "eqSymm" (formula "33"))
   (rule "eqSymm" (formula "32"))
   (rule "eqSymm" (formula "31"))
   (rule "eqSymm" (formula "30"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "27") (term "0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,1,1,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,1,0,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,1,1,0,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,0"))
   (rule "commute_and" (formula "26") (term "1"))
   (rule "commute_or_2" (formula "25") (term "0,0,1"))
   (rule "arrayLengthIsAnInt" (formula "18") (term "0"))
   (rule "expand_inInt" (formula "18"))
   (rule "replace_int_MIN" (formula "18") (term "0,1"))
   (rule "replace_int_MAX" (formula "18") (term "1,0"))
   (rule "andLeft" (formula "18"))
   (rule "inEqSimp_commuteLeq" (formula "19"))
   (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
   (rule "leq_literals" (formula "19") (term "0"))
   (rule "concrete_or_1" (formula "19"))
   (rule "true_left" (formula "19"))
   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "18"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0"))
   (rule "add_literals" (formula "10") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
   (rule "polySimp_elimOne" (formula "10") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "10"))
   (rule "leq_literals" (formula "13") (term "0"))
   (rule "concrete_or_1" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "19") (term "0"))
   (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
   (rule "arrayLengthNotNegative" (formula "17") (term "0"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
   (rule "arrayLengthIsAnInt" (formula "17") (term "0"))
   (rule "expand_inInt" (formula "17"))
   (rule "replace_int_MIN" (formula "17") (term "0,1"))
   (rule "replace_int_MAX" (formula "17") (term "1,0"))
   (rule "andLeft" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "18"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "21"))
   (rule "leq_literals" (formula "17") (term "0"))
   (rule "concrete_or_1" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "arrayLengthIsAnInt" (formula "15") (term "0"))
   (rule "expand_inInt" (formula "15"))
   (rule "replace_int_MIN" (formula "15") (term "0,1"))
   (rule "replace_int_MAX" (formula "15") (term "1,0"))
   (rule "andLeft" (formula "15"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
   (rule "leq_literals" (formula "15") (term "0"))
   (rule "concrete_or_1" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "arrayLengthIsAnInt" (formula "16") (term "0"))
   (rule "expand_inInt" (formula "16"))
   (rule "replace_int_MIN" (formula "16") (term "0,1"))
   (rule "replace_int_MAX" (formula "16") (term "1,0"))
   (rule "andLeft" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "17"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "21"))
   (rule "leq_literals" (formula "16") (term "0"))
   (rule "concrete_or_1" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "arrayLengthNotNegative" (formula "15") (term "0"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
   (rule "arrayLengthNotNegative" (formula "16") (term "0"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
   (rule "commute_or" (formula "28") (term "1,0,0,0"))
   (rule "commute_or" (formula "28") (term "1,0,0,0,0"))
   (rule "ifElseUnfold" (formula "41") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "x"))
   (rule "commute_or_2" (formula "28") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "26") (term "0,0,0,1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "38"))
   (rule "concrete_or_2" (formula "14"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "35"))
   (rule "concrete_or_2" (formula "13"))
   (rule "commute_or_2" (formula "30") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "28") (term "0,0,0,1"))
   (rule "commute_or_2" (formula "30") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "28") (term "0,0,0,0,1"))
   (rule "inEqSimp_or_subsumption0" (formula "28") (term "0,0,0,0,1"))
   (rule "qeq_literals" (formula "28") (term "0,0,0,0,0,0,1"))
   (rule "concrete_and_2" (formula "28") (term "0,0,0,0,0,1"))
   (rule "concrete_or_2" (formula "28") (term "0,0,0,0,1"))
   (rule "shift_paren_or" (formula "30") (term "0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "30") (term "0,0,0"))
   (rule "commute_or_2" (formula "30") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "30") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "30") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_or_subsumption0" (formula "30") (term "0,0,0,0,0,0,0,0"))
   (rule "qeq_literals" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_2" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
   (rule "concrete_or_2" (formula "30") (term "0,0,0,0,0,0,0,0"))
   (rule "compound_assignment_3_nonsimple" (formula "42") (term "1"))
   (rule "ifElseUnfold" (formula "42") (term "1") (inst "#boolv=x_1"))
   (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_1"))
   (rule "compound_assignment_2" (formula "42") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "42") (term "1"))
   (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_2"))
   (rule "compound_assignment_3_nonsimple" (formula "42") (term "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "40"))
   (rule "concrete_or_2" (formula "21"))
   (rule "ifElseUnfold" (formula "43") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_3"))
   (rule "compound_assignment_2" (formula "43") (term "1") (inst "#v=x_4"))
   (rule "variableDeclarationAssign" (formula "43") (term "1"))
   (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_4"))
   (rule "greater_equal_than_comparison_simple" (formula "43") (term "1"))
   (rule "sequentialToParallel2" (formula "43"))
   (rule "simplifyUpdate3" (formula "43") (term "1,0"))
   (rule "applyOnElementary" (formula "43") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,1,0"))
   (rule "compound_assignment_1_new" (formula "43") (term "1"))
   (rule "sequentialToParallel2" (formula "43"))
   (rule "simplifyUpdate2" (formula "43"))
   (rule "simplifyUpdate3" (formula "43") (term "1,0"))
   (rule "applyOnElementary" (formula "43") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "43") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "43") (term "0,0,0,1,0"))
   (rule "ifthenelse_concrete3" (formula "43") (term "0,0,1,0"))
   (rule "boolean_not_equal_2" (formula "43") (term "1,0,0,1,0"))
   (rule "concrete_or_4" (formula "43") (term "0,0,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "37"))
   (rule "concrete_or_2" (formula "18"))
   (rule "ifElseSplit" (formula "44"))
   (branch "if x_3 true"
      (rule "simplifyUpdate2" (formula "45"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete4" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "33"))
      (rule "concrete_impl_2" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_geqRight" (formula "32"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "assignment" (formula "44") (term "1"))
      (rule "sequentialToParallel2" (formula "44"))
      (rule "simplifyUpdate3" (formula "44") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "1"))
      (rule "leq_literals" (formula "29") (term "0"))
      (rule "concrete_or_1" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "1"))
      (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
      (rule "concrete_impl_1" (formula "31"))
      (rule "applyEq" (formula "44") (term "0,1,0,0") (ifseqformula "29"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
      (rule "qeq_literals" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "compound_assignment_1_new" (formula "42") (term "1"))
      (rule "sequentialToParallel2" (formula "42"))
      (rule "simplifyUpdate2" (formula "42"))
      (rule "simplifyUpdate3" (formula "42") (term "1,0"))
      (rule "applyOnElementary" (formula "42") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "42") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "42") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "42") (term "0,0,0,1,0"))
      (rule "boolean_not_equal_2" (formula "42") (term "0,0,1,0"))
      (rule "ifthenelse_false" (formula "42") (term "0,1,0"))
      (rule "allLeft" (formula "29") (inst "t=i_0"))
      (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "14"))
      (rule "concrete_not_1" (formula "29") (term "1"))
      (rule "concrete_or_4" (formula "29"))
      (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
      (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "29") (term "0,0,1"))
      (rule "leq_literals" (formula "29") (term "0,1"))
      (rule "concrete_and_2" (formula "29") (term "1"))
      (rule "concrete_or_4" (formula "29"))
      (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "10"))
      (rule "qeq_literals" (formula "29") (term "0,1"))
      (rule "concrete_and_2" (formula "29") (term "1"))
      (rule "concrete_or_4" (formula "29"))
      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "29"))
      (rule "qeq_literals" (formula "9") (term "0"))
      (rule "concrete_and_2" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
   (branch "if x_3 false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "45"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "33"))
      (rule "simplifyUpdate1" (formula "33") (term "1"))
      (rule "applyOnPV" (formula "33") (term "0"))
      (rule "ifthenelse_concrete4" (formula "33"))
      (rule "boolean_not_equal_2" (formula "33") (term "1"))
      (rule "concrete_or_4" (formula "33"))
      (rule "notRight" (formula "33"))
      (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
      (rule "concrete_impl_1" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "inEqSimp_contradEq7" (formula "31") (term "0") (ifseqformula "1"))
      (rule "add_zero_left" (formula "31") (term "0,0,0"))
      (rule "mul_literals" (formula "31") (term "0,0,0"))
      (rule "leq_literals" (formula "31") (term "0,0"))
      (rule "concrete_and_2" (formula "31") (term "0"))
      (rule "concrete_impl_2" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "1"))
      (rule "leq_literals" (formula "30") (term "0"))
      (rule "concrete_or_1" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "27"))
      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
      (rule "mul_literals" (formula "30") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1"))
      (rule "polySimp_rightDist" (formula "30") (term "1"))
      (rule "mul_literals" (formula "30") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "22"))
      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
      (rule "mul_literals" (formula "30") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "add_literals" (formula "30") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
      (rule "polySimp_elimOne" (formula "30") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "29") (ifseqformula "30"))
      (rule "leq_literals" (formula "29") (term "0"))
      (rule "concrete_or_1" (formula "29"))
      (rule "true_left" (formula "29"))
      (rule "greater_than_comparison_simple" (formula "45") (term "1"))
      (rule "sequentialToParallel2" (formula "45"))
      (rule "simplifyUpdate3" (formula "45") (term "1,0"))
      (rule "applyOnElementary" (formula "45") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "45") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "45") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "45") (term "0,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "45") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,0"))
      (rule "blockEmpty" (formula "45") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,1,0"))
      (rule "mul_literals" (formula "45") (term "1,0,0,1,0"))
      (rule "replace_known_left" (formula "45") (term "0,0,1,0") (ifseqformula "9"))
      (rule "ifthenelse_true" (formula "45") (term "0,1,0"))
      (rule "compound_assignment_1_new" (formula "45") (term "1"))
      (rule "sequentialToParallel2" (formula "45"))
      (rule "simplifyUpdate2" (formula "45"))
      (rule "simplifyUpdate3" (formula "45") (term "1,0"))
      (rule "applyOnElementary" (formula "45") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "45") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "45") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "45") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "45") (term "0,0,0,1,0"))
      (rule "boolean_equal" (formula "45") (term "0,0,1,0"))
      (rule "ifthenelse_true" (formula "45") (term "0,1,0"))
      (rule "ifElseSplit" (formula "45"))
      (branch "if x_1 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "46"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "boolean_not_equal_2" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "46"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "34"))
         (rule "simplifyUpdate1" (formula "34") (term "1"))
         (rule "applyOnPV" (formula "34") (term "0"))
         (rule "boolean_not_equal_2" (formula "34"))
         (rule "false_right" (formula "34"))
         (rule "compound_equality_comparison_2" (formula "45") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
         (rule "variableDeclarationAssign" (formula "45") (term "1"))
         (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "45") (term "1"))
         (rule "sequentialToParallel2" (formula "45"))
         (rule "simplifyUpdate2" (formula "45"))
         (rule "simplifyUpdate3" (formula "45") (term "1,0"))
         (rule "applyOnElementary" (formula "45") (term "1,0"))
         (rule "applyOnPV" (formula "45") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "45") (term "1"))
         (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_6"))
         (rule "eval_order_array_access4" (formula "45") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "45") (term "1"))
         (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_arr"))
         (rule "assignment_read_attribute_this" (formula "45"))
         (rule "sequentialToParallel2" (formula "45"))
         (rule "simplifyUpdate3" (formula "45") (term "1,0"))
         (rule "assignment_array2" (formula "45"))
         (branch "Normal Execution (x_arr != null)"
            (rule "sequentialToParallel2" (formula "45"))
            (rule "simplifyUpdate2" (formula "45"))
            (rule "simplifyUpdate3" (formula "45") (term "1,0"))
            (rule "applyOnElementary" (formula "45") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "45") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "45") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "45") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "45") (term "0,2,0,1,0"))
            (rule "equality_comparison_simple" (formula "45") (term "1"))
            (rule "eqSymm" (formula "45") (term "0,0,0,1"))
            (rule "sequentialToParallel2" (formula "45"))
            (rule "simplifyUpdate2" (formula "45"))
            (rule "simplifyUpdate3" (formula "45") (term "1,0"))
            (rule "applyOnElementary" (formula "45") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "45") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "2,0,1,0"))
            (rule "applyOnRigidFormula" (formula "45") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "1,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "45") (term "0,0,0,1,0"))
            (rule "applyOnPV" (formula "45") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "45") (term "0,0,0,1,0"))
            (rule "blockEmpty" (formula "45") (term "1"))
            (rule "ifElseSplit" (formula "45"))
            (branch "if x true"
               (rule "simplifyUpdate2" (formula "1"))
               (rule "simplifyUpdate2" (formula "46"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "ifthenelse_concrete3" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "eval_order_array_access1" (formula "46") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "46"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "eval_order_array_access3" (formula "46") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_2"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_2"))
               (rule "assignment" (formula "46") (term "1"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "applyOnElementary" (formula "46") (term "1,0"))
               (rule "applyOnPV" (formula "46") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_7"))
               (rule "assignment" (formula "46") (term "1"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "applyOnElementary" (formula "46") (term "1,0"))
               (rule "applyOnPV" (formula "46") (term "0,1,0"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_8"))
               (rule "eval_order_array_access4" (formula "46") (term "1") (inst "#v0=x_arr_3"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_3"))
               (rule "assignment_read_attribute_this" (formula "46"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "assignment_array2" (formula "46"))
               (branch "Normal Execution (x_arr_3 != null)"
                  (rule "sequentialToParallel2" (formula "46"))
                  (rule "simplifyUpdate2" (formula "46"))
                  (rule "simplifyUpdate3" (formula "46") (term "1,0"))
                  (rule "applyOnElementary" (formula "46") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "46") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "46") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "46") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "46") (term "0,2,0,1,0"))
                  (rule "assignment_to_primitive_array_component" (formula "46"))
                  (branch "Normal Execution (x_arr_2 != null)"
                     (rule "sequentialToParallel2" (formula "46"))
                     (rule "simplifyUpdate2" (formula "46"))
                     (rule "simplifyUpdate3" (formula "46") (term "1,0"))
                     (rule "applyOnElementary" (formula "46") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "46") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "3,0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "46") (term "3,0,1,0"))
                     (rule "applyOnPV" (formula "46") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "46") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "46") (term "0,2,0,1,0"))
                     (rule "eval_order_array_access1" (formula "46") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "46") (term "1"))
                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_4"))
                     (rule "assignment_read_attribute_this" (formula "46"))
                     (rule "sequentialToParallel2" (formula "46"))
                     (rule "simplifyUpdate3" (formula "46") (term "1,0"))
                     (rule "applyOnElementary" (formula "46") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "46") (term "0,1,0"))
                     (rule "applyOnPV" (formula "46") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "46") (term "0,1,0"))
                     (rule "assignment_to_primitive_array_component" (formula "46"))
                     (branch "Normal Execution (x_arr_4 != null)"
                        (rule "sequentialToParallel2" (formula "46"))
                        (rule "simplifyUpdate2" (formula "46"))
                        (rule "simplifyUpdate3" (formula "46") (term "1,0"))
                        (rule "applyOnElementary" (formula "46") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "3,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "1,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "2,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,2,0,1,0"))
                        (rule "blockEmpty" (formula "46") (term "1"))
                        (rule "methodCallReturn" (formula "46") (term "1"))
                        (rule "assignment" (formula "46") (term "1"))
                        (rule "sequentialToParallel2" (formula "46"))
                        (rule "simplifyUpdate2" (formula "46"))
                        (rule "simplifyUpdate3" (formula "46") (term "1,0"))
                        (rule "applyOnElementary" (formula "46") (term "1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0"))
                        (rule "methodCallEmpty" (formula "46") (term "1"))
                        (rule "tryEmpty" (formula "46") (term "1"))
                        (rule "emptyModality" (formula "46") (term "1"))
                        (rule "applyOnRigidFormula" (formula "46"))
                        (rule "simplifyUpdate2" (formula "46") (term "1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0"))
                        (rule "eqClose" (formula "46") (term "1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,0"))
                        (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "2"))
                        (rule "concrete_and_1" (formula "46") (term "0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,1"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "1,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "1,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,0,1"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,0,1"))
                        (rule "eqSymm" (formula "46") (term "1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,0,1"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,1,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,0,1"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,1,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,0,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,0,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,0,0,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,1,1,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,1,1,0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,0,0,0,1"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,0,0,0,0,1"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,0,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "1,1,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,1,0,0,0"))
                        (rule "eqSymm" (formula "46") (term "1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,0,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,1,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,1,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "2,0,1,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,2,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,0,1,1,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,0,1,1,0,0,0,1"))
                        (rule "applyOnPV" (formula "46") (term "0,0,0,1,1,0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,0,1,1,0,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "1,0,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,0,0,0,1,0"))
                        (rule "simplifyUpdate2" (formula "46") (term "0,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "2,1,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,2,1,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,1,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "2,0,1,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,2,0,1,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0,0,0,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "2,0,0,0,0,0"))
                        (rule "applyOnPV" (formula "46") (term "0,2,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,0,1,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,1,0,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "46") (term "1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "0,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,0,1,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,0,1,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "1,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,0,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,0,0,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,0,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,0,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,0,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,0,1,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,0,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,0,1,1,1,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,1,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,1,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,1,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,1,0"))
                        (rule "applyOnRigidTerm" (formula "46") (term "1,1,0,1,1,0,0,1,0"))
                        (rule "applyOnPV" (formula "46") (term "0,1,1,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "1,1,1,0,1,1,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "46") (term "2,1,1,0,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,1,1,0,0,1,0"))
                        (rule "pullOutSelect" (formula "46") (term "0,1,0,0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqClose" (formula "47") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "47") (term "0,0"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "46") (term "0,0,0,0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "47") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "36"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "47") (term "1,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "46") (term "0,0,0"))
                        (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "33"))
                        (rule "concrete_and_1" (formula "46") (term "0,0"))
                        (rule "pullOutSelect" (formula "46") (term "0,0,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "47") (term "0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "47") (term "1,0,0") (ifseqformula "1"))
                        (rule "eqClose" (formula "47") (term "0,0"))
                        (rule "concrete_and_1" (formula "47") (term "0"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "Class_invariant_axiom_for_Keyserver" (formula "46") (term "1,0") (inst "j=j") (inst "i=i") (ifseqformula "5"))
                        (rule "expand_inInt" (formula "46") (term "1,0,0,0,1,1,0"))
                        (rule "expand_inInt" (formula "46") (term "1,0,0,0,0,1,1,0"))
                        (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0,0,0,1,1,0"))
                        (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0,0,0,1,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,1,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,1,0,0,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,1,0,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "39"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,1,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "40"))
                        (rule "concrete_not_2" (formula "46") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "concrete_and_1" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,1,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "39"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,1,0,0,0,1,0") (ifseqformula "42"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,1,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,1,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,1,0,0,0,1,0") (ifseqformula "43"))
                        (rule "concrete_not_2" (formula "46") (term "1,1,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "42"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,0,0,0,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "1,0,0,1,0,0,1,0") (ifseqformula "21"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "1,0,1,0,0,1,0") (ifseqformula "22"))
                        (rule "concrete_and_3" (formula "46") (term "0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,1,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,1,0,0,0,0,0,0,1,0") (ifseqformula "35"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,1,0,0,0,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,1,1,0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "1,1,0,1,0") (ifseqformula "28"))
                        (rule "concrete_and_3" (formula "46") (term "1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "43"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,1,0,1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,1,0,0,0,0,0,0,1,0") (ifseqformula "37"))
                        (rule "concrete_not_2" (formula "46") (term "1,1,0,0,0,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "1,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "1,1,0,0,1,0") (ifseqformula "25"))
                        (rule "concrete_and_3" (formula "46") (term "1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,1,0") (ifseqformula "38"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "1,0,0,1,0") (ifseqformula "19"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,0,0,0,0,0,1,0") (ifseqformula "38"))
                        (rule "concrete_not_2" (formula "46") (term "0,0,0,0,0,1,0"))
                        (rule "concrete_and_1" (formula "46") (term "0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,0,1,0") (ifseqformula "41"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,1,0,0,1,0"))
                        (rule "eqSymm" (formula "46") (term "0,1,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,1,0,0,1,0") (ifseqformula "44"))
                        (rule "concrete_not_2" (formula "46") (term "1,0,0,1,0"))
                        (rule "concrete_and_3" (formula "46") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "46") (term "0,0,0,0,1,0"))
                        (rule "replace_known_right" (formula "46") (term "0,0,0,1,0") (ifseqformula "36"))
                        (rule "concrete_not_2" (formula "46") (term "0,0,1,0"))
                        (rule "concrete_and_1" (formula "46") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "46") (term "0,1,0"))
                        (rule "replace_known_left" (formula "46") (term "0,1,0") (ifseqformula "27"))
                        (rule "concrete_and_1" (formula "46") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0,1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,0,0,1,0"))
                        (rule "nnf_imp2or" (formula "46") (term "0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,1,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "46") (term "0,0,0,0,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,0,1,0"))
                        (rule "andRight" (formula "46"))
                        (branch
                           (rule "andRight" (formula "46"))
                           (branch
                              (rule "allRight" (formula "46") (inst "sk=i_1"))
                              (rule "orRight" (formula "46"))
                              (rule "orRight" (formula "47"))
                              (rule "orRight" (formula "46"))
                              (rule "orRight" (formula "46"))
                              (rule "orRight" (formula "48"))
                              (rule "eqSymm" (formula "50"))
                              (rule "inEqSimp_leqRight" (formula "46"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "48"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "49"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (rule "concrete_or_1" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "pullOutSelect" (formula "50") (term "0,1") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "51") (term "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "1"))
                              (rule "eqClose" (formula "51") (term "1"))
                              (rule "concrete_and_3" (formula "51"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "51"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "equalUnique" (formula "1") (term "1,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "close" (formula "51") (ifseqformula "1"))
                           )
                           (branch
                              (rule "allRight" (formula "46") (inst "sk=j_0"))
                              (rule "allRight" (formula "46") (inst "sk=i_1"))
                              (rule "orRight" (formula "46"))
                              (rule "orRight" (formula "46"))
                              (rule "notRight" (formula "48"))
                              (rule "orRight" (formula "48"))
                              (rule "orRight" (formula "47"))
                              (rule "orRight" (formula "48"))
                              (rule "orRight" (formula "47"))
                              (rule "orRight" (formula "47"))
                              (rule "inEqSimp_geqRight" (formula "52"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "53"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "52"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "53"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "52"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "53"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (rule "concrete_or_1" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "pullOutSelect" (formula "7") (term "1") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "8"))
                              (rule "equalUnique" (formula "8") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "8") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "8") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "8") (term "0,0"))
                              (rule "castDel" (formula "8") (term "1,0"))
                              (rule "simplifySelectOfStore" (formula "7"))
                              (rule "equalUnique" (formula "7") (term "1,0,0,0"))
                              (rule "equalUnique" (formula "7") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "7") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "7") (term "0,0"))
                              (rule "castDel" (formula "7") (term "1,0"))
                              (rule "eqSymm" (formula "8") (term "0,0,0"))
                              (rule "eqSymm" (formula "7") (term "0,0,0"))
                              (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "43"))
                              (rule "concrete_and_2" (formula "7") (term "0,0"))
                              (rule "ifthenelse_false" (formula "7") (term "0"))
                              (rule "simplifySelectOfStore" (formula "7"))
                              (rule "equalUnique" (formula "7") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "7") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "7") (term "0,0"))
                              (rule "equalUnique" (formula "7") (term "1,0,0"))
                              (rule "castDel" (formula "7") (term "1,0"))
                              (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "43"))
                              (rule "concrete_and_2" (formula "8") (term "0,0"))
                              (rule "ifthenelse_false" (formula "8") (term "0"))
                              (rule "simplifySelectOfStore" (formula "8"))
                              (rule "equalUnique" (formula "8") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "8") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "8") (term "0,0"))
                              (rule "equalUnique" (formula "8") (term "1,0,0"))
                              (rule "castDel" (formula "8") (term "1,0"))
                              (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "44"))
                              (rule "concrete_and_2" (formula "8") (term "0,0"))
                              (rule "ifthenelse_false" (formula "8") (term "0"))
                              (rule "applyEqReverse" (formula "7") (term "1") (ifseqformula "8"))
                              (rule "hideAuxiliaryEq" (formula "8"))
                              (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "43"))
                              (rule "concrete_and_2" (formula "7") (term "0,0"))
                              (rule "ifthenelse_false" (formula "7") (term "0"))
                              (rule "eqSymm" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "35"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (rule "concrete_or_1" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "31"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "4"))
                              (rule "leq_literals" (formula "8") (term "0"))
                              (rule "concrete_or_1" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (rule "concrete_or_1" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "allLeft" (formula "37") (inst "t=result_0"))
                              (rule "eqSymm" (formula "37") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "37") (term "1,0,0,0"))
                              (rule "applyEq" (formula "37") (term "1,0,1,0") (ifseqformula "42"))
                              (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0") (ifseqformula "41"))
                              (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "37") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "37") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0,0,0,0") (ifseqformula "10"))
                              (rule "qeq_literals" (formula "37") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "37") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "37") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0,0,0") (ifseqformula "39"))
                              (rule "qeq_literals" (formula "37") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "37") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "37") (term "0,0,0"))
                              (rule "allLeft" (formula "38") (inst "t=i_0"))
                              (rule "eqSymm" (formula "38") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0,0,0"))
                              (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "24"))
                              (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0,0,0,0") (ifseqformula "20"))
                              (rule "qeq_literals" (formula "38") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "38") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "38") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "38") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "38") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "38") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0,0") (ifseqformula "19"))
                              (rule "qeq_literals" (formula "38") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "38") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "38") (term "0,0,0"))
                              (rule "allLeft" (formula "39") (inst "t=j_0"))
                              (rule "eqSymm" (formula "39") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                              (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "8"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                              (rule "concrete_and_2" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "concrete_or_4" (formula "39") (term "0,0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                              (rule "leq_literals" (formula "39") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "39") (term "0,1,0,0,0"))
                              (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                              (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                              (rule "allLeft" (formula "39") (inst "t=i_1"))
                              (rule "eqClose" (formula "39") (term "0,1"))
                              (rule "concrete_not_1" (formula "39") (term "1"))
                              (rule "concrete_or_4" (formula "39"))
                              (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "39") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "39") (term "0,0"))
                              (rule "concrete_or_2" (formula "39") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                              (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                              (rule "add_literals" (formula "39") (term "0,0,1"))
                              (rule "leq_literals" (formula "39") (term "0,1"))
                              (rule "concrete_and_2" (formula "39") (term "1"))
                              (rule "concrete_or_4" (formula "39"))
                              (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "39") (term "0"))
                              (rule "concrete_and_2" (formula "39"))
                              (rule "closeFalse" (formula "39"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "46") (inst "sk=f_0"))
                           (rule "allRight" (formula "46") (inst "sk=o_0"))
                           (rule "orRight" (formula "46"))
                           (rule "orRight" (formula "46"))
                           (rule "orRight" (formula "46"))
                           (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "50"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                           (rule "concrete_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                           (rule "concrete_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "close" (formula "50") (ifseqformula "1"))
                        )
                     )
                     (branch "Null Reference (x_arr_4 = null)"
                        (rule "false_right" (formula "47"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "close" (formula "43") (ifseqformula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_4 != null, but pos Out of Bounds!)"
                        (rule "false_right" (formula "47"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate2" (formula "1") (term "1"))
                        (rule "applyOnRigidFormula" (formula "36"))
                        (rule "simplifyUpdate1" (formula "36") (term "1"))
                        (rule "applyOnPV" (formula "36") (term "0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                        (rule "applyOnPV" (formula "1") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "1") (term "1"))
                        (rule "applyOnPV" (formula "1") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                        (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                        (rule "applyOnPV" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_literals" (formula "1") (term "0,0,1"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (rule "concrete_and_2" (formula "1") (term "0"))
                        (rule "concrete_or_2" (formula "1"))
                        (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
                        (rule "leq_literals" (formula "31") (term "0"))
                        (rule "concrete_or_1" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (rule "concrete_and_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (x_arr_2 = null)"
                     (rule "false_right" (formula "47"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "close" (formula "40") (ifseqformula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr_2 != null, but x_7 Out of Bounds!)"
                     (rule "false_right" (formula "47"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "36"))
                     (rule "simplifyUpdate1" (formula "36") (term "1"))
                     (rule "applyOnPV" (formula "36") (term "0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                     (rule "applyOnPV" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "22"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
                     (rule "leq_literals" (formula "31") (term "0"))
                     (rule "concrete_or_1" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_and_2" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch "Null Reference (x_arr_3 = null)"
                  (rule "false_right" (formula "47"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "44") (ifseqformula "1"))
               )
               (branch "Index Out of Bounds (x_arr_3 != null, but pos Out of Bounds!)"
                  (rule "false_right" (formula "47"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1") (term "1"))
                  (rule "applyOnRigidFormula" (formula "36"))
                  (rule "simplifyUpdate1" (formula "36") (term "1"))
                  (rule "applyOnPV" (formula "36") (term "0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "applyOnPV" (formula "1") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "32"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "1"))
                  (rule "leq_literals" (formula "31") (term "0"))
                  (rule "concrete_or_1" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "if x false"
               (rule "false_to_not_true" (formula "1") (term "1"))
               (rule "simplifyUpdate2" (formula "46"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "34"))
               (rule "applyOnPV" (formula "34") (term "0"))
               (rule "simplifyUpdate1" (formula "34") (term "1"))
               (rule "ifthenelse_concrete3" (formula "34"))
               (rule "boolean_not_equal_2" (formula "34") (term "1"))
               (rule "concrete_or_4" (formula "34"))
               (rule "assignment" (formula "46") (term "1"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "blockEmpty" (formula "46") (term "1"))
               (rule "methodCallReturn" (formula "46") (term "1"))
               (rule "assignment" (formula "46") (term "1"))
               (rule "sequentialToParallel2" (formula "46"))
               (rule "simplifyUpdate2" (formula "46"))
               (rule "simplifyUpdate3" (formula "46") (term "1,0"))
               (rule "applyOnElementary" (formula "46") (term "1,0"))
               (rule "applyOnPV" (formula "46") (term "0,1,0"))
               (rule "methodCallEmpty" (formula "46") (term "1"))
               (rule "tryEmpty" (formula "46") (term "1"))
               (rule "emptyModality" (formula "46") (term "1"))
               (rule "applyOnRigidFormula" (formula "46"))
               (rule "simplifyUpdate2" (formula "46") (term "1"))
               (rule "applyOnRigidFormula" (formula "46") (term "0"))
               (rule "simplifyUpdate2" (formula "46") (term "1,0"))
               (rule "simplifyUpdate2" (formula "46") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "46") (term "1"))
               (rule "applyOnRigidFormula" (formula "46") (term "1,0"))
               (rule "simplifyUpdate1" (formula "46") (term "1,1,0"))
               (rule "applyOnPV" (formula "46") (term "0,1,0"))
               (rule "eqClose" (formula "46") (term "1,0"))
               (rule "concrete_and_3" (formula "46") (term "0"))
               (rule "applyOnRigidFormula" (formula "46") (term "0,1"))
               (rule "applyOnRigidFormula" (formula "46") (term "0"))
               (rule "simplifyUpdate2" (formula "46") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "46") (term "0,0,1"))
               (rule "applyOnRigidFormula" (formula "46") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "46") (term "0,0"))
               (rule "applyOnPV" (formula "46") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "46") (term "1,0,0"))
               (rule "qeq_literals" (formula "46") (term "0,0"))
               (rule "concrete_and_2" (formula "46") (term "0"))
               (rule "concrete_and_2" (formula "46"))
               (rule "false_right" (formula "46"))
               (rule "allLeft" (formula "28") (inst "t=result_0"))
               (rule "eqSymm" (formula "28") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,0,0"))
               (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "33"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0,0"))
               (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0,0"))
               (rule "concrete_or_4" (formula "28") (term "0,0,0,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0,0,0,0") (ifseqformula "30"))
               (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0"))
               (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0"))
               (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0,0") (ifseqformula "32"))
               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "28") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "28") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "28") (term "0,0,0"))
               (rule "allLeft" (formula "28") (inst "t=i_0"))
               (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "28") (term "1"))
               (rule "concrete_or_4" (formula "28"))
               (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "10"))
               (rule "qeq_literals" (formula "28") (term "0,0,0"))
               (rule "concrete_and_2" (formula "28") (term "0,0"))
               (rule "concrete_or_2" (formula "28") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "11"))
               (rule "qeq_literals" (formula "28") (term "0,0"))
               (rule "concrete_and_2" (formula "28") (term "0"))
               (rule "concrete_or_2" (formula "28"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "28"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "allLeft" (formula "30") (inst "t=i_0"))
               (rule "eqSymm" (formula "30") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,0,0"))
               (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "15"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "10"))
               (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0,0"))
               (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0,0"))
               (rule "concrete_or_4" (formula "30") (term "0,0,0,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0,0,0,0") (ifseqformula "11"))
               (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,0"))
               (rule "concrete_and_2" (formula "30") (term "1,0,0,0,0"))
               (rule "concrete_or_4" (formula "30") (term "0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "30") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "30") (term "0,0,0"))
               (rule "allLeft" (formula "30") (inst "t=result_0"))
               (rule "replace_known_left" (formula "30") (term "0,1") (ifseqformula "36"))
               (rule "concrete_not_1" (formula "30") (term "1"))
               (rule "concrete_or_4" (formula "30"))
               (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "33"))
               (rule "qeq_literals" (formula "30") (term "0,1,0"))
               (rule "concrete_and_2" (formula "30") (term "1,0"))
               (rule "concrete_or_4" (formula "30") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "30") (term "0,0"))
               (rule "concrete_and_2" (formula "30") (term "0"))
               (rule "concrete_or_2" (formula "30"))
               (rule "inEqSimp_antiSymm" (formula "30") (ifseqformula "28"))
               (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
               (rule "inEqSimp_homoInEq1" (formula "31"))
               (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
               (rule "add_literals" (formula "31") (term "1,0"))
               (rule "times_zero_1" (formula "31") (term "0"))
               (rule "leq_literals" (formula "31"))
               (rule "true_left" (formula "31"))
               (rule "applyEq" (formula "33") (term "0") (ifseqformula "30"))
               (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "30"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
               (rule "inEqSimp_homoInEq0" (formula "28"))
               (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
               (rule "add_literals" (formula "28") (term "1,0"))
               (rule "times_zero_1" (formula "28") (term "0"))
               (rule "qeq_literals" (formula "28"))
               (rule "true_left" (formula "28"))
               (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "28"))
               (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "28"))
               (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "28"))
               (rule "close" (formula "33") (ifseqformula "17"))
            )
         )
         (branch "Null Reference (x_arr = null)"
            (rule "false_right" (formula "46"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "42") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr != null, but pos Out of Bounds!)"
            (rule "false_right" (formula "46"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "35"))
            (rule "simplifyUpdate1" (formula "35") (term "1"))
            (rule "applyOnPV" (formula "35") (term "0"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "22"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "31"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (rule "concrete_and_2" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
(branch "Exceptional Post (posOfId)"
   (rule "simplifyUpdate2" (formula "23"))
   (rule "simplifyUpdate2" (formula "35"))
   (rule "expand_inInt" (formula "23") (term "1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0,1,0,1,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "23") (term "1"))
   (rule "andLeft" (formula "23"))
   (rule "simplifyUpdate2" (formula "23"))
   (rule "andLeft" (formula "24"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "25"))
   (rule "simplifyUpdate2" (formula "25"))
   (rule "notLeft" (formula "23"))
   (rule "close" (formula "27") (ifseqformula "26"))
)
(branch "Pre (posOfId)"
   (rule "expand_inInt" (formula "34") (term "1,1,1,1"))
   (rule "simplifyUpdate2" (formula "34"))
   (rule "replace_int_MAX" (formula "34") (term "1,0,1,1,1,1"))
   (rule "replace_int_MIN" (formula "34") (term "0,1,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "34") (term "1"))
   (rule "applyOnRigidFormula" (formula "34"))
   (rule "simplifyUpdate2" (formula "34") (term "0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1"))
   (rule "simplifyUpdate2" (formula "34") (term "0,1"))
   (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "34") (term "1"))
   (rule "applyOnRigidFormula" (formula "34") (term "1"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,1"))
   (rule "simplifyUpdate1" (formula "34") (term "1,0,1"))
   (rule "applyOnPV" (formula "34") (term "0,0,1"))
   (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "4"))
   (rule "concrete_and_1" (formula "34") (term "1"))
   (rule "applyOnRigidFormula" (formula "34") (term "1"))
   (rule "applyOnPV" (formula "34") (term "1,1"))
   (rule "simplifyUpdate1" (formula "34") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "1"))
   (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "5"))
   (rule "concrete_and_3" (formula "34"))
   (rule "Class_invariant_axiom_for_Keyserver" (formula "34") (inst "j=j") (inst "i=i") (ifseqformula "3"))
   (rule "expand_inInt" (formula "34") (term "1,0,0,0,1"))
   (rule "expand_inInt" (formula "34") (term "1,0,0,0,0,1"))
   (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,0,1"))
   (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,0,0,1"))
   (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,0,0,1"))
   (rule "eqSymm" (formula "34") (term "0,1,1,0,0,0,0,0"))
   (rule "eqSymm" (formula "34") (term "0,0,0,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "34") (term "0,1,1,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "34") (term "0,1,0,0,0,0"))
   (rule "eqSymm" (formula "34") (term "0,1,0,0,1"))
   (rule "replace_known_left" (formula "34") (term "1,1,0,0") (ifseqformula "18"))
   (rule "concrete_and_3" (formula "34") (term "1,0,0"))
   (rule "replace_known_left" (formula "34") (term "0,0,1,0,0") (ifseqformula "15"))
   (rule "concrete_and_1" (formula "34") (term "0,1,0,0"))
   (rule "replace_known_left" (formula "34") (term "0,1,0,0") (ifseqformula "16"))
   (rule "concrete_and_1" (formula "34") (term "1,0,0"))
   (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "17"))
   (rule "concrete_and_3" (formula "34") (term "0,0"))
   (rule "replace_known_right" (formula "34") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "27"))
   (rule "concrete_not_2" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "34") (term "0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "26"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0") (ifseqformula "30"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0") (ifseqformula "31"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0") (ifseqformula "24"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0") (ifseqformula "23"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "25"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "28"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "29"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "32"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0") (ifseqformula "26"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0,0") (ifseqformula "27"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "30"))
   (rule "concrete_not_2" (formula "34") (term "0,0,0"))
   (rule "concrete_and_1" (formula "34") (term "0,0"))
   (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "31"))
   (rule "concrete_not_2" (formula "34") (term "0,0"))
   (rule "concrete_and_1" (formula "34") (term "0"))
   (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "21"))
   (rule "concrete_and_3" (formula "34") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0"))
   (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "20"))
   (rule "concrete_and_1" (formula "34"))
   (rule "allRight" (formula "34") (inst "sk=j_0"))
   (rule "allRight" (formula "34") (inst "sk=i_1"))
   (rule "impRight" (formula "34"))
   (rule "andLeft" (formula "1"))
   (rule "notRight" (formula "36"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "2"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
   (rule "leq_literals" (formula "6") (term "0"))
   (rule "concrete_or_1" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
   (rule "mul_literals" (formula "3") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
   (rule "leq_literals" (formula "6") (term "0"))
   (rule "concrete_or_1" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1"))
   (rule "polySimp_rightDist" (formula "5") (term "1"))
   (rule "mul_literals" (formula "5") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
   (rule "arrayLengthNotNegative" (formula "26") (term "0"))
   (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
   (rule "arrayLengthIsAnInt" (formula "26") (term "0"))
   (rule "expand_inInt" (formula "26"))
   (rule "replace_int_MIN" (formula "26") (term "0,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0"))
   (rule "andLeft" (formula "26"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
   (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
   (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "29"))
   (rule "leq_literals" (formula "27") (term "0"))
   (rule "concrete_or_1" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "26"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "add_literals" (formula "5") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "5"))
   (rule "leq_literals" (formula "8") (term "0"))
   (rule "concrete_or_1" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "26"))
   (rule "polySimp_rightDist" (formula "18") (term "0,0"))
   (rule "mul_literals" (formula "18") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "18") (term "0"))
   (rule "add_literals" (formula "18") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
   (rule "polySimp_elimOne" (formula "18") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "18"))
   (rule "leq_literals" (formula "21") (term "0"))
   (rule "concrete_or_1" (formula "21"))
   (rule "true_left" (formula "21"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "add_literals" (formula "4") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_or_1" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "arrayLengthIsAnInt" (formula "25") (term "0"))
   (rule "expand_inInt" (formula "25"))
   (rule "replace_int_MAX" (formula "25") (term "1,0"))
   (rule "replace_int_MIN" (formula "25") (term "0,1"))
   (rule "andLeft" (formula "25"))
   (rule "inEqSimp_commuteLeq" (formula "26"))
   (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
   (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
   (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "29"))
   (rule "leq_literals" (formula "25") (term "0"))
   (rule "concrete_or_1" (formula "25"))
   (rule "true_left" (formula "25"))
   (rule "arrayLengthNotNegative" (formula "25") (term "0"))
   (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
   (rule "arrayLengthIsAnInt" (formula "24") (term "0"))
   (rule "expand_inInt" (formula "24"))
   (rule "replace_int_MAX" (formula "24") (term "1,0"))
   (rule "replace_int_MIN" (formula "24") (term "0,1"))
   (rule "andLeft" (formula "24"))
   (rule "inEqSimp_commuteLeq" (formula "25"))
   (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "24") (term "0") (ifseqformula "26"))
   (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "29"))
   (rule "leq_literals" (formula "24") (term "0"))
   (rule "concrete_or_1" (formula "24"))
   (rule "true_left" (formula "24"))
   (rule "arrayLengthNotNegative" (formula "23") (term "0"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
   (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
   (rule "expand_inInt" (formula "23"))
   (rule "replace_int_MIN" (formula "23") (term "0,1"))
   (rule "replace_int_MAX" (formula "23") (term "1,0"))
   (rule "andLeft" (formula "23"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "29"))
   (rule "leq_literals" (formula "23") (term "0"))
   (rule "concrete_or_1" (formula "23"))
   (rule "true_left" (formula "23"))
   (rule "arrayLengthNotNegative" (formula "24") (term "0"))
   (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
   (rule "allLeft" (formula "31") (inst "t=j_0"))
   (rule "eqSymm" (formula "31") (term "0,1,0"))
   (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
   (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "1"))
   (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0,0,0") (ifseqformula "5"))
   (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
   (rule "concrete_and_2" (formula "31") (term "1,0,0,0,0"))
   (rule "concrete_or_4" (formula "31") (term "0,0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "7"))
   (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
   (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "31") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "8"))
   (rule "qeq_literals" (formula "31") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "31") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "31") (term "0,0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "37"))
   (rule "concrete_or_2" (formula "21"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "42"))
   (rule "concrete_or_2" (formula "23"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
   (rule "concrete_or_2" (formula "29"))
   (rule "allLeft" (formula "34") (inst "t=i_1"))
   (rule "eqClose" (formula "34") (term "0,1"))
   (rule "concrete_not_1" (formula "34") (term "1"))
   (rule "concrete_or_4" (formula "34"))
   (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "34") (term "0,0,0"))
   (rule "concrete_and_2" (formula "34") (term "0,0"))
   (rule "concrete_or_2" (formula "34") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
   (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
   (rule "add_literals" (formula "34") (term "0,0,1"))
   (rule "leq_literals" (formula "34") (term "0,1"))
   (rule "concrete_and_2" (formula "34") (term "1"))
   (rule "concrete_or_4" (formula "34"))
   (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "34"))
   (rule "leq_literals" (formula "2") (term "0"))
   (rule "concrete_or_1" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "2"))
   (rule "qeq_literals" (formula "33") (term "0"))
   (rule "concrete_and_2" (formula "33"))
   (rule "closeFalse" (formula "33"))
)
)
}
