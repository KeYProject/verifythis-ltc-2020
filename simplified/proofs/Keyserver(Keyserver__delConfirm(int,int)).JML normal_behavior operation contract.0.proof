\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Feb 25 12:10:59 CET 2020
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Tue Feb 25 12:10:59 CET 2020
contract=Keyserver[Keyserver\\:\\:delConfirm(int,int)].JML normal_behavior operation contract.0
name=Keyserver[Keyserver\\:\\:delConfirm(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "sdg" ) (keyVersion "5c71d010aea2ef9b4a159569bd7f9d3d7b0f4027"))

(autoModeTime "23519")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "1,1,1,0,1,0,1,0") (newnames "id,code,self,exc,heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "0,0,0,1,1,0,0,0,1,1"))
(rule "expand_inInt" (formula "1") (term "0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0,1,1,0,0,0,1,1"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "exLeft" (formula "10") (inst "sk=i_0"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "12"))
(rule "eqSymm" (formula "19") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "19") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "19") (term "1,1,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "19") (term "1,1,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "translateJavaSubInt" (formula "19") (term "0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "9"))
(rule "times_zero_1" (formula "9") (term "1,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "11"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "11") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "assignment" (formula "19") (term "1"))
(rule "sequentialToParallel2" (formula "19"))
(rule "simplifyUpdate3" (formula "19") (term "1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9"))
(rule "mul_literals" (formula "9") (term "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "11"))
(rule "polySimp_mulLiterals" (formula "11") (term "0"))
(rule "polySimp_elimOne" (formula "11") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
(rule "leq_literals" (formula "7") (term "0"))
(rule "concrete_or_1" (formula "7"))
(rule "true_left" (formula "7"))
(rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
(rule "leq_literals" (formula "12") (term "0"))
(rule "concrete_or_1" (formula "12"))
(rule "true_left" (formula "12"))
(rule "elementOfUnion" (formula "17") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "17") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfAllFields" (formula "17") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfAllFields" (formula "17") (term "1,0,0,0,0,0,1,0,1"))
(rule "expand_subJint" (formula "17") (term "0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "17") (term "0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,1"))
(rule "expand_moduloInteger" (formula "17") (term "0,0,0,0,0,1"))
(rule "replace_int_RANGE" (formula "17") (term "1,1,0,0,0,0,0,1"))
(rule "replace_int_HALFRANGE" (formula "17") (term "0,0,1,0,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "17") (term "0,0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "17") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,1"))
(rule "polySimp_sepNegMonomial" (formula "17") (term "0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "17") (term "0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "17") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "double_not" (formula "17") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "17") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,1,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_Keyserver" (formula "15") (inst "j=j") (inst "i=i") (ifseqformula "3"))
(rule "expand_inInt" (formula "15") (term "1,0,0,0,1"))
(rule "expand_inInt" (formula "15") (term "1,0,0,0,0,1"))
(rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,0,1"))
(rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,0,1"))
(rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0,0,0,1"))
(rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0,0,0,1"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "19"))
(rule "notLeft" (formula "19"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "18"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "20"))
(rule "notLeft" (formula "19"))
(rule "notLeft" (formula "18"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "18"))
(rule "notLeft" (formula "17"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "19"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "18"))
(rule "notLeft" (formula "17"))
(rule "notLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "16"))
(rule "notLeft" (formula "15"))
(rule "eqSymm" (formula "22") (term "0,1,0,0"))
(rule "eqSymm" (formula "31"))
(rule "eqSymm" (formula "30"))
(rule "eqSymm" (formula "29"))
(rule "eqSymm" (formula "28"))
(rule "eqSymm" (formula "27"))
(rule "eqSymm" (formula "25"))
(rule "eqSymm" (formula "23"))
(rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0"))
(rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0,0,0"))
(rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,0"))
(rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
(rule "times_zero_1" (formula "20") (term "0,0"))
(rule "add_zero_left" (formula "20") (term "0"))
(rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "22"))
(rule "polySimp_rightDist" (formula "10") (term "0,0"))
(rule "mul_literals" (formula "10") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "10"))
(rule "polySimp_mulComm0" (formula "10") (term "1"))
(rule "polySimp_rightDist" (formula "10") (term "1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
(rule "mul_literals" (formula "10") (term "0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1"))
(rule "nnf_imp2or" (formula "24") (term "0,0"))
(rule "nnf_notAnd" (formula "24") (term "0,0,0"))
(rule "nnf_notAnd" (formula "24") (term "1,0,0,0"))
(rule "inEqSimp_notGeq" (formula "24") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,0,1,1,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,1,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "24") (term "0,1,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,1,0,0,0"))
(rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
(rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "24") (term "0,1,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,1,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "24") (term "1,1,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,0,1,1,0,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,1,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,1,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,1,1,0,0,0,0"))
(rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
(rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
(rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0,0,0,0"))
(rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
(rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0,0"))
(rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0"))
(rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0,0"))
(rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,0"))
(rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0"))
(rule "methodBodyExpand" (formula "41") (term "1") (newnames "heapBefore_delConfirm,savedHeapBefore_delConfirm"))
(rule "simplifyUpdate2" (formula "41") (term "1"))
(rule "variableDeclarationAssign" (formula "41") (term "1"))
(rule "variableDeclaration" (formula "41") (term "1") (newnames "pos"))
(rule "commute_or" (formula "24") (term "1,0,0,0"))
(rule "commute_or" (formula "24") (term "1,0,0,0,0"))
(rule "commute_or_2" (formula "24") (term "0,0,0,0"))
(rule "commute_or_2" (formula "24") (term "0,0,0,0,0"))
(rule "shift_paren_or" (formula "24") (term "0,0,0,0,0,0"))
(rule "commute_or_2" (formula "24") (term "0,0,0"))
(rule "commute_or_2" (formula "24") (term "0,0,0,0"))
(rule "shift_paren_or" (formula "24") (term "0,0,0,0,0"))
(rule "commute_or_2" (formula "24") (term "0,0,0"))
(rule "commute_or" (formula "24") (term "0,0,0,0,0,0,0,0"))
(rule "inEqSimp_or_subsumption0" (formula "24") (term "0,0,0,0,0,0,0,0"))
(rule "qeq_literals" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
(rule "concrete_and_2" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
(rule "concrete_or_2" (formula "24") (term "0,0,0,0,0,0,0,0"))
(rule "arrayLengthIsAnInt" (formula "20") (term "0"))
(rule "expand_inInt" (formula "20"))
(rule "replace_int_MIN" (formula "20") (term "0,1"))
(rule "replace_int_MAX" (formula "20") (term "1,0"))
(rule "andLeft" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
(rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
(rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "23"))
(rule "leq_literals" (formula "21") (term "0"))
(rule "concrete_or_1" (formula "21"))
(rule "true_left" (formula "21"))
(rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "20"))
(rule "polySimp_rightDist" (formula "10") (term "0,0"))
(rule "mul_literals" (formula "10") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "10") (term "0"))
(rule "add_literals" (formula "10") (term "0,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "10"))
(rule "polySimp_mulLiterals" (formula "10") (term "0"))
(rule "polySimp_elimOne" (formula "10") (term "0"))
(rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "10"))
(rule "leq_literals" (formula "13") (term "0"))
(rule "concrete_or_1" (formula "13"))
(rule "true_left" (formula "13"))
(rule "arrayLengthNotNegative" (formula "21") (term "0"))
(rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
(rule "arrayLengthNotNegative" (formula "19") (term "0"))
(rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
(rule "arrayLengthIsAnInt" (formula "19") (term "0"))
(rule "expand_inInt" (formula "19"))
(rule "replace_int_MIN" (formula "19") (term "0,1"))
(rule "replace_int_MAX" (formula "19") (term "1,0"))
(rule "andLeft" (formula "19"))
(rule "inEqSimp_commuteLeq" (formula "20"))
(rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
(rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
(rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "23"))
(rule "leq_literals" (formula "19") (term "0"))
(rule "concrete_or_1" (formula "19"))
(rule "true_left" (formula "19"))
(rule "arrayLengthIsAnInt" (formula "18") (term "0"))
(rule "expand_inInt" (formula "18"))
(rule "replace_int_MIN" (formula "18") (term "0,1"))
(rule "replace_int_MAX" (formula "18") (term "1,0"))
(rule "andLeft" (formula "18"))
(rule "inEqSimp_commuteLeq" (formula "19"))
(rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
(rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
(rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "23"))
(rule "leq_literals" (formula "18") (term "0"))
(rule "concrete_or_1" (formula "18"))
(rule "true_left" (formula "18"))
(rule "arrayLengthNotNegative" (formula "18") (term "0"))
(rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
(rule "arrayLengthNotNegative" (formula "17") (term "0"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
(rule "arrayLengthNotNegative" (formula "16") (term "0"))
(rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
(rule "arrayLengthIsAnInt" (formula "16") (term "0"))
(rule "expand_inInt" (formula "16"))
(rule "replace_int_MIN" (formula "16") (term "0,1"))
(rule "replace_int_MAX" (formula "16") (term "1,0"))
(rule "andLeft" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "17"))
(rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
(rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
(rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "23"))
(rule "leq_literals" (formula "16") (term "0"))
(rule "concrete_or_1" (formula "16"))
(rule "true_left" (formula "16"))
(rule "arrayLengthIsAnInt" (formula "17") (term "0"))
(rule "expand_inInt" (formula "17"))
(rule "replace_int_MIN" (formula "17") (term "0,1"))
(rule "replace_int_MAX" (formula "17") (term "1,0"))
(rule "andLeft" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "18"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
(rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "23"))
(rule "leq_literals" (formula "17") (term "0"))
(rule "concrete_or_1" (formula "17"))
(rule "true_left" (formula "17"))
 (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_posOfId,result,exc_0") (contract "Keyserver[Keyserver::posOfId(int)].JML normal_behavior operation contract.0"))
(branch "Post (posOfId)"
   (rule "expand_inInt" (formula "26") (term "1,0,0,1,0,1,0,1,1,1"))
   (rule "expand_inInt" (formula "26") (term "1,0,1,1"))
   (rule "simplifyUpdate2" (formula "43"))
   (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,1,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,1,1"))
   (rule "simplifyUpdate2" (formula "26"))
   (rule "simplifyUpdate2" (formula "26") (term "1"))
   (rule "andLeft" (formula "26"))
   (rule "simplifyUpdate2" (formula "26"))
   (rule "andLeft" (formula "27"))
   (rule "simplifyUpdate2" (formula "28"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "27"))
   (rule "simplifyUpdate2" (formula "27"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "29"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "applyOnRigidFormula" (formula "29"))
   (rule "simplifyUpdate2" (formula "29") (term "0"))
   (rule "applyOnRigidFormula" (formula "30"))
   (rule "simplifyUpdate2" (formula "30") (term "0"))
   (rule "applyOnRigidFormula" (formula "29") (term "1"))
   (rule "applyOnRigidFormula" (formula "30") (term "1"))
   (rule "simplifyUpdate2" (formula "30") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "29") (term "0,1"))
   (rule "simplifyUpdate2" (formula "29") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "30") (term "0,1"))
   (rule "simplifyUpdate1" (formula "30") (term "0,0,1"))
   (rule "applyOnPV" (formula "30") (term "1,0,1"))
   (rule "applyOnRigidFormula" (formula "29") (term "1,0,1"))
   (rule "applyOnRigidFormula" (formula "29") (term "0,1,0,1"))
   (rule "simplifyUpdate1" (formula "29") (term "0,0,1,0,1"))
   (rule "applyOnPV" (formula "29") (term "1,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,1"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1"))
   (rule "polySimp_addComm1" (formula "30") (term "0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,1"))
   (rule "assignment" (formula "49") (term "1"))
   (rule "sequentialToParallel2" (formula "49"))
   (rule "simplifyUpdate3" (formula "49") (term "1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "30") (term "0,1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1"))
   (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1"))
   (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "28"))
   (rule "leq_literals" (formula "27") (term "0"))
   (rule "concrete_or_1" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "nnf_imp2or" (formula "28") (term "0,1"))
   (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
   (rule "nnf_notAnd" (formula "28") (term "1,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0,1"))
   (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1"))
   (rule "mul_literals" (formula "28") (term "1,1,1,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1"))
   (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1"))
   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1"))
   (rule "mul_literals" (formula "28") (term "1,0,1,0,0,1"))
   (rule "nnf_notAnd" (formula "28") (term "0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,1"))
   (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,1"))
   (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1"))
   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1"))
   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1"))
   (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
   (rule "Class_invariant_axiom_for_Keyserver" (formula "30") (inst "j=j") (inst "i=i") (ifseqformula "3"))
   (rule "expand_inInt" (formula "30") (term "1,0,0,0,1"))
   (rule "expand_inInt" (formula "30") (term "1,0,0,0,0,1"))
   (rule "replace_int_MIN" (formula "30") (term "0,1,1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "30") (term "1,0,1,0,0,0,1"))
   (rule "replace_int_MIN" (formula "30") (term "0,1,1,0,0,0,0,1"))
   (rule "replace_int_MAX" (formula "30") (term "1,0,1,0,0,0,0,1"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "34"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "32"))
   (rule "andLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "33"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "32"))
   (rule "notLeft" (formula "33"))
   (rule "notLeft" (formula "32"))
   (rule "notLeft" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "andLeft" (formula "30"))
   (rule "notLeft" (formula "32"))
   (rule "notLeft" (formula "30"))
   (rule "notLeft" (formula "30"))
   (rule "eqSymm" (formula "31") (term "0,1,0,0"))
   (rule "eqSymm" (formula "39"))
   (rule "eqSymm" (formula "38"))
   (rule "eqSymm" (formula "37"))
   (rule "eqSymm" (formula "36"))
   (rule "eqSymm" (formula "35"))
   (rule "eqSymm" (formula "34"))
   (rule "eqSymm" (formula "33"))
   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "30"))
   (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "30") (term "0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,1,0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
   (rule "commute_and" (formula "29") (term "1"))
   (rule "commute_or_2" (formula "28") (term "0,0,1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "46"))
   (rule "concrete_or_2" (formula "15"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "43"))
   (rule "concrete_or_2" (formula "13"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "46"))
   (rule "concrete_or_2" (formula "15"))
   (rule "commute_or" (formula "33") (term "1,0,0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "50"))
   (rule "concrete_or_2" (formula "22"))
   (rule "ifUnfold" (formula "52") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x"))
   (rule "commute_or_2" (formula "34") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "32") (term "0,0,0,1"))
   (rule "commute_or_2" (formula "32") (term "0,0,0,1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "47"))
   (rule "concrete_or_2" (formula "20"))
   (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "33") (term "0,0,0,0,1"))
   (rule "inEqSimp_or_subsumption0" (formula "33") (term "0,0,0,0,1"))
   (rule "qeq_literals" (formula "33") (term "0,0,0,0,0,0,1"))
   (rule "concrete_and_2" (formula "33") (term "0,0,0,0,0,1"))
   (rule "concrete_or_2" (formula "33") (term "0,0,0,0,1"))
   (rule "commute_or" (formula "35") (term "1,0,0,0,0,0,0"))
   (rule "shift_paren_or" (formula "35") (term "0,0,0,0,0,0"))
   (rule "commute_or_2" (formula "35") (term "0,0,0"))
   (rule "commute_or_2" (formula "35") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "35") (term "0,0,0,0,0"))
   (rule "commute_or_2" (formula "35") (term "0,0,0"))
   (rule "commute_or" (formula "35") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_or_subsumption0" (formula "35") (term "0,0,0,0,0,0,0,0"))
   (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_2" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
   (rule "concrete_or_2" (formula "35") (term "0,0,0,0,0,0,0,0"))
   (rule "compound_assignment_3_nonsimple" (formula "52") (term "1"))
   (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x_1"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_1"))
   (rule "compound_assignment_2" (formula "52") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "52") (term "1"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_2"))
   (rule "compound_assignment_3_nonsimple" (formula "52") (term "1"))
   (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_3"))
   (rule "compound_assignment_2" (formula "52") (term "1") (inst "#v=x_4"))
   (rule "variableDeclarationAssign" (formula "52") (term "1"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_4"))
   (rule "compound_assignment_3_nonsimple" (formula "52") (term "1"))
   (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x_5"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_5"))
   (rule "compound_assignment_2" (formula "52") (term "1") (inst "#v=x_6"))
   (rule "variableDeclarationAssign" (formula "52") (term "1"))
   (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_6"))
   (rule "greater_equal_than_comparison_simple" (formula "52") (term "1"))
   (rule "sequentialToParallel2" (formula "52"))
   (rule "simplifyUpdate3" (formula "52") (term "1,0"))
   (rule "applyOnElementary" (formula "52") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "52") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "52") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "52") (term "0,0,0,1,0"))
   (rule "compound_assignment_1_new" (formula "52") (term "1"))
   (rule "sequentialToParallel2" (formula "52"))
   (rule "simplifyUpdate2" (formula "52"))
   (rule "simplifyUpdate3" (formula "52") (term "1,0"))
   (rule "applyOnElementary" (formula "52") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "52") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "52") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "52") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "52") (term "0,0,0,1,0"))
   (rule "ifthenelse_concrete3" (formula "52") (term "0,0,1,0"))
   (rule "boolean_not_equal_2" (formula "52") (term "1,0,0,1,0"))
   (rule "concrete_or_4" (formula "52") (term "0,0,1,0"))
   (rule "ifElseSplit" (formula "52"))
   (branch "if x_5 true"
      (rule "simplifyUpdate2" (formula "53"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete4" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "36"))
      (rule "concrete_impl_2" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "inEqSimp_geqRight" (formula "35"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "assignment" (formula "52") (term "1"))
      (rule "sequentialToParallel2" (formula "52"))
      (rule "simplifyUpdate3" (formula "52") (term "1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "1"))
      (rule "leq_literals" (formula "32") (term "0"))
      (rule "concrete_or_1" (formula "32"))
      (rule "true_left" (formula "32"))
      (rule "inEqSimp_antiSymm" (formula "32") (ifseqformula "1"))
      (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
      (rule "concrete_impl_1" (formula "34"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "31"))
      (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
      (rule "qeq_literals" (formula "32"))
      (rule "true_left" (formula "32"))
      (rule "compound_assignment_1_new" (formula "50") (term "1"))
      (rule "sequentialToParallel2" (formula "50"))
      (rule "simplifyUpdate2" (formula "50"))
      (rule "simplifyUpdate3" (formula "50") (term "1,0"))
      (rule "applyOnElementary" (formula "50") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "50") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "50") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "50") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "50") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "50") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "50") (term "0,0,0,1,0"))
      (rule "boolean_not_equal_2" (formula "50") (term "0,0,1,0"))
      (rule "ifthenelse_false" (formula "50") (term "0,1,0"))
      (rule "allLeft" (formula "32") (inst "t=i_0"))
      (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "14"))
      (rule "concrete_not_1" (formula "32") (term "1"))
      (rule "concrete_or_4" (formula "32"))
      (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "12"))
      (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
      (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "32") (term "0,0,1"))
      (rule "leq_literals" (formula "32") (term "0,1"))
      (rule "concrete_and_2" (formula "32") (term "1"))
      (rule "concrete_or_4" (formula "32"))
      (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "9"))
      (rule "qeq_literals" (formula "32") (term "0,0"))
      (rule "concrete_and_2" (formula "32") (term "0"))
      (rule "concrete_or_2" (formula "32"))
      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "32"))
      (rule "leq_literals" (formula "9") (term "0"))
      (rule "concrete_or_1" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "9"))
      (rule "qeq_literals" (formula "31") (term "0"))
      (rule "concrete_and_2" (formula "31"))
      (rule "closeFalse" (formula "31"))
   )
   (branch "if x_5 false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "53"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "36"))
      (rule "simplifyUpdate1" (formula "36") (term "1"))
      (rule "applyOnPV" (formula "36") (term "0"))
      (rule "ifthenelse_concrete4" (formula "36"))
      (rule "boolean_not_equal_2" (formula "36") (term "1"))
      (rule "concrete_or_4" (formula "36"))
      (rule "notRight" (formula "36"))
      (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
      (rule "concrete_impl_1" (formula "35"))
      (rule "andLeft" (formula "35"))
      (rule "inEqSimp_contradEq7" (formula "34") (term "0") (ifseqformula "1"))
      (rule "add_zero_left" (formula "34") (term "0,0,0"))
      (rule "mul_literals" (formula "34") (term "0,0,0"))
      (rule "leq_literals" (formula "34") (term "0,0"))
      (rule "concrete_and_2" (formula "34") (term "0"))
      (rule "concrete_impl_2" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "1"))
      (rule "leq_literals" (formula "33") (term "0"))
      (rule "concrete_or_1" (formula "33"))
      (rule "true_left" (formula "33"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "30"))
      (rule "polySimp_rightDist" (formula "33") (term "0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "33"))
      (rule "polySimp_mulComm0" (formula "33") (term "1"))
      (rule "polySimp_rightDist" (formula "33") (term "1"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
      (rule "mul_literals" (formula "33") (term "0,1"))
      (rule "polySimp_elimOne" (formula "33") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "26"))
      (rule "polySimp_rightDist" (formula "33") (term "0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "33") (term "0"))
      (rule "add_literals" (formula "33") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "33"))
      (rule "leq_literals" (formula "32") (term "0"))
      (rule "concrete_or_1" (formula "32"))
      (rule "true_left" (formula "32"))
      (rule "greater_than_comparison_simple" (formula "53") (term "1"))
      (rule "sequentialToParallel2" (formula "53"))
      (rule "simplifyUpdate3" (formula "53") (term "1,0"))
      (rule "applyOnElementary" (formula "53") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "53") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0"))
      (rule "inEqSimp_gtToGeq" (formula "53") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "53") (term "0,0,0,0,1,0"))
      (rule "blockEmpty" (formula "53") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,1,0"))
      (rule "mul_literals" (formula "53") (term "1,0,0,1,0"))
      (rule "replace_known_left" (formula "53") (term "0,0,1,0") (ifseqformula "9"))
      (rule "ifthenelse_true" (formula "53") (term "0,1,0"))
      (rule "compound_assignment_1_new" (formula "53") (term "1"))
      (rule "sequentialToParallel2" (formula "53"))
      (rule "simplifyUpdate2" (formula "53"))
      (rule "simplifyUpdate3" (formula "53") (term "1,0"))
      (rule "applyOnElementary" (formula "53") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "53") (term "0,0,0,1,0"))
      (rule "boolean_equal" (formula "53") (term "0,0,1,0"))
      (rule "ifthenelse_true" (formula "53") (term "0,1,0"))
      (rule "ifElseSplit" (formula "53"))
      (branch "if x_3 true"
         (rule "simplifyUpdate2" (formula "54"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "boolean_not_equal_2" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_3 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "54"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "37"))
         (rule "applyOnPV" (formula "37") (term "0"))
         (rule "simplifyUpdate1" (formula "37") (term "1"))
         (rule "boolean_not_equal_2" (formula "37"))
         (rule "false_right" (formula "37"))
         (rule "compound_equality_comparison_2" (formula "53") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "53") (term "1"))
         (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_7"))
         (rule "assignment" (formula "53") (term "1"))
         (rule "sequentialToParallel2" (formula "53"))
         (rule "simplifyUpdate2" (formula "53"))
         (rule "simplifyUpdate3" (formula "53") (term "1,0"))
         (rule "applyOnElementary" (formula "53") (term "1,0"))
         (rule "applyOnPV" (formula "53") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "53") (term "1"))
         (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_8"))
         (rule "eval_order_array_access4" (formula "53") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "53") (term "1"))
         (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_arr"))
         (rule "assignment_read_attribute_this" (formula "53"))
         (rule "sequentialToParallel2" (formula "53"))
         (rule "simplifyUpdate3" (formula "53") (term "1,0"))
         (rule "assignment_array2" (formula "53"))
         (branch "Normal Execution (x_arr != null)"
            (rule "sequentialToParallel2" (formula "53"))
            (rule "simplifyUpdate2" (formula "53"))
            (rule "simplifyUpdate3" (formula "53") (term "1,0"))
            (rule "applyOnElementary" (formula "53") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "53") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "53") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "53") (term "0,2,0,1,0"))
            (rule "equality_comparison_simple" (formula "53") (term "1"))
            (rule "eqSymm" (formula "53") (term "0,0,0,1"))
            (rule "sequentialToParallel2" (formula "53"))
            (rule "simplifyUpdate2" (formula "53"))
            (rule "simplifyUpdate3" (formula "53") (term "1,0"))
            (rule "applyOnElementary" (formula "53") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "53") (term "0,0,0,1,0"))
            (rule "applyOnPV" (formula "53") (term "1,0,0,1,0"))
            (rule "blockEmpty" (formula "53") (term "1"))
            (rule "compound_assignment_1_new" (formula "53") (term "1"))
            (rule "sequentialToParallel2" (formula "53"))
            (rule "simplifyUpdate2" (formula "53"))
            (rule "simplifyUpdate3" (formula "53") (term "1,0"))
            (rule "applyOnElementary" (formula "53") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "53") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "53") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "53") (term "1,0,0,1,0"))
            (rule "applyOnPV" (formula "53") (term "0,0,0,1,0"))
            (rule "ifthenelse_concrete3" (formula "53") (term "0,0,1,0"))
            (rule "boolean_not_equal_2" (formula "53") (term "1,0,0,1,0"))
            (rule "concrete_or_4" (formula "53") (term "0,0,1,0"))
            (rule "ifElseSplit" (formula "53"))
            (branch "if x_1 true"
               (rule "simplifyUpdate2" (formula "1"))
               (rule "simplifyUpdate2" (formula "54"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "ifthenelse_concrete4" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "ifSkipThen" (formula "54") (term "1"))
               (rule "simplifyUpdate2" (formula "54"))
               (rule "assignment" (formula "54") (term "1"))
               (rule "simplifyUpdate2" (formula "54") (term "1"))
               (rule "methodCallEmpty" (formula "54") (term "1"))
               (rule "tryEmpty" (formula "54") (term "1"))
               (rule "emptyModality" (formula "54") (term "1"))
               (rule "applyOnRigidFormula" (formula "54"))
               (rule "simplifyUpdate2" (formula "54") (term "1"))
               (rule "applyOnRigidFormula" (formula "54") (term "0"))
               (rule "simplifyUpdate2" (formula "54") (term "1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,0"))
               (rule "eqClose" (formula "54") (term "1,0"))
               (rule "concrete_and_3" (formula "54") (term "0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,1"))
               (rule "applyOnRigidFormula" (formula "54") (term "0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,1"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,0,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "0,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,1"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,1"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,0,1"))
               (rule "applyOnRigidTerm" (formula "54") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,0,0,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "1,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "0,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0,0,1"))
               (rule "applyOnPV" (formula "54") (term "0,0,1,0,0,1"))
               (rule "simplifyUpdate1" (formula "54") (term "2,0,1,0,0,1"))
               (rule "eqClose" (formula "54") (term "1,0,0,1"))
               (rule "concrete_or_3" (formula "54") (term "0,0,1"))
               (rule "applyOnRigidTerm" (formula "54") (term "0,0,0,0"))
               (rule "simplifyUpdate1" (formula "54") (term "0,0,0,0,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,0,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,0,0,0,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "0,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,1,0,0,1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "0,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "1,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "1,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "0,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate2" (formula "54") (term "0,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnPV" (formula "54") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidFormula" (formula "54") (term "1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "0,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnRigidTerm" (formula "54") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "applyOnPV" (formula "54") (term "0,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "simplifyUpdate1" (formula "54") (term "2,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
               (rule "eq_eq" (formula "54") (term "1,0,1,0,0,1,1,0"))
               (rule "concrete_or_3" (formula "54") (term "0,1,0,0,1,1,0"))
               (rule "mod_axiom" (formula "54") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
               (rule "polySimp_homoEq" (formula "54") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "54") (term "0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,0"))
               (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "54") (term "0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0"))
               (rule "elimGcdEq" (formula "54") (term "0,0") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
        int::select(heap, self, Keyserver::$count)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
               (rule "eqClose" (formula "54") (term "0,0,0,0,0"))
               (rule "concrete_and_1" (formula "54") (term "0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,1,0,0,0"))
               (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "54") (term "0,1,0,0,0"))
               (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
               (rule "equal_literals" (formula "54") (term "0,1,0,0"))
               (rule "concrete_and_2" (formula "54") (term "1,0,0"))
               (rule "qeq_literals" (formula "54") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "54") (term "0,0,0"))
               (rule "leq_literals" (formula "54") (term "0,0,0"))
               (rule "ifthenelse_true_for" (formula "54") (term "0,0"))
               (rule "concrete_and_2" (formula "54") (term "0"))
               (rule "concrete_and_2" (formula "54"))
               (rule "false_right" (formula "54"))
               (rule "allLeft" (formula "31") (inst "t=result"))
               (rule "eqSymm" (formula "31") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,0"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0,0"))
               (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "36"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0,0"))
               (rule "concrete_and_2" (formula "31") (term "1,0,0,0,0,0"))
               (rule "concrete_or_4" (formula "31") (term "0,0,0,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0,0,0,0") (ifseqformula "33"))
               (rule "qeq_literals" (formula "31") (term "0,1,0,0,0,0"))
               (rule "concrete_and_2" (formula "31") (term "1,0,0,0,0"))
               (rule "concrete_or_4" (formula "31") (term "0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0,0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "31") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "31") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "31") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "31") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "31") (term "0,0,0"))
               (rule "allLeft" (formula "31") (inst "t=i_0"))
               (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "15"))
               (rule "concrete_not_1" (formula "31") (term "1"))
               (rule "concrete_or_4" (formula "31"))
               (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "31") (term "0,0") (ifseqformula "10"))
               (rule "qeq_literals" (formula "31") (term "0,0,0"))
               (rule "concrete_and_2" (formula "31") (term "0,0"))
               (rule "concrete_or_2" (formula "31") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "11"))
               (rule "qeq_literals" (formula "31") (term "0,0"))
               (rule "concrete_and_2" (formula "31") (term "0"))
               (rule "concrete_or_2" (formula "31"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "31"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "allLeft" (formula "33") (inst "t=i_0"))
               (rule "eqSymm" (formula "33") (term "0,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
               (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "15"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "13"))
               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "33") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0") (ifseqformula "11"))
               (rule "qeq_literals" (formula "33") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "10"))
               (rule "qeq_literals" (formula "33") (term "0,1,0,0,0"))
               (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
               (rule "concrete_or_4" (formula "33") (term "0,0,0"))
               (rule "allLeft" (formula "33") (inst "t=result"))
               (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "39"))
               (rule "concrete_not_1" (formula "33") (term "1"))
               (rule "concrete_or_4" (formula "33"))
               (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "33") (term "0,0,0"))
               (rule "concrete_and_2" (formula "33") (term "0,0"))
               (rule "concrete_or_2" (formula "33") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "33") (term "0") (ifseqformula "36"))
               (rule "qeq_literals" (formula "33") (term "0,0"))
               (rule "concrete_and_2" (formula "33") (term "0"))
               (rule "concrete_or_2" (formula "33"))
               (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "31"))
               (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
               (rule "inEqSimp_homoInEq1" (formula "34"))
               (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
               (rule "add_literals" (formula "34") (term "1,0"))
               (rule "times_zero_1" (formula "34") (term "0"))
               (rule "leq_literals" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "applyEq" (formula "36") (term "0") (ifseqformula "33"))
               (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "33"))
               (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "33"))
               (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "33"))
               (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "33"))
               (rule "close" (formula "37") (ifseqformula "17"))
            )
            (branch "if x_1 false"
               (rule "false_to_not_true" (formula "1") (term "1"))
               (rule "simplifyUpdate2" (formula "54"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "37"))
               (rule "applyOnPV" (formula "37") (term "0"))
               (rule "simplifyUpdate1" (formula "37") (term "1"))
               (rule "ifthenelse_concrete4" (formula "37"))
               (rule "boolean_not_equal_2" (formula "37") (term "1"))
               (rule "concrete_or_4" (formula "37"))
               (rule "notRight" (formula "37"))
               (rule "compound_equality_comparison_1" (formula "54") (term "1") (inst "#v0=x_1"))
               (rule "variableDeclarationAssign" (formula "54") (term "1"))
               (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_9"))
               (rule "eval_order_array_access4" (formula "54") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "54") (term "1"))
               (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_arr_1"))
               (rule "assignment_read_attribute_this" (formula "54"))
               (rule "sequentialToParallel2" (formula "54"))
               (rule "simplifyUpdate3" (formula "54") (term "1,0"))
               (rule "assignment_array2" (formula "54"))
               (branch "Normal Execution (x_arr_1 != null)"
                  (rule "sequentialToParallel2" (formula "54"))
                  (rule "simplifyUpdate2" (formula "54"))
                  (rule "simplifyUpdate3" (formula "54") (term "1,0"))
                  (rule "applyOnElementary" (formula "54") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "54") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "54") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "54") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "54") (term "0,2,0,1,0"))
                  (rule "equality_comparison_simple" (formula "54") (term "1"))
                  (rule "insert_constant_value" (formula "54") (term "1,0,0,0,1"))
                  (rule "sequentialToParallel2" (formula "54"))
                  (rule "simplifyUpdate2" (formula "54"))
                  (rule "simplifyUpdate3" (formula "54") (term "1,0"))
                  (rule "applyOnElementary" (formula "54") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "54") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "2,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "54") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "54") (term "1,0,0,1,0"))
                  (rule "applyOnPV" (formula "54") (term "0,0,0,1,0"))
                  (rule "blockEmpty" (formula "54") (term "1"))
                  (rule "ifSplit" (formula "54"))
                  (branch "if x true"
                     (rule "simplifyUpdate2" (formula "55"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "ifthenelse_concrete3" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1"))
                     (rule "concrete_or_4" (formula "1"))
                     (rule "postdecrement_attribute" (formula "55") (term "1") (inst "#v=k"))
                     (rule "variableDeclarationAssign" (formula "55") (term "1"))
                     (rule "variableDeclaration" (formula "55") (term "1") (newnames "k"))
                     (rule "assignment" (formula "55") (term "1"))
                     (rule "sequentialToParallel2" (formula "55"))
                     (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                     (rule "eval_order_access4" (formula "55") (term "1") (inst "#v1=x") (inst "#v0=k_1"))
                     (rule "variableDeclarationAssign" (formula "55") (term "1"))
                     (rule "variableDeclaration" (formula "55") (term "1") (newnames "k_1"))
                     (rule "assignment" (formula "55") (term "1"))
                     (rule "sequentialToParallel2" (formula "55"))
                     (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                     (rule "applyOnElementary" (formula "55") (term "1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,0"))
                     (rule "variableDeclarationAssign" (formula "55") (term "1"))
                     (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_10"))
                     (rule "compound_int_cast_expression" (formula "55") (term "1") (inst "#v=x_11"))
                     (rule "variableDeclarationAssign" (formula "55") (term "1"))
                     (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_11"))
                     (rule "remove_parentheses_right" (formula "55") (term "1"))
                     (rule "compound_subtraction_1" (formula "55") (term "1") (inst "#v=x_12"))
                     (rule "variableDeclarationAssign" (formula "55") (term "1"))
                     (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_12"))
                     (rule "assignment_read_attribute" (formula "55"))
                     (branch "Normal Execution (k != null)"
                        (rule "sequentialToParallel2" (formula "55"))
                        (rule "simplifyUpdate2" (formula "55"))
                        (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                        (rule "applyOnElementary" (formula "55") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                        (rule "assignmentSubtractionInt" (formula "55") (term "1"))
                        (rule "translateJavaSubInt" (formula "55") (term "0,0,1"))
                        (rule "sequentialToParallel2" (formula "55"))
                        (rule "simplifyUpdate2" (formula "55"))
                        (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                        (rule "applyOnElementary" (formula "55") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                        (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                        (rule "expand_subJint" (formula "55") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "55") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "55") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "55") (term "0,0,1,0"))
                        (rule "expand_moduloInteger" (formula "55") (term "0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "55") (term "0,0,1,0,1,0"))
                        (rule "replace_int_RANGE" (formula "55") (term "1,1,0,1,0"))
                        (rule "replace_int_MIN" (formula "55") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,1,0,1,0"))
                        (rule "add_literals" (formula "55") (term "0,0,1,0,1,0"))
                        (rule "widening_identity_cast_5" (formula "55") (term "1"))
                        (rule "assignment" (formula "55") (term "1"))
                        (rule "sequentialToParallel2" (formula "55"))
                        (rule "simplifyUpdate2" (formula "55"))
                        (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                        (rule "applyOnElementary" (formula "55") (term "1,0"))
                        (rule "applyOnPV" (formula "55") (term "0,1,0"))
                        (rule "assignment_write_attribute" (formula "55"))
                        (branch "Normal Execution (k_1 != null)"
                           (rule "sequentialToParallel2" (formula "55"))
                           (rule "simplifyUpdate2" (formula "55"))
                           (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                           (rule "applyOnElementary" (formula "55") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "3,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                           (rule "applyOnPV" (formula "55") (term "3,0,1,0"))
                           (rule "applyOnPV" (formula "55") (term "1,0,1,0"))
                           (rule "ifUnfold" (formula "55") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_13"))
                           (rule "compound_assignment_3_nonsimple" (formula "55") (term "1"))
                           (rule "ifElseUnfold" (formula "55") (term "1") (inst "#boolv=x_14"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_14"))
                           (rule "compound_assignment_2" (formula "55") (term "1") (inst "#v=x_15"))
                           (rule "variableDeclarationAssign" (formula "55") (term "1"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_15"))
                           (rule "compound_greater_than_comparison_1" (formula "55") (term "1") (inst "#v0=x_16"))
                           (rule "variableDeclarationAssign" (formula "55") (term "1"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_16"))
                           (rule "assignment_read_attribute_this" (formula "55"))
                           (rule "sequentialToParallel2" (formula "55"))
                           (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                           (rule "applyOnElementary" (formula "55") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                           (rule "applyOnPV" (formula "55") (term "0,0,1,0"))
                           (rule "pullOutSelect" (formula "55") (term "0,1,0") (inst "selectSK=Keyserver_count_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "56") (term "0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "greater_than_comparison_simple" (formula "55") (term "1"))
                           (rule "sequentialToParallel2" (formula "55"))
                           (rule "simplifyUpdate2" (formula "55"))
                           (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                           (rule "applyOnElementary" (formula "55") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0"))
                           (rule "applyOnPV" (formula "55") (term "0,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "55") (term "0,0,1,0"))
                           (rule "times_zero_1" (formula "55") (term "1,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "55") (term "0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "55") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "55") (term "1,0,0,1,0"))
                           (rule "compound_assignment_1_new" (formula "55") (term "1"))
                           (rule "sequentialToParallel2" (formula "55"))
                           (rule "simplifyUpdate2" (formula "55"))
                           (rule "simplifyUpdate3" (formula "55") (term "1,0"))
                           (rule "applyOnElementary" (formula "55") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "55") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0"))
                           (rule "applyOnPV" (formula "55") (term "0,0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,0"))
                           (rule "ifthenelse_concrete3" (formula "55") (term "0,0,1,0"))
                           (rule "boolean_not_equal_2" (formula "55") (term "1,0,0,1,0"))
                           (rule "concrete_or_4" (formula "55") (term "0,0,1,0"))
                           (rule "ifElseSplit" (formula "55"))
                           (branch "if x_14 true"
                              (rule "simplifyUpdate2" (formula "56"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "ifSkipThen" (formula "56") (term "1"))
                              (rule "simplifyUpdate2" (formula "56"))
                              (rule "applyOnRigidFormula" (formula "1"))
                              (rule "applyOnPV" (formula "1") (term "0"))
                              (rule "simplifyUpdate1" (formula "1") (term "1"))
                              (rule "ifthenelse_concrete4" (formula "1"))
                              (rule "boolean_not_equal_2" (formula "1") (term "1"))
                              (rule "concrete_or_4" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "39"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "assignment" (formula "56") (term "1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1"))
                              (rule "mod_axiom" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "methodCallEmpty" (formula "56") (term "1"))
                              (rule "tryEmpty" (formula "56") (term "1"))
                              (rule "emptyModality" (formula "56") (term "1"))
                              (rule "applyOnRigidFormula" (formula "56"))
                              (rule "simplifyUpdate2" (formula "56") (term "1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0"))
                              (rule "eqClose" (formula "56") (term "1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "56") (term "1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,1"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet000010110_0" (formula "56") (term "1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "56") (term "1,1,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (rule "mod_homoEq" (formula "56") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "56") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,1,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "56") (term "0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "56") (term "0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "1,0,0,0,0"))
                              (rule "times_zero_1" (formula "56") (term "0,0,0,0"))
                              (rule "polyMod_zero" (formula "56") (term "0,0,0"))
                              (rule "eqClose" (formula "56") (term "0,0"))
                              (rule "concrete_and_1" (formula "56") (term "0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,1,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,1,1,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,1,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,0,0,0,0,1"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,0,0,0,1"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,0,0,0,0,0,1"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,0,0,0,0,0,1"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,0,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,0,0,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,0,1,0,0,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,1,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,0,0,0,0,0,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,0,0,0,0,0,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownSelect_taclet000010110_0" (formula "56") (term "1,1,1,0,0,0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "56") (term "1,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,1,0,0,0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,1,0,0,0,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "1,0,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate2" (formula "56") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "replaceKnownSelect_taclet000010110_0" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "56") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                              (rule "mod_axiom" (formula "56") (term "1,3,0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,3,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "56") (term "3,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,3,0,0,1,0,0,1"))
                              (rule "add_literals" (formula "56") (term "0,0,3,0,0,1,0,0,1"))
                              (rule "mod_axiom" (formula "56") (term "1,3,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,3,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "3,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,3,0,1,1,0"))
                              (rule "add_literals" (formula "56") (term "0,0,3,0,1,1,0"))
                              (rule "mod_axiom" (formula "56") (term "1,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,1,1,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "56") (term "0,0,1,1,0,0,0,0,0,0"))
                              (rule "mod_axiom" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "56") (term "0,0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "Class_invariant_axiom_for_Keyserver" (formula "56") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "7"))
                              (rule "expand_inInt" (formula "56") (term "1,0,0,0,1,1,1,0"))
                              (rule "expand_inInt" (formula "56") (term "1,0,0,0,0,1,1,1,0"))
                              (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,0,1,1,1,0"))
                              (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,0,1,1,1,0"))
                              (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,0,0,1,1,1,0"))
                              (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,0,0,1,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,1,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "43"))
                              (rule "concrete_not_2" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "54"))
                              (rule "concrete_not_2" (formula "56") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "53"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "49"))
                              (rule "concrete_not_2" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                              (rule "replace_known_left" (formula "56") (term "1,0,0,1,1,0") (ifseqformula "30"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "50"))
                              (rule "concrete_not_2" (formula "56") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "51"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "52"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "replace_known_left" (formula "56") (term "0,1,0,0,0,1,1,0") (ifseqformula "23"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "53"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "replace_known_left" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "26"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,1,0,1,0,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "56") (term "0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0,0,0,1,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "49"))
                              (rule "concrete_not_2" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0") (ifseqformula "47"))
                              (rule "concrete_not_2" (formula "56") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "44"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "51"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                              (rule "replace_known_left" (formula "56") (term "1,0,0,1,1,0") (ifseqformula "28"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "40"))
                              (rule "concrete_not_2" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,1,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "1,0,0,1,1,0"))
                              (rule "replace_known_left" (formula "56") (term "1,0,0,1,1,0") (ifseqformula "25"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "42"))
                              (rule "concrete_not_2" (formula "56") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "54"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,1,1,0") (ifseqformula "46"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "48"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,1,1,0") (ifseqformula "50"))
                              (rule "concrete_not_2" (formula "56") (term "0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "0,0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                              (rule "eqSymm" (formula "56") (term "0,1,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "45"))
                              (rule "concrete_not_2" (formula "56") (term "1,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                              (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,1,0"))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,1,1,0") (ifseqformula "41"))
                              (rule "concrete_not_2" (formula "56") (term "0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "56") (term "0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "pullOutSelect" (formula "56") (term "0,0,0,1,1,0") (inst "selectSK=Keyserver_count_1"))
                              (rule "applyEq" (formula "57") (term "0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "57") (term "1,1,1,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0"))
                              (rule "eqClose" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "57") (term "0,0,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "57") (term "0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "57") (term "1,1,1,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "add_literals" (formula "56") (term "0,0,1,1,0,0,0,0,0,1,1,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "0,1,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,0,1,0,1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "56") (term "0,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "56") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,0,1,1,0,1,1,0"))
                              (rule "nnf_imp2or" (formula "56") (term "0,0,1,1,1,0"))
                              (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                              (rule "ifthenelse_true_for" (formula "1") (term "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "59") (term "0,0,0,0,1,1,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "59") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,0,0,1,1,0"))
                              (rule "applyEq" (formula "59") (term "0,0,1,0,1,1,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,0,1,0,1,1,0"))
                              (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "59") (term "1,1,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "59") (term "1,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "applyEq" (formula "59") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "59") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyEq" (formula "59") (term "0,1,3,0,0,1,0,0,1") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "59") (term "3,0,0,1,0,0,1"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "59") (term "0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "59") (term "0,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_1" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                              (rule "mul_literals" (formula "39") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                              (rule "polySimp_elimOne" (formula "39") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                              (rule "mul_literals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "35") (term "0,0"))
                              (rule "add_zero_left" (formula "35") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                              (rule "mul_literals" (formula "35") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "35") (term "0,0"))
                              (rule "concrete_or_2" (formula "35") (term "0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                              (rule "add_literals" (formula "35") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "35") (term "1,0,0"))
                              (rule "add_literals" (formula "35") (term "0,0"))
                              (rule "leq_literals" (formula "35") (term "0"))
                              (rule "concrete_or_2" (formula "35"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "37"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "42"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "37"))
                              (rule "times_zero_1" (formula "7") (term "1,1,0"))
                              (rule "greater_literals" (formula "7") (term "0,0"))
                              (rule "concrete_and_1" (formula "7") (term "0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (rule "concrete_or_1" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "19"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "37"))
                              (rule "times_zero_1" (formula "16") (term "1,1,0"))
                              (rule "greater_literals" (formula "16") (term "0,0"))
                              (rule "concrete_and_1" (formula "16") (term "0"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_1" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                              (rule "concrete_or_2" (formula "2") (term "0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_2" (formula "2"))
                              (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "37"))
                              (rule "qeq_literals" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "37"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "2") (term "1,1"))
                              (rule "add_literals" (formula "2") (term "1"))
                              (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "19") (term "1"))
                              (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "4") (term "1,1"))
                              (rule "add_literals" (formula "4") (term "1"))
                              (rule "applyEqRigid" (formula "42") (term "0,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "42") (term "1"))
                              (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "3") (term "1,1"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "applyEqRigid" (formula "62") (term "0,1,1,0,0,1,1,0") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "62") (term "1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "62") (term "1,0,0,1,1,0"))
                              (rule "applyEq" (formula "62") (term "0,1,0,1,1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "36"))
                              (rule "mul_literals" (formula "62") (term "1,0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "62") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyEqRigid" (formula "62") (term "0,1,0,3,0,0,1,0,0,1") (ifseqformula "36"))
                              (rule "mul_literals" (formula "62") (term "1,0,3,0,0,1,0,0,1"))
                              (rule "add_literals" (formula "62") (term "0,3,0,0,1,0,0,1"))
                              (rule "applyEqRigid" (formula "62") (term "0,1,0,1,1,0,1,1,0") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "62") (term "1,0,1,1,0,1,1,0"))
                              (rule "add_literals" (formula "62") (term "0,1,1,0,1,1,0"))
                              (rule "applyEq" (formula "62") (term "0,1,0,1,1,0,0,0,0,0,0,1,1,1,0") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "62") (term "1,0,1,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "add_zero_right" (formula "62") (term "0,1,1,0,0,0,0,0,0,1,1,1,0"))
                              (rule "applyEq" (formula "62") (term "0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "62") (term "1,0,1,1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "62") (term "0,1,1,0,0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "36"))
                              (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "42"))
                              (rule "leq_literals" (formula "40") (term "0"))
                              (rule "concrete_or_1" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "inEqSimp_subsumption0" (formula "61") (term "1,0,1,1,0") (ifseqformula "38"))
                              (rule "inEqSimp_homoInEq0" (formula "61") (term "0,1,0,1,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,1,0,1,1,0"))
                              (rule "add_literals" (formula "61") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "times_zero_1" (formula "61") (term "1,0,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "61") (term "0,0,1,0,1,1,0"))
                              (rule "qeq_literals" (formula "61") (term "0,1,0,1,1,0"))
                              (rule "concrete_or_1" (formula "61") (term "1,0,1,1,0"))
                              (rule "concrete_and_3" (formula "61") (term "0,1,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "35"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "36"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "17"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (rule "concrete_or_1" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "16"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "14"))
                              (rule "leq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEqRigid" (formula "21") (term "0,2,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "19") (term "0,2,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "14"))
                              (rule "add_zero_right" (formula "16") (term "1"))
                              (rule "replace_known_left" (formula "57") (term "0,1,1,0") (ifseqformula "16"))
                              (rule "concrete_and_1" (formula "57") (term "1,1,0"))
                              (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "14"))
                              (rule "add_zero_right" (formula "15") (term "1"))
                              (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "14"))
                              (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                              (rule "leq_literals" (formula "31") (term "0"))
                              (rule "concrete_or_1" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "16"))
                              (rule "leq_literals" (formula "32") (term "0"))
                              (rule "concrete_or_1" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "35"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "3"))
                              (rule "add_zero_right" (formula "33") (term "1"))
                              (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "3"))
                              (rule "add_zero_right" (formula "32") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "2"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,0,0,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0,0"))
                              (rule "applyEq" (formula "49") (term "1,3,0,0,1,0,0,1") (ifseqformula "13"))
                              (rule "add_literals" (formula "49") (term "3,0,0,1,0,0,1"))
                              (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,1,0,1,0,0,1,0"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "30"))
                              (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "48") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                              (rule "applyEq" (formula "30") (term "1,1,0,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "div_literals" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "12"))
                              (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0,0,1,1,0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "46") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "46") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "46") (term "1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "46") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,1,1,0,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "46") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0,0,0"))
                              (rule "inEqSimp_or_subsumption3" (formula "28") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "28") (term "0,1,0,0,0,0"))
                              (rule "concrete_and_2" (formula "28") (term "1,0,0,0,0"))
                              (rule "concrete_or_4" (formula "28") (term "0,0,0,0"))
                              (rule "andRight" (formula "46"))
                              (branch
                                 (rule "andRight" (formula "46"))
                                 (branch
                                    (rule "notRight" (formula "46"))
                                    (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch
                                    (rule "andRight" (formula "46"))
                                    (branch
                                       (rule "allRight" (formula "46") (inst "sk=e_0"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "allRight" (formula "48") (inst "sk=k_0"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "48"))
                                       (rule "orRight" (formula "49"))
                                       (rule "eqSymm" (formula "51") (term "1,1,0,0"))
                                       (rule "eqSymm" (formula "51") (term "1,1,0,1"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "inEqSimp_leqRight" (formula "47"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "47"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "49"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "50"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "equiv_right" (formula "51"))
                                       (branch
                                          (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (rule "concrete_or_1" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (rule "concrete_or_1" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "21"))
                                          (rule "close" (formula "53") (ifseqformula "2"))
                                       )
                                       (branch
                                          (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (rule "concrete_and_2" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "46") (inst "sk=j_0"))
                                       (rule "allRight" (formula "46") (inst "sk=i_1"))
                                       (rule "orRight" (formula "46"))
                                       (rule "orRight" (formula "46"))
                                       (rule "notRight" (formula "48"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "47"))
                                       (rule "orRight" (formula "49"))
                                       (rule "orRight" (formula "47"))
                                       (rule "inEqSimp_leqRight" (formula "53"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "53"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "51"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "53"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "53"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                       (rule "mul_literals" (formula "7") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                       (rule "concrete_or_1" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_and_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch
                                 (rule "allRight" (formula "46") (inst "sk=f_0"))
                                 (rule "allRight" (formula "46") (inst "sk=o_0"))
                                 (rule "orRight" (formula "46"))
                                 (rule "orRight" (formula "46"))
                                 (rule "orRight" (formula "46"))
                                 (rule "orRight" (formula "46"))
                                 (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_0_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "51"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "49"))
                                 (rule "ifthenelse_false" (formula "1") (term "0"))
                                 (rule "close" (formula "51") (ifseqformula "1"))
                              )
                           )
                           (branch "if x_14 false"
                              (rule "false_to_not_true" (formula "1") (term "1"))
                              (rule "simplifyUpdate2" (formula "56"))
                              (rule "simplifyUpdate2" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "applyOnRigidFormula" (formula "39"))
                              (rule "applyOnPV" (formula "39") (term "0"))
                              (rule "simplifyUpdate1" (formula "39") (term "1"))
                              (rule "ifthenelse_concrete4" (formula "39"))
                              (rule "boolean_not_equal_2" (formula "39") (term "1"))
                              (rule "concrete_or_4" (formula "39"))
                              (rule "notRight" (formula "39"))
                              (rule "mod_axiom" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "compound_inequality_comparison_2" (formula "56") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
                              (rule "variableDeclarationAssign" (formula "56") (term "1"))
                              (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_17"))
                              (rule "assignment" (formula "56") (term "1"))
                              (rule "sequentialToParallel2" (formula "56"))
                              (rule "simplifyUpdate3" (formula "56") (term "1,0"))
                              (rule "applyOnElementary" (formula "56") (term "1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "56") (term "1"))
                              (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_18"))
                              (rule "assignment_read_attribute_this" (formula "56"))
                              (rule "sequentialToParallel2" (formula "56"))
                              (rule "simplifyUpdate3" (formula "56") (term "1,0"))
                              (rule "applyOnElementary" (formula "56") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,1,0"))
                              (rule "replaceKnownSelect_taclet000010110_0" (formula "56") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "56") (term "0,1,0"))
                              (rule "inequality_comparison_simple" (formula "56") (term "1"))
                              (rule "eqSymm" (formula "56") (term "0,0,0,1"))
                              (rule "sequentialToParallel2" (formula "56"))
                              (rule "simplifyUpdate2" (formula "56"))
                              (rule "simplifyUpdate3" (formula "56") (term "1,0"))
                              (rule "applyOnElementary" (formula "56") (term "1,0"))
                              (rule "applyOnRigidTerm" (formula "56") (term "0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "2,0,1,0"))
                              (rule "applyOnRigidFormula" (formula "56") (term "0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "0,0,0,1,0"))
                              (rule "simplifyUpdate1" (formula "56") (term "1,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "0,0,0,1,0"))
                              (rule "applyOnPV" (formula "56") (term "1,0,0,1,0"))
                              (rule "polySimp_homoEq" (formula "56") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "56") (term "0,0,0,0,1,0"))
                              (rule "blockEmpty" (formula "56") (term "1"))
                              (rule "polySimp_sepNegMonomial" (formula "56") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "0,0,0,1,0"))
                              (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                              (rule "mul_literals" (formula "39") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                              (rule "polySimp_elimOne" (formula "39") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                              (rule "mul_literals" (formula "18") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "36"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "36") (term "0,0"))
                              (rule "add_zero_left" (formula "36") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                              (rule "mul_literals" (formula "36") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "36") (term "0,0"))
                              (rule "concrete_or_2" (formula "36") (term "0"))
                              (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                              (rule "add_literals" (formula "36") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "36") (term "1,0,0"))
                              (rule "add_literals" (formula "36") (term "0,0"))
                              (rule "leq_literals" (formula "36") (term "0"))
                              (rule "concrete_or_2" (formula "36"))
                              (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "42"))
                              (rule "times_zero_1" (formula "7") (term "0,0"))
                              (rule "add_zero_left" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "37"))
                              (rule "greater_literals" (formula "7") (term "0,0"))
                              (rule "concrete_and_1" (formula "7") (term "0"))
                              (rule "times_zero_1" (formula "7") (term "1,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (rule "concrete_or_1" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "19"))
                              (rule "times_zero_1" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "37"))
                              (rule "greater_literals" (formula "16") (term "0,0"))
                              (rule "concrete_and_1" (formula "16") (term "0"))
                              (rule "times_zero_1" (formula "16") (term "1,0"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_1" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "33"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_2" (formula "3"))
                              (rule "inEqSimp_antiSymm" (formula "37") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "44") (term "0,1,1") (ifseqformula "37"))
                              (rule "times_zero_2" (formula "44") (term "1,1"))
                              (rule "add_zero_right" (formula "44") (term "1"))
                              (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "37"))
                              (rule "times_zero_2" (formula "4") (term "1,1"))
                              (rule "add_zero_right" (formula "4") (term "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "2") (term "1,1"))
                              (rule "add_zero_right" (formula "2") (term "1"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                              (rule "qeq_literals" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "19") (term "1,1"))
                              (rule "add_zero_right" (formula "19") (term "1"))
                              (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "36"))
                              (rule "times_zero_2" (formula "4") (term "1,1"))
                              (rule "add_zero_right" (formula "4") (term "1"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "36"))
                              (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "3"))
                              (rule "leq_literals" (formula "35") (term "0"))
                              (rule "concrete_or_1" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "4"))
                              (rule "leq_literals" (formula "36") (term "0"))
                              (rule "concrete_or_1" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "17"))
                              (rule "leq_literals" (formula "19") (term "0"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "37"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (rule "concrete_or_1" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                              (rule "mul_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "17"))
                              (rule "leq_literals" (formula "19") (term "0"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "35"))
                              (rule "mul_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                              (rule "mul_literals" (formula "39") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "39") (term "0"))
                              (rule "add_literals" (formula "39") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                              (rule "polySimp_elimOne" (formula "39") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "39") (ifseqformula "37"))
                              (rule "leq_literals" (formula "39") (term "0"))
                              (rule "concrete_or_1" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "ifSplit" (formula "58"))
                              (branch "if x_13 true"
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "simplifyUpdate2" (formula "59"))
                                 (rule "applyOnRigidFormula" (formula "1"))
                                 (rule "applyOnPV" (formula "1") (term "0"))
                                 (rule "simplifyUpdate1" (formula "1") (term "1"))
                                 (rule "ifthenelse_concrete4" (formula "1"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1"))
                                 (rule "concrete_or_4" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "eval_order_array_access1" (formula "59") (term "1") (inst "#v0=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_2"))
                                 (rule "assignment_read_attribute_this" (formula "59"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                 (rule "eval_order_array_access3" (formula "59") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_3"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_3"))
                                 (rule "assignment" (formula "59") (term "1"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_19"))
                                 (rule "assignment" (formula "59") (term "1"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_20"))
                                 (rule "eval_order_array_access4" (formula "59") (term "1") (inst "#v0=x_arr_4"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_4"))
                                 (rule "assignment_read_attribute_this" (formula "59"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                 (rule "eval_order_array_access5" (formula "59") (term "1") (inst "#v1=x_21") (inst "#ar1=x_arr_5"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_5"))
                                 (rule "assignment" (formula "59") (term "1"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                 (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                 (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_21"))
                                 (rule "assignment_read_attribute_this" (formula "59"))
                                 (rule "sequentialToParallel2" (formula "59"))
                                 (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                 (rule "applyOnElementary" (formula "59") (term "1,0"))
                                 (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                 (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                 (rule "replaceKnownSelect_taclet000010110_0" (formula "59") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "59") (term "0,1,0"))
                                 (rule "assignment_array2" (formula "59"))
                                 (branch "Normal Execution (x_arr_5 != null)"
                                    (rule "sequentialToParallel2" (formula "59"))
                                    (rule "simplifyUpdate2" (formula "59"))
                                    (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                    (rule "applyOnElementary" (formula "59") (term "1,0"))
                                    (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                    (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                    (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
                                    (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
                                    (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                    (rule "applyOnRigidTerm" (formula "59") (term "2,0,1,0"))
                                    (rule "applyOnPV" (formula "59") (term "0,2,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                    (rule "assignment_to_primitive_array_component" (formula "59"))
                                    (branch "Normal Execution (x_arr_3 != null)"
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "3,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "3,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                       (rule "applyOnRigidTerm" (formula "59") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,2,0,1,0"))
                                       (rule "eval_order_array_access1" (formula "59") (term "1") (inst "#v0=x_arr"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_6"))
                                       (rule "assignment_read_attribute_this" (formula "59"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                       (rule "eval_order_array_access3" (formula "59") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_7"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_7"))
                                       (rule "assignment" (formula "59") (term "1"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_22"))
                                       (rule "assignment" (formula "59") (term "1"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_23"))
                                       (rule "eval_order_array_access4" (formula "59") (term "1") (inst "#v0=x_arr_8"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_8"))
                                       (rule "assignment_read_attribute_this" (formula "59"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                       (rule "eval_order_array_access5" (formula "59") (term "1") (inst "#v1=x_24") (inst "#ar1=x_arr_9"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_arr_9"))
                                       (rule "assignment" (formula "59") (term "1"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,1,0"))
                                       (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                       (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_24"))
                                       (rule "assignment_read_attribute_this" (formula "59"))
                                       (rule "sequentialToParallel2" (formula "59"))
                                       (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                       (rule "applyOnElementary" (formula "59") (term "1,0"))
                                       (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                       (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                       (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "59") (term "0,1,0"))
                                       (rule "replaceKnownSelect_taclet000010110_0" (formula "59") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "59") (term "0,1,0"))
                                       (rule "assignment_array2" (formula "59"))
                                       (branch "Normal Execution (x_arr_9 != null)"
                                          (rule "sequentialToParallel2" (formula "59"))
                                          (rule "simplifyUpdate2" (formula "59"))
                                          (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                          (rule "applyOnElementary" (formula "59") (term "1,0"))
                                          (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                          (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                          (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
                                          (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
                                          (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                          (rule "applyOnRigidTerm" (formula "59") (term "2,0,1,0"))
                                          (rule "applyOnPV" (formula "59") (term "0,2,0,1,0"))
                                          (rule "pullOutSelect" (formula "59") (term "0,1,0") (inst "selectSK=arr_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                                          (rule "concrete_and_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "60") (term "0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "assignment_to_primitive_array_component" (formula "59"))
                                          (branch "Normal Execution (x_arr_7 != null)"
                                             (rule "sequentialToParallel2" (formula "59"))
                                             (rule "simplifyUpdate2" (formula "59"))
                                             (rule "simplifyUpdate3" (formula "59") (term "1,0"))
                                             (rule "applyOnElementary" (formula "59") (term "1,0"))
                                             (rule "applyOnRigidTerm" (formula "59") (term "0,1,0"))
                                             (rule "simplifyUpdate1" (formula "59") (term "1,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "59") (term "3,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "59") (term "0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "59") (term "2,0,1,0"))
                                             (rule "applyOnPV" (formula "59") (term "1,0,1,0"))
                                             (rule "applyOnPV" (formula "59") (term "3,0,1,0"))
                                             (rule "applyOnPV" (formula "59") (term "0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "59") (term "2,0,1,0"))
                                             (rule "applyOnPV" (formula "59") (term "0,2,0,1,0"))
                                             (rule "mod_axiom" (formula "42") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "0,1,0"))
                                             (rule "mul_literals" (formula "42") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                             (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "42") (term "1,0"))
                                             (rule "add_zero_right" (formula "42") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_strengthen1" (formula "39") (ifseqformula "42"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                             (rule "add_literals" (formula "39") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "39"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0"))
                                             (rule "leq_literals" (formula "42") (term "0"))
                                             (rule "concrete_and_2" (formula "42"))
                                             (rule "false_right" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "2"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "35"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                             (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0"))
                                             (rule "qeq_literals" (formula "38") (term "0"))
                                             (rule "concrete_or_1" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "32"))
                                             (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "add_literals" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "38"))
                                             (rule "leq_literals" (formula "37") (term "0"))
                                             (rule "concrete_or_1" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "methodCallEmpty" (formula "58") (term "1"))
                                             (rule "tryEmpty" (formula "58") (term "1"))
                                             (rule "emptyModality" (formula "58") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "58"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0"))
                                             (rule "eqClose" (formula "58") (term "1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,1"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,1,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,0,1"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,1,0,0,1"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,1"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,1,0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,1"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,0,0,0,0,1"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,0,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,1,0,0,1"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,1,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "58") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,1,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,1,1,0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,0,0,0,0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000010110_0" (formula "58") (term "1,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "58") (term "1,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "58") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2" (formula "58") (term "0,0,0"))
                                             (rule "add_literals" (formula "58") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "58") (term "0,0,0"))
                                             (rule "eqClose" (formula "58") (term "0,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,1,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,0,1,1,0,0,0,1"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,0,1,1,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,0,1,1,0,0,0,1"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,0,0,0,1"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0,0,0,0,0,0,1"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,0,0,0,0,0,1"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,0,0,0,0,0,1"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,0,0,0,0,0,1"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,0,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,0,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0,0,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,1,0,0,0,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,0,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,0,1,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,1,0,0,0,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,0,0,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,1,0,0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "1,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,0,0,0,0,0,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,0,0,0,0,0,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0,0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate2" (formula "58") (term "0,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidFormula" (formula "58") (term "1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet000010110_0" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0,0,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,1,1,0,0,0,0,0,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "applyOnRigidTerm" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyOnPV" (formula "58") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "2,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "simplifyUpdate1" (formula "58") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "replaceKnownSelect_taclet000010110_0" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000010110_1" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,0,1,0,0,1"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,0,1,0,0,1"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,1,0,0,1"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,1,0,0,1"))
                                             (rule "mod_axiom" (formula "58") (term "1,3,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,3,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,3,0,0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "58") (term "0,0,3,0,0,0,0,1,0,0,1"))
                                             (rule "applyEq" (formula "58") (term "0,1,3,0,0,0,0,1,0,0,1") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,3,0,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "58") (term "3,0,0,0,0,1,0,0,1"))
                                             (rule "mod_axiom" (formula "58") (term "1,3,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,3,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,3,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,3,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,3,0,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,3,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "3,0,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,1,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,1,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,1,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,1,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,1,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,3,0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,3,0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,3,0,0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,3,0,0,0,0,1,0,0,0,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,3,0,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,3,0,0,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "3,0,0,0,0,1,0,0,0,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,1,0,0,0,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "58") (term "1,0,2,3,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,1,0,0,0,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,0,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "58") (term "1,0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,0,1,0,0,0,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "3,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,0,0,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "3,0,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "times_zero_2" (formula "58") (term "1,0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "58") (term "1,0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,2,3,0,0,1,1,1,0,1,1,0,1,0,0,1,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,1,1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,1,1,0,0,0,0,0,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,0,0,0,0,0,0"))
                                             (rule "mod_axiom" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "58") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "1,1,0,0,0,1,1,0,1,0,0,1,0"))
                                             (rule "Class_invariant_axiom_for_Keyserver" (formula "58") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "10"))
                                             (rule "expand_inInt" (formula "58") (term "1,0,0,0,1,1,1,0"))
                                             (rule "expand_inInt" (formula "58") (term "1,0,0,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "58") (term "0,1,1,0,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "58") (term "1,0,1,0,0,0,1,1,1,0"))
                                             (rule "replace_int_MIN" (formula "58") (term "0,1,1,0,0,0,0,1,1,1,0"))
                                             (rule "replace_int_MAX" (formula "58") (term "1,0,1,0,0,0,0,1,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,1,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,1,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "51"))
                                             (rule "concrete_not_2" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "1,1,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "55"))
                                             (rule "concrete_not_2" (formula "58") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "51"))
                                             (rule "concrete_not_2" (formula "58") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                                             (rule "concrete_and_3" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "56"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "55"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                             (rule "concrete_and_1" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "53"))
                                             (rule "concrete_not_2" (formula "58") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "54"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,1,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "58") (term "0,1,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "56"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "1,0,0,0,1,1,0") (ifseqformula "31"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "52"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "1,0,0,1,1,0") (ifseqformula "33"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "53"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "48"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "replace_known_left" (formula "58") (term "1,0,0,1,1,0") (ifseqformula "26"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,1,0,0,0,0,0,1,1,0") (ifseqformula "43"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,0,0,0,0,1,1,0") (ifseqformula "52"))
                                             (rule "concrete_not_2" (formula "58") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0,0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,1,0,0,0,1,1,0") (ifseqformula "45"))
                                             (rule "concrete_not_2" (formula "58") (term "0,1,0,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "47"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,1,0,0,1,1,0") (ifseqformula "49"))
                                             (rule "concrete_not_2" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,0,0,1,1,0") (ifseqformula "44"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,1,1,0") (ifseqformula "50"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,1,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "58") (term "0,1,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0,0,1,1,0") (ifseqformula "46"))
                                             (rule "concrete_not_2" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "concrete_and_3" (formula "58") (term "0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,1,1,0") (ifseqformula "42"))
                                             (rule "concrete_not_2" (formula "58") (term "0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "pullOutSelect" (formula "58") (term "0,1,0,1,1,0") (inst "selectSK=Keyserver_count_1"))
                                             (rule "applyEq" (formula "59") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "59") (term "1,1,1,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "59") (term "0,1,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "0,0,0,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "59") (term "1,1,1,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,1,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "58") (term "0,0,1,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "0,1,0,1,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "58") (term "0,0,1,1,0") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "concrete_or_1" (formula "58") (term "0,0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "0,1,1,0"))
                                             (rule "inEqSimp_subsumption0" (formula "58") (term "0,1,1,0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "58") (term "0,0,1,1,0"))
                                             (rule "concrete_or_1" (formula "58") (term "0,1,1,0"))
                                             (rule "concrete_and_1" (formula "58") (term "1,1,0"))
                                             (rule "nnf_imp2or" (formula "58") (term "0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "58") (term "0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "58") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "58") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "58") (term "1,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "0,1,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "58") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "58") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "58") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "58") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "58") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "58") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "58") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "andRight" (formula "58"))
                                             (branch
                                                (rule "andRight" (formula "58"))
                                                (branch
                                                   (rule "notRight" (formula "58"))
                                                   (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "4") (term "0"))
                                                   (rule "concrete_or_1" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfStore" (formula "4"))
                                                   (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                   (rule "equalUnique" (formula "4") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "4") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "4") (term "0,0"))
                                                   (rule "castDel" (formula "4") (term "1,0"))
                                                   (rule "eqSymm" (formula "5"))
                                                   (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "46"))
                                                   (rule "concrete_and_2" (formula "4") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "4") (term "0"))
                                                   (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "4"))
                                                   (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                   (rule "eqClose" (formula "4") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "4") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "4") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "4") (term "0,0"))
                                                   (rule "castDel" (formula "4") (term "1,0"))
                                                   (rule "eqSymm" (formula "5"))
                                                   (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                                   (rule "leq_literals" (formula "4") (term "0"))
                                                   (rule "concrete_or_1" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "39"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "37"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                   (rule "leq_literals" (formula "2") (term "0"))
                                                   (rule "concrete_or_1" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "allLeft" (formula "41") (inst "t=result"))
                                                   (rule "eqSymm" (formula "41") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "46"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0,0,0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "41") (term "1,0,0,0,0,0"))
                                                   (rule "concrete_or_4" (formula "41") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0,0,0,0") (ifseqformula "43"))
                                                   (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "41") (term "1,0,0,0,0"))
                                                   (rule "concrete_or_4" (formula "41") (term "0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0") (ifseqformula "45"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "41") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "41") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "41") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "41") (term "0,0,0"))
                                                   (rule "allLeft" (formula "42") (inst "t=i_0"))
                                                   (rule "eqSymm" (formula "42") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "21"))
                                                   (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "42") (term "1,0,0,0,0,0"))
                                                   (rule "concrete_or_4" (formula "42") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0,0,0,0") (ifseqformula "22"))
                                                   (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                                   (rule "concrete_and_2" (formula "42") (term "1,0,0,0,0"))
                                                   (rule "concrete_or_4" (formula "42") (term "0,0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0") (ifseqformula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "42") (term "0,1,0,0,0"))
                                                   (rule "concrete_and_2" (formula "42") (term "1,0,0,0"))
                                                   (rule "concrete_or_4" (formula "42") (term "0,0,0"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "result = i_1 TRUE"
                                                      (rule "applyEq" (formula "11") (term "0,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "46") (term "0,2,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "41") (term "1,1,0,0") (ifseqformula "5"))
                                                      (rule "allLeft" (formula "43") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, Keyserver::$count))"))
                                                      (rule "eqSymm" (formula "43") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,1,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "43") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "43") (term "0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "6"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0,0,0") (ifseqformula "8"))
                                                      (rule "qeq_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "43") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "43") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0") (ifseqformula "10"))
                                                      (rule "qeq_literals" (formula "43") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "43") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "43") (term "0,0,0"))
                                                      (rule "allLeft" (formula "42") (inst "t=i_1"))
                                                      (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "46"))
                                                      (rule "concrete_not_1" (formula "42") (term "1"))
                                                      (rule "concrete_or_4" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "42") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "42") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "42") (term "0"))
                                                      (rule "concrete_or_2" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                      (rule "concrete_or_1" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "25"))
                                                      (rule "concrete_not_1" (formula "40") (term "1"))
                                                      (rule "concrete_or_4" (formula "40"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "42"))
                                                      (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "40") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "40") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "40") (term "0"))
                                                      (rule "concrete_or_2" (formula "40"))
                                                      (rule "inEqSimp_antiSymm" (formula "43") (ifseqformula "40"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,2,0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44"))
                                                      (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                                      (rule "add_literals" (formula "44") (term "1,0"))
                                                      (rule "times_zero_1" (formula "44") (term "0"))
                                                      (rule "leq_literals" (formula "44"))
                                                      (rule "true_left" (formula "44"))
                                                      (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "43"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "43"))
                                                      (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "42"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "42"))
                                                      (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "40"))
                                                      (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "39"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37"))
                                                      (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                                      (rule "add_literals" (formula "37") (term "1,0"))
                                                      (rule "times_zero_1" (formula "37") (term "0"))
                                                      (rule "qeq_literals" (formula "37"))
                                                      (rule "true_left" (formula "37"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "38"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "37"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (rule "concrete_or_1" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                      (rule "concrete_or_1" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "33"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "35"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                      (rule "concrete_or_1" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "30"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "allLeft" (formula "37") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "19"))
                                                      (rule "concrete_not_1" (formula "37") (term "1"))
                                                      (rule "concrete_or_4" (formula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "17"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "37") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "37") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "37") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "37") (term "1"))
                                                      (rule "concrete_or_4" (formula "37"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "37"))
                                                      (rule "qeq_literals" (formula "34") (term "0"))
                                                      (rule "concrete_and_2" (formula "34"))
                                                      (rule "closeFalse" (formula "34"))
                                                   )
                                                   (branch "result = i_1 FALSE"
                                                      (rule "allLeft" (formula "42") (inst "t=result"))
                                                      (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "48"))
                                                      (rule "concrete_not_1" (formula "42") (term "1"))
                                                      (rule "concrete_or_4" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "42") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "42") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "45"))
                                                      (rule "qeq_literals" (formula "42") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "42") (term "0"))
                                                      (rule "concrete_or_2" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "45"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "42"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                      (rule "concrete_or_1" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "40") (term "0,1") (ifseqformula "25"))
                                                      (rule "concrete_not_1" (formula "40") (term "1"))
                                                      (rule "concrete_or_4" (formula "40"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "40") (term "1,0") (ifseqformula "42"))
                                                      (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "40") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "40") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "40") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "40") (term "0"))
                                                      (rule "concrete_or_2" (formula "40"))
                                                      (rule "inEqSimp_antiSymm" (formula "43") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "40") (term "0") (ifseqformula "43"))
                                                      (rule "inEqSimp_homoInEq0" (formula "40"))
                                                      (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                      (rule "add_literals" (formula "40") (term "1,0"))
                                                      (rule "times_zero_1" (formula "40") (term "0"))
                                                      (rule "qeq_literals" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "42"))
                                                      (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "42"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "41"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41"))
                                                      (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                      (rule "add_literals" (formula "41") (term "1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "0"))
                                                      (rule "leq_literals" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "40"))
                                                      (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "39"))
                                                      (rule "eqSymm" (formula "47"))
                                                      (rule "applyEq" (formula "42") (term "0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "39"))
                                                      (rule "applyEq" (formula "10") (term "0,2,0") (ifseqformula "39"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "41"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (rule "concrete_or_1" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "41"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (rule "concrete_or_1" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "31"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                      (rule "add_literals" (formula "39") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "34"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "7"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                      (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                      (rule "add_literals" (formula "40") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "35"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                      (rule "concrete_or_1" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "allLeft" (formula "37") (inst "t=i_1"))
                                                      (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "5"))
                                                      (rule "concrete_not_1" (formula "37") (term "1"))
                                                      (rule "concrete_or_4" (formula "37"))
                                                      (rule "inEqSimp_contradInEq0" (formula "37") (term "1,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                                      (rule "concrete_and_2" (formula "37") (term "1,0"))
                                                      (rule "concrete_or_4" (formula "37") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "37") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "37") (term "0"))
                                                      (rule "concrete_or_2" (formula "37"))
                                                      (rule "inEqSimp_strengthen1" (formula "37") (ifseqformula "43"))
                                                      (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "37"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0"))
                                                      (rule "concrete_and_2" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                      (rule "add_literals" (formula "37") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "37"))
                                                      (rule "leq_literals" (formula "35") (term "0"))
                                                      (rule "concrete_or_1" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "allLeft" (formula "39") (inst "t=i_1"))
                                                      (rule "eqSymm" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                                                      (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                                                      (rule "allLeft" (formula "39") (inst "t=i_0"))
                                                      (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "20"))
                                                      (rule "concrete_not_1" (formula "39") (term "1"))
                                                      (rule "concrete_or_4" (formula "39"))
                                                      (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "18"))
                                                      (rule "qeq_literals" (formula "39") (term "0,0,0"))
                                                      (rule "concrete_and_2" (formula "39") (term "0,0"))
                                                      (rule "concrete_or_2" (formula "39") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "39") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "39") (term "1"))
                                                      (rule "concrete_or_4" (formula "39"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "39"))
                                                      (rule "leq_literals" (formula "18") (term "0"))
                                                      (rule "concrete_or_1" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "35"))
                                                      (rule "qeq_literals" (formula "38") (term "0"))
                                                      (rule "concrete_and_2" (formula "38"))
                                                      (rule "closeFalse" (formula "38"))
                                                   )
                                                )
                                                (branch
                                                   (rule "andRight" (formula "58"))
                                                   (branch
                                                      (rule "allRight" (formula "58") (inst "sk=e_0"))
                                                      (rule "orRight" (formula "58"))
                                                      (rule "orRight" (formula "58"))
                                                      (rule "allRight" (formula "60") (inst "sk=k_0"))
                                                      (rule "orRight" (formula "60"))
                                                      (rule "orRight" (formula "60"))
                                                      (rule "orRight" (formula "61"))
                                                      (rule "eqSymm" (formula "63") (term "1,1,0,0"))
                                                      (rule "eqSymm" (formula "63") (term "1,1,0,1"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "inEqSimp_leqRight" (formula "59"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "59"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "62"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "62"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "equiv_right" (formula "63"))
                                                      (branch
                                                         (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                         (rule "concrete_or_1" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "44"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "42"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                         (rule "concrete_or_1" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "nnf_ex2all" (formula "69"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "allLeft" (formula "47") (inst "t=result"))
                                                         (rule "eqSymm" (formula "47") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                         (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "52"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "47") (term "1,0,0,0,0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                         (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                         (rule "eqSymm" (formula "48") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0"))
                                                         (rule "applyEq" (formula "48") (term "1,0,1,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0") (ifseqformula "30"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (term "1,0,0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0") (ifseqformula "27"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "1") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "1") (term "0"))
                                                         (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_or_subsumption0" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "concrete_or_2" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "47") (term "0,1") (ifseqformula "32"))
                                                         (rule "concrete_not_1" (formula "47") (term "1"))
                                                         (rule "concrete_or_4" (formula "47"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "27"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "47") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "47") (term "0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "0"))
                                                         (rule "concrete_or_2" (formula "47"))
                                                         (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "47"))
                                                         (rule "mul_literals" (formula "18") (term "0,0"))
                                                         (rule "add_zero_left" (formula "18") (term "0"))
                                                         (rule "allLeft" (formula "49") (inst "t=result"))
                                                         (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "55"))
                                                         (rule "concrete_not_1" (formula "49") (term "1"))
                                                         (rule "concrete_or_4" (formula "49"))
                                                         (rule "inEqSimp_contradInEq0" (formula "49") (term "1,0") (ifseqformula "52"))
                                                         (rule "qeq_literals" (formula "49") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "49") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "49") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "49") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "49") (term "0"))
                                                         (rule "concrete_or_2" (formula "49"))
                                                         (rule "inEqSimp_antiSymm" (formula "49") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "49"))
                                                         (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "48"))
                                                         (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "47"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                                                         (rule "inEqSimp_homoInEq0" (formula "46"))
                                                         (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                         (rule "add_literals" (formula "46") (term "1,0"))
                                                         (rule "times_zero_1" (formula "46") (term "0"))
                                                         (rule "qeq_literals" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "17") (term "0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46"))
                                                         (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                         (rule "add_literals" (formula "46") (term "1,0"))
                                                         (rule "times_zero_1" (formula "46") (term "0"))
                                                         (rule "leq_literals" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "applyEq" (formula "1") (term "0,2,0,0,0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "1") (term "0,2,0,0,0,0,1,0,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "1") (term "0,2,0,0,0,1,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "1") (term "0,2,0,0,0,0,1,0") (ifseqformula "44"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "48"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                         (rule "concrete_or_1" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "48"))
                                                         (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                         (rule "concrete_or_1" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "45"))
                                                         (rule "leq_literals" (formula "25") (term "0"))
                                                         (rule "concrete_or_1" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "13"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                         (rule "add_literals" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "44"))
                                                         (rule "leq_literals" (formula "46") (term "0"))
                                                         (rule "concrete_or_1" (formula "46"))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "40"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "37"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                         (rule "add_literals" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_1"))
                                                         (rule "eqSymm" (formula "43") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0"))
                                                         (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "43") (term "1,0,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "43") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0,0,0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "43") (term "1,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "43") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0,0,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "43") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "43") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "43") (term "0,0,0"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_1"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1") (ifseqformula "6"))
                                                         (rule "eqSymm" (formula "42") (term "0,1"))
                                                         (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "66"))
                                                         (rule "concrete_not_2" (formula "42") (term "1"))
                                                         (rule "concrete_or_3" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "allLeft" (formula "1") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0") (ifseqformula "48"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                         (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0") (ifseqformula "46"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "concrete_and_2" (formula "1") (term "1,0,0"))
                                                         (rule "concrete_or_4" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "25"))
                                                         (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                         (rule "concrete_or_2" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "1") (term "0,0,1") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                         (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                         (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                         (rule "eqClose" (formula "1") (term "0,0,0"))
                                                         (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                         (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                         (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                         (rule "ifthenelse_true" (formula "1") (term "0"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "0,0,1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                                                         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                         (rule "eqClose" (formula "1") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "2") (term "0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
                                                         (rule "ifthenelse_false" (formula "1") (term "0"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                                         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                         (rule "eqClose" (formula "1") (term "0,0,0"))
                                                         (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                         (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                         (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                         (rule "ifthenelse_true" (formula "1") (term "0"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "allLeft" (formula "45") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, Keyserver::$count))"))
                                                         (rule "eqSymm" (formula "45") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,1,0,0,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "45") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "45") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0,0,0") (ifseqformula "14"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "45") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0") (ifseqformula "16"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "45") (term "0,0,0"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                         (rule "eqSymm" (formula "45") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                         (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "27"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0") (ifseqformula "25"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "0,0,0"))
                                                         (rule "concrete_or_2" (formula "45") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "50"))
                                                         (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "45") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "48"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "0"))
                                                         (rule "concrete_or_2" (formula "45"))
                                                         (rule "notLeft" (formula "45"))
                                                         (rule "cut_direct" (formula "1") (term "0,1"))
                                                         (branch "CUT: self.keys[-1 + self.count] = k_0 TRUE"
                                                            (rule "concrete_not_1" (formula "2") (term "1"))
                                                            (rule "concrete_or_4" (formula "2"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "3,0,0,0,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "3,0,0,0,1,0") (ifseqformula "1"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                            (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "27"))
                                                            (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "70"))
                                                            (rule "concrete_not_2" (formula "44") (term "1"))
                                                            (rule "concrete_or_3" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_1"))
                                                            (rule "eqSymm" (formula "45") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                            (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "7"))
                                                            (rule "replace_known_right" (formula "45") (term "0,1") (ifseqformula "52"))
                                                            (rule "concrete_not_2" (formula "45") (term "1"))
                                                            (rule "concrete_or_3" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "allLeft" (formula "2") (inst "t=i_0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0,0,0") (ifseqformula "48"))
                                                            (rule "qeq_literals" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                                                            (rule "leq_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_and_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "2") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "26"))
                                                            (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "2") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_3"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "eqClose" (formula "2") (term "1,0,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0,0"))
                                                            (rule "eqClose" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_and_1" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_true" (formula "2") (term "0"))
                                                            (rule "castDel" (formula "2") (term "0"))
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,1") (ifseqformula "2"))
                                                            (rule "eqClose" (formula "3") (term "0,1"))
                                                            (rule "concrete_not_1" (formula "3") (term "1"))
                                                            (rule "concrete_or_4" (formula "3"))
                                                            (rule "notLeft" (formula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=arr_4"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (rule "replaceKnownSelect_taclet0010000001000010110_10" (formula "1") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet0010000001000010110_11" (formula "1") (term "2,0"))
                                                            (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                            (rule "eqClose" (formula "1") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "55"))
                                                            (rule "ifthenelse_false" (formula "1") (term "0"))
                                                            (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "eqSymm" (formula "51"))
                                                            (rule "allLeft" (formula "2") (inst "t=i_1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (term "1,0,0,0") (ifseqformula "5"))
                                                            (rule "qeq_literals" (formula "2") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "2") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_or_2" (formula "2") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_5"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0,0"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "eqClose" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_and_1" (formula "2") (term "0,0"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "eqSymm" (formula "3") (term "0,1"))
                                                            (rule "eqSymm" (formula "2") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0,0,1,0") (inst "selectSK=arr_6"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (rule "equalUnique" (formula "3") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "3") (term "0,0"))
                                                            (rule "equalUnique" (formula "3") (term "1,0,0"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "eqSymm" (formula "4") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "56"))
                                                            (rule "concrete_and_2" (formula "3") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "3") (term "0"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (rule "eqClose" (formula "3") (term "0,0,0,0"))
                                                            (rule "concrete_and_1" (formula "3") (term "0,0,0"))
                                                            (rule "equalUnique" (formula "3") (term "0,0,0"))
                                                            (rule "equalUnique" (formula "3") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "3") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "3") (term "0,0"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "eqSymm" (formula "3") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                            (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "10"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_7"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "57"))
                                                            (rule "concrete_and_2" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_4" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "11"))
                                                            (rule "ifthenelse_same_branches" (formula "2") (term "0"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0,1") (ifseqformula "2"))
                                                            (rule "eqClose" (formula "4") (term "0,1"))
                                                            (rule "concrete_not_1" (formula "4") (term "1"))
                                                            (rule "concrete_or_4" (formula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "commute_or" (formula "3"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "i_1 = i_0 TRUE"
                                                               (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "eqSymm" (formula "3") (term "0,0"))
                                                               (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "53"))
                                                               (rule "concrete_not_2" (formula "3") (term "0"))
                                                               (rule "concrete_or_1" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                               (rule "applyEqRigid" (formula "7") (term "0,2,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "8") (term "0,2,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "7"))
                                                               (rule "eqSymm" (formula "27"))
                                                               (rule "close" (formula "69") (ifseqformula "27"))
                                                            )
                                                            (branch "i_1 = i_0 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                               (rule "eqClose" (formula "3") (term "0,0"))
                                                               (rule "concrete_not_1" (formula "3") (term "0"))
                                                               (rule "concrete_or_2" (formula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "2"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "qeq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                               (rule "add_literals" (formula "7") (term "1,0"))
                                                               (rule "times_zero_1" (formula "7") (term "0"))
                                                               (rule "leq_literals" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "applyEq" (formula "1") (term "1,0,2,0") (ifseqformula "6"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,2,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                               (rule "applyEq" (formula "13") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "applyEq" (formula "45") (term "1,1,0,0,0,0") (ifseqformula "5"))
                                                               (rule "applyEq" (formula "1") (term "1,1,1,0,0,0") (ifseqformula "5"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,1,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "1,1,0,0,0"))
                                                               (rule "applyEq" (formula "48") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0"))
                                                               (rule "applyEq" (formula "15") (term "0") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq1" (formula "15"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                               (rule "add_literals" (formula "15") (term "0,0"))
                                                               (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "5"))
                                                               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0"))
                                                               (rule "applyEq" (formula "1") (term "1,3,0,0,0,0,0,1,0,0") (ifseqformula "5"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "3,0,0,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,3,0,0,0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "3,0,0,0,0,0,1,0,0"))
                                                               (rule "applyEq" (formula "44") (term "1,1,1,0,0") (ifseqformula "5"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,1,1,0,0"))
                                                               (rule "add_zero_left" (formula "44") (term "1,1,0,0"))
                                                               (rule "applyEq" (formula "51") (term "1,0,2,0") (ifseqformula "5"))
                                                               (rule "polySimp_addAssoc" (formula "51") (term "0,2,0"))
                                                               (rule "add_literals" (formula "51") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "51") (term "0,2,0"))
                                                               (rule "close" (formula "51") (ifseqformula "6"))
                                                            )
                                                         )
                                                         (branch "CUT: self.keys[-1 + self.count] = k_0 FALSE"
                                                            (rule "concrete_not_2" (formula "1") (term "1"))
                                                            (rule "concrete_or_3" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "1") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "1") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "1") (term "0,0,0"))
                                                            (rule "concrete_or_2" (formula "1") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "1") (term "0,0,1,0") (inst "selectSK=arr_3"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                            (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "54"))
                                                            (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "1") (term "0"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                            (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                            (rule "eqClose" (formula "1") (term "0,0,0"))
                                                            (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "8"))
                                                            (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_4"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0"))
                                                            (rule "eqClose" (formula "2") (term "0,0,0"))
                                                            (rule "concrete_and_1" (formula "2") (term "0,0"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "eqSymm" (formula "3") (term "0,1"))
                                                            (rule "eqSymm" (formula "2") (term "0,0"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_5"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,0,0"))
                                                            (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "56"))
                                                            (rule "concrete_and_2" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0"))
                                                            (rule "simplifySelectOfStore" (formula "2"))
                                                            (rule "equalUnique" (formula "2") (term "0,1,0,0"))
                                                            (rule "concrete_not_2" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_3" (formula "2") (term "0,0"))
                                                            (rule "equalUnique" (formula "2") (term "1,0,0"))
                                                            (rule "concrete_and_4" (formula "2") (term "0,0"))
                                                            (rule "ifthenelse_false" (formula "2") (term "0"))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "10"))
                                                            (rule "commute_or" (formula "3") (term "0"))
                                                            (rule "commute_or_2" (formula "3"))
                                                            (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0"))
                                                            (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "29"))
                                                            (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "72"))
                                                            (rule "concrete_not_2" (formula "46") (term "1"))
                                                            (rule "concrete_or_3" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "i_1 = i_0 TRUE"
                                                               (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                               (rule "ifthenelse_true" (formula "2") (term "0"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,0,1,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "eqSymm" (formula "2") (term "0,1,0"))
                                                               (rule "replace_known_right" (formula "2") (term "0,1,0") (ifseqformula "52"))
                                                               (rule "concrete_not_2" (formula "2") (term "1,0"))
                                                               (rule "concrete_or_3" (formula "2") (term "0"))
                                                               (rule "concrete_or_1" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "44") (term "1,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEqRigid" (formula "8") (term "0,2,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "6") (term "0") (ifseqformula "26"))
                                                               (rule "close" (formula "68") (ifseqformula "6"))
                                                            )
                                                            (branch "i_1 = i_0 FALSE"
                                                               (rule "applyEqReverse" (formula "3") (term "1,0,0,0") (ifseqformula "1"))
                                                               (rule "eqClose" (formula "3") (term "0,0,0"))
                                                               (rule "concrete_not_1" (formula "3") (term "0,0"))
                                                               (rule "concrete_or_2" (formula "3") (term "0"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "52"))
                                                               (rule "ifthenelse_false" (formula "1") (term "0"))
                                                               (rule "applyEqReverse" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                               (rule "eqClose" (formula "2") (term "0,0"))
                                                               (rule "concrete_not_1" (formula "2") (term "0"))
                                                               (rule "concrete_or_2" (formula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "2") (term "1,1,1,0,0,0") (ifseqformula "6"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "add_literals" (formula "2") (term "0,1,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "2") (term "1,1,0,0,0"))
                                                               (rule "applyEq" (formula "53") (term "1,0,2,0") (ifseqformula "6"))
                                                               (rule "polySimp_addAssoc" (formula "53") (term "0,2,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0,2,0"))
                                                               (rule "add_zero_left" (formula "53") (term "0,2,0"))
                                                               (rule "close" (formula "53") (ifseqformula "9"))
                                                            )
                                                         )
                                                      )
                                                      (branch
                                                         (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                         (rule "concrete_or_1" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfStore" (formula "4"))
                                                         (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                         (rule "equalUnique" (formula "4") (term "0,1,0,0"))
                                                         (rule "concrete_not_2" (formula "4") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "4") (term "0,0"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "eqSymm" (formula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "51"))
                                                         (rule "concrete_and_2" (formula "4") (term "0,0"))
                                                         (rule "ifthenelse_false" (formula "4") (term "0"))
                                                         (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfStore" (formula "5"))
                                                         (rule "eqClose" (formula "5") (term "0,0,0,0"))
                                                         (rule "concrete_and_1" (formula "5") (term "0,0,0"))
                                                         (rule "equalUnique" (formula "5") (term "0,0,0"))
                                                         (rule "equalUnique" (formula "5") (term "0,1,0,0"))
                                                         (rule "concrete_not_2" (formula "5") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "5") (term "0,0"))
                                                         (rule "castDel" (formula "5") (term "1,0"))
                                                         (rule "eqSymm" (formula "6"))
                                                         (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfStore" (formula "4"))
                                                         (rule "equalUnique" (formula "4") (term "1,0,0,0"))
                                                         (rule "eqClose" (formula "4") (term "0,0,0,0"))
                                                         (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                                                         (rule "equalUnique" (formula "4") (term "0,1,0,0"))
                                                         (rule "concrete_not_2" (formula "4") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "4") (term "0,0"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "eqSymm" (formula "5"))
                                                         (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
                                                         (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_4"))
                                                         (rule "simplifySelectOfStore" (formula "5"))
                                                         (rule "equalUnique" (formula "5") (term "1,0,0,0"))
                                                         (rule "equalUnique" (formula "5") (term "0,1,0,0"))
                                                         (rule "concrete_not_2" (formula "5") (term "1,0,0"))
                                                         (rule "concrete_and_3" (formula "5") (term "0,0"))
                                                         (rule "castDel" (formula "5") (term "1,0"))
                                                         (rule "eqSymm" (formula "5") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "52"))
                                                         (rule "concrete_and_2" (formula "5") (term "0,0"))
                                                         (rule "ifthenelse_false" (formula "5") (term "0"))
                                                         (rule "simplifySelectOfStore" (formula "5"))
                                                         (rule "equalUnique" (formula "5") (term "1,0,0,0"))
                                                         (rule "concrete_and_4" (formula "5") (term "0,0,0"))
                                                         (rule "concrete_and_2" (formula "5") (term "0,0"))
                                                         (rule "ifthenelse_false" (formula "5") (term "0"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "44"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "5") (term "0"))
                                                         (rule "concrete_or_1" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "42"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                                         (rule "leq_literals" (formula "4") (term "0"))
                                                         (rule "concrete_or_1" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "nnf_ex2all" (formula "69"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "allLeft" (formula "47") (inst "t=result"))
                                                         (rule "eqSymm" (formula "47") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "52"))
                                                         (rule "inEqSimp_contradInEq0" (formula "47") (term "1,0,0,0,0") (ifseqformula "49"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "51"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                         (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                         (rule "eqSymm" (formula "48") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,0,0"))
                                                         (rule "applyEq" (formula "48") (term "1,0,1,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (term "1,0,0,0,0") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0") (ifseqformula "30"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0,0,0") (ifseqformula "27"))
                                                         (rule "qeq_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "48") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "48") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "1") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "1") (term "0"))
                                                         (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_or_subsumption0" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "concrete_or_2" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "result = i_1 TRUE"
                                                            (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                            (rule "ifthenelse_true" (formula "8") (term "0"))
                                                            (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "6"))
                                                            (rule "allLeft" (formula "1") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, Keyserver::$count))"))
                                                            (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "9"))
                                                            (rule "concrete_not_1" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                                            (rule "add_zero_right" (formula "1") (term "0,1"))
                                                            (rule "leq_literals" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                            (rule "inEqSimp_invertInEq1" (formula "1") (term "0"))
                                                            (rule "mul_literals" (formula "1") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (term "1") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "15") (term "0"))
                                                            (rule "concrete_or_1" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (rule "concrete_and_2" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "result = i_1 FALSE"
                                                            (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "55"))
                                                            (rule "ifthenelse_false" (formula "7") (term "0"))
                                                            (rule "allLeft" (formula "1") (inst "t=i_1"))
                                                            (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                                            (rule "concrete_not_1" (formula "1") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "1") (term "0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "8"))
                                                            (rule "concrete_not_1" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "1") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "1") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "1") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "1") (term "1"))
                                                            (rule "concrete_or_4" (formula "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (rule "concrete_and_2" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch
                                                      (rule "allRight" (formula "58") (inst "sk=j_0"))
                                                      (rule "allRight" (formula "58") (inst "sk=i_1"))
                                                      (rule "orRight" (formula "58"))
                                                      (rule "notRight" (formula "59"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "orRight" (formula "61"))
                                                      (rule "orRight" (formula "60"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "orRight" (formula "59"))
                                                      (rule "inEqSimp_leqRight" (formula "65"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "65"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "65"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "65"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_geqRight" (formula "65"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "64"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "65"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "5") (term "0"))
                                                      (rule "concrete_or_1" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "pullOutSelect" (formula "7") (term "1") (inst "selectSK=arr_1"))
                                                      (rule "simplifySelectOfStore" (formula "7"))
                                                      (rule "equalUnique" (formula "7") (term "0,1,0,0"))
                                                      (rule "concrete_not_2" (formula "7") (term "1,0,0"))
                                                      (rule "concrete_and_3" (formula "7") (term "0,0"))
                                                      (rule "equalUnique" (formula "7") (term "1,0,0"))
                                                      (rule "castDel" (formula "7") (term "1,0"))
                                                      (rule "simplifySelectOfStore" (formula "8"))
                                                      (rule "equalUnique" (formula "8") (term "0,1,0,0"))
                                                      (rule "concrete_not_2" (formula "8") (term "1,0,0"))
                                                      (rule "concrete_and_3" (formula "8") (term "0,0"))
                                                      (rule "equalUnique" (formula "8") (term "1,0,0"))
                                                      (rule "castDel" (formula "8") (term "1,0"))
                                                      (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "50"))
                                                      (rule "concrete_and_2" (formula "7") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "7") (term "0"))
                                                      (rule "simplifySelectOfStore" (formula "7"))
                                                      (rule "eqClose" (formula "7") (term "0,0,0,0"))
                                                      (rule "concrete_and_1" (formula "7") (term "0,0,0"))
                                                      (rule "equalUnique" (formula "7") (term "0,0,0"))
                                                      (rule "equalUnique" (formula "7") (term "0,1,0,0"))
                                                      (rule "concrete_not_2" (formula "7") (term "1,0,0"))
                                                      (rule "concrete_and_3" (formula "7") (term "0,0"))
                                                      (rule "castDel" (formula "7") (term "1,0"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "50"))
                                                      (rule "concrete_and_2" (formula "8") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "8") (term "0"))
                                                      (rule "simplifySelectOfStore" (formula "8"))
                                                      (rule "equalUnique" (formula "8") (term "0,1,0,0"))
                                                      (rule "concrete_not_2" (formula "8") (term "1,0,0"))
                                                      (rule "concrete_and_3" (formula "8") (term "0,0"))
                                                      (rule "eqClose" (formula "8") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "8") (term "0,0"))
                                                      (rule "equalUnique" (formula "8") (term "0,0"))
                                                      (rule "castDel" (formula "8") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "7") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "8") (term "2,0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "43"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "4"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_1" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (rule "concrete_or_1" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "41"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                                                      (rule "leq_literals" (formula "6") (term "0"))
                                                      (rule "concrete_or_1" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "allLeft" (formula "45") (inst "t=result"))
                                                      (rule "eqSymm" (formula "45") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0,0"))
                                                      (rule "applyEq" (formula "45") (term "1,0,1,0") (ifseqformula "50"))
                                                      (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0,0,0,0") (ifseqformula "47"))
                                                      (rule "qeq_literals" (formula "45") (term "0,1,0,0,0,0"))
                                                      (rule "concrete_and_2" (formula "45") (term "1,0,0,0,0"))
                                                      (rule "concrete_or_4" (formula "45") (term "0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0") (ifseqformula "49"))
                                                      (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "45") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "45") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "45") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "45") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "45") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "45") (term "0,0,0"))
                                                      (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                      (rule "eqSymm" (formula "46") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0,0,0,0") (ifseqformula "26"))
                                                      (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,0"))
                                                      (rule "concrete_and_2" (formula "46") (term "1,0,0,0,0"))
                                                      (rule "concrete_or_4" (formula "46") (term "0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "46") (term "0,1,0,0,0"))
                                                      (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                      (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                      (rule "ifthenelse_split" (formula "8") (term "0"))
                                                      (branch "result = i_1 TRUE"
                                                         (rule "applyEqReverse" (formula "10") (term "1") (ifseqformula "9"))
                                                         (rule "ifthenelse_concrete3" (formula "10"))
                                                         (rule "hideAuxiliaryEq" (formula "9"))
                                                         (rule "eqSymm" (formula "9") (term "1"))
                                                         (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "51") (term "0,2,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                                                         (rule "eqSymm" (formula "9") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "8"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "8"))
                                                         (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                         (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "9") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "9") (term "0"))
                                                         (rule "concrete_or_2" (formula "9"))
                                                         (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "47") (term "0"))
                                                         (rule "concrete_or_1" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "40"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                                         (rule "mul_literals" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "add_literals" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "47") (term "0"))
                                                         (rule "concrete_or_1" (formula "47"))
                                                         (rule "true_left" (formula "47"))
                                                         (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "43"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "11"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                         (rule "add_literals" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "48") (term "0"))
                                                         (rule "concrete_or_1" (formula "48"))
                                                         (rule "true_left" (formula "48"))
                                                         (rule "allLeft" (formula "46") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, Keyserver::$count))"))
                                                         (rule "eqSymm" (formula "46") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "46") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "9"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "0,1,0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0,0,0") (ifseqformula "11"))
                                                         (rule "qeq_literals" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "13"))
                                                         (rule "qeq_literals" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                         (rule "allLeft" (formula "47") (inst "t=j_0"))
                                                         (rule "eqSymm" (formula "47") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "47") (term "1,0,0,0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "7"))
                                                         (rule "qeq_literals" (formula "47") (term "0,1,0,0,0"))
                                                         (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                         (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                         (rule "allLeft" (formula "45") (inst "t=i_1"))
                                                         (rule "replace_known_left" (formula "45") (term "0,1") (ifseqformula "52"))
                                                         (rule "concrete_not_1" (formula "45") (term "1"))
                                                         (rule "concrete_or_4" (formula "45"))
                                                         (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "45") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "45") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "45") (term "0"))
                                                         (rule "concrete_or_2" (formula "45"))
                                                         (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "45"))
                                                         (rule "leq_literals" (formula "25") (term "0"))
                                                         (rule "concrete_or_1" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "allLeft" (formula "43") (inst "t=i_0"))
                                                         (rule "replace_known_left" (formula "43") (term "0,1") (ifseqformula "28"))
                                                         (rule "concrete_not_1" (formula "43") (term "1"))
                                                         (rule "concrete_or_4" (formula "43"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "43") (term "1,0") (ifseqformula "45"))
                                                         (rule "qeq_literals" (formula "43") (term "0,1,0"))
                                                         (rule "concrete_and_2" (formula "43") (term "1,0"))
                                                         (rule "concrete_or_4" (formula "43") (term "0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "24"))
                                                         (rule "qeq_literals" (formula "43") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "43") (term "0"))
                                                         (rule "concrete_or_2" (formula "43"))
                                                         (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "43"))
                                                         (rule "applyEqRigid" (formula "53") (term "1,1") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "54") (term "0,2,0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42"))
                                                         (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                         (rule "add_literals" (formula "42") (term "1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "0"))
                                                         (rule "qeq_literals" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "applyEqRigid" (formula "42") (term "1,1,0,0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "43"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "42"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43"))
                                                         (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                         (rule "add_literals" (formula "43") (term "1,0"))
                                                         (rule "times_zero_1" (formula "43") (term "0"))
                                                         (rule "leq_literals" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "42"))
                                                         (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "41"))
                                                         (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "40"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                         (rule "concrete_or_1" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "45"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                         (rule "concrete_or_1" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "9"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                         (rule "add_literals" (formula "44") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "37"))
                                                         (rule "leq_literals" (formula "44") (term "0"))
                                                         (rule "concrete_or_1" (formula "44"))
                                                         (rule "true_left" (formula "44"))
                                                         (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "33"))
                                                         (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                         (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                         (rule "add_literals" (formula "43") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                         (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "43") (ifseqformula "37"))
                                                         (rule "leq_literals" (formula "43") (term "0"))
                                                         (rule "concrete_or_1" (formula "43"))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "36"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                         (rule "mul_literals" (formula "44") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                         (rule "allLeft" (formula "40") (inst "t=j_0"))
                                                         (rule "eqClose" (formula "40") (term "0,1"))
                                                         (rule "concrete_not_1" (formula "40") (term "1"))
                                                         (rule "concrete_or_4" (formula "40"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,1"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "40") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "40") (term "1"))
                                                         (rule "concrete_or_4" (formula "40"))
                                                         (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "40") (term "0,1"))
                                                         (rule "concrete_and_2" (formula "40") (term "1"))
                                                         (rule "concrete_or_4" (formula "40"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "40"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "39"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "37") (term "0"))
                                                         (rule "concrete_or_1" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (rule "concrete_and_2" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "result = i_1 FALSE"
                                                         (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "8"))
                                                         (rule "hideAuxiliaryEq" (formula "8"))
                                                         (rule "ifthenelse_split" (formula "8") (term "0"))
                                                         (branch "result = j_0 TRUE"
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "15") (term "0,2,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "49") (term "0,2,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "8"))
                                                            (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "8"))
                                                            (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "2"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0"))
                                                            (rule "leq_literals" (formula "50") (term "0"))
                                                            (rule "concrete_and_2" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "7") (term "0"))
                                                            (rule "concrete_or_1" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, self, Keyserver::$count))"))
                                                            (rule "eqSymm" (formula "46") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "46") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                            (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0,0,0") (ifseqformula "10"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "12"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                            (rule "allLeft" (formula "47") (inst "t=j_0"))
                                                            (rule "eqSymm" (formula "47") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0,0"))
                                                            (rule "applyEq" (formula "47") (term "1,0,1,0") (ifseqformula "49"))
                                                            (rule "inEqSimp_contradInEq0" (formula "47") (term "1,0,0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "47") (term "1,0,0,0,0"))
                                                            (rule "concrete_or_4" (formula "47") (term "0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "47") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0,0,0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "47") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "47") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "47") (term "0,0,0"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0,0"))
                                                            (rule "concrete_and_2" (formula "44") (term "1,0,0"))
                                                            (rule "concrete_or_4" (formula "44") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "44") (term "0,1,0"))
                                                            (rule "concrete_and_2" (formula "44") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "44") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "44") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "44") (term "0"))
                                                            (rule "concrete_or_2" (formula "44"))
                                                            (rule "notLeft" (formula "44"))
                                                            (rule "allLeft" (formula "45") (inst "t=j_0"))
                                                            (rule "replace_known_left" (formula "45") (term "0,1") (ifseqformula "49"))
                                                            (rule "concrete_not_1" (formula "45") (term "1"))
                                                            (rule "concrete_or_4" (formula "45"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                            (rule "concrete_and_2" (formula "45") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "45") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "45") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "45") (term "0"))
                                                            (rule "concrete_or_2" (formula "45"))
                                                            (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "4"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "45"))
                                                            (rule "leq_literals" (formula "25") (term "0"))
                                                            (rule "concrete_or_1" (formula "25"))
                                                            (rule "true_left" (formula "25"))
                                                            (rule "allLeft" (formula "43") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "43") (term "0,1") (ifseqformula "28"))
                                                            (rule "concrete_not_1" (formula "43") (term "1"))
                                                            (rule "concrete_or_4" (formula "43"))
                                                            (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "43") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "43") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "43") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "43") (term "0") (ifseqformula "45"))
                                                            (rule "qeq_literals" (formula "43") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "43") (term "0"))
                                                            (rule "concrete_or_2" (formula "43"))
                                                            (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "43") (term "0") (ifseqformula "46"))
                                                            (rule "inEqSimp_homoInEq0" (formula "43"))
                                                            (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "0"))
                                                            (rule "qeq_literals" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "applyEqRigid" (formula "13") (term "0,2,0") (ifseqformula "45"))
                                                            (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "44"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "44"))
                                                            (rule "applyEqRigid" (formula "49") (term "0,2,0") (ifseqformula "44"))
                                                            (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "44"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45"))
                                                            (rule "polySimp_pullOutFactor1" (formula "45") (term "0"))
                                                            (rule "add_literals" (formula "45") (term "1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "0"))
                                                            (rule "leq_literals" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "applyEq" (formula "40") (term "1,1,0,0") (ifseqformula "42"))
                                                            (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "41"))
                                                            (rule "applyEq" (formula "6") (term "1") (ifseqformula "40"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0"))
                                                            (rule "qeq_literals" (formula "22") (term "0"))
                                                            (rule "concrete_or_1" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0"))
                                                            (rule "concrete_or_1" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                            (rule "mul_literals" (formula "3") (term "0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "mul_literals" (formula "3") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "21") (term "0"))
                                                            (rule "concrete_or_1" (formula "21"))
                                                            (rule "true_left" (formula "21"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "38"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (rule "concrete_or_1" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "36"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "33"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "add_literals" (formula "5") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "allLeft" (formula "41") (inst "t=i_1"))
                                                            (rule "eqSymm" (formula "41") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0,0,0,0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "41") (term "1,0,0,0,0"))
                                                            (rule "concrete_or_4" (formula "41") (term "0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0,0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "41") (term "0,1,0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "41") (term "1,0,0,0,0"))
                                                            (rule "concrete_or_4" (formula "41") (term "0,0,0,0"))
                                                            (rule "commute_or_2" (formula "41") (term "0,0"))
                                                            (rule "commute_or_2" (formula "41") (term "0"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_0"))
                                                            (rule "eqSymm" (formula "40") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                            (rule "applyEq" (formula "40") (term "1,0,1") (ifseqformula "22"))
                                                            (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "45"))
                                                            (rule "concrete_not_2" (formula "40") (term "1"))
                                                            (rule "concrete_or_3" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_1"))
                                                            (rule "eqClose" (formula "40") (term "0,1"))
                                                            (rule "concrete_not_1" (formula "40") (term "1"))
                                                            (rule "concrete_or_4" (formula "40"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "40") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "40") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "40") (term "0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "40") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "40") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "40") (term "0"))
                                                            (rule "concrete_or_2" (formula "40"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "40"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "mul_literals" (formula "6") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_literals" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                         (branch "result = j_0 FALSE"
                                                            (rule "allLeft" (formula "46") (inst "t=j_0"))
                                                            (rule "eqSymm" (formula "46") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                                                            (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0,0,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0,0,0,0") (ifseqformula "4"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0,0,0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,0"))
                                                            (rule "leq_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0,0,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0,0,0"))
                                                            (rule "allLeft" (formula "44") (inst "t=i_0"))
                                                            (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "29"))
                                                            (rule "concrete_not_1" (formula "44") (term "1"))
                                                            (rule "concrete_or_4" (formula "44"))
                                                            (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "44") (term "1,0") (ifseqformula "25"))
                                                            (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                            (rule "concrete_and_2" (formula "44") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "44") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "44") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "44") (term "0"))
                                                            (rule "concrete_or_2" (formula "44"))
                                                            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "44"))
                                                            (rule "times_zero_1" (formula "15") (term "0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0"))
                                                            (rule "allLeft" (formula "46") (inst "t=result"))
                                                            (rule "replace_known_left" (formula "46") (term "0,1") (ifseqformula "53"))
                                                            (rule "concrete_not_1" (formula "46") (term "1"))
                                                            (rule "concrete_or_4" (formula "46"))
                                                            (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "50"))
                                                            (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "1,0"))
                                                            (rule "concrete_or_4" (formula "46") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "46") (term "0,0"))
                                                            (rule "concrete_and_2" (formula "46") (term "0"))
                                                            (rule "concrete_or_2" (formula "46"))
                                                            (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "57") (term "0") (ifseqformula "46"))
                                                            (rule "eqSymm" (formula "57"))
                                                            (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "46"))
                                                            (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "46"))
                                                            (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "50") (term "0") (ifseqformula "45"))
                                                            (rule "applyEq" (formula "46") (term "0") (ifseqformula "45"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46"))
                                                            (rule "polySimp_pullOutFactor1" (formula "46") (term "0"))
                                                            (rule "add_literals" (formula "46") (term "1,0"))
                                                            (rule "times_zero_1" (formula "46") (term "0"))
                                                            (rule "leq_literals" (formula "46"))
                                                            (rule "true_left" (formula "46"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "45"))
                                                            (rule "eqSymm" (formula "53"))
                                                            (rule "applyEq" (formula "43") (term "0") (ifseqformula "45"))
                                                            (rule "inEqSimp_homoInEq0" (formula "43"))
                                                            (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "1,0"))
                                                            (rule "times_zero_1" (formula "43") (term "0"))
                                                            (rule "qeq_literals" (formula "43"))
                                                            (rule "true_left" (formula "43"))
                                                            (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "43") (term "1,1,0,0") (ifseqformula "44"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "43"))
                                                            (rule "applyEq" (formula "13") (term "0,2,0") (ifseqformula "42"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "46"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0"))
                                                            (rule "qeq_literals" (formula "23") (term "0"))
                                                            (rule "concrete_or_1" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "44"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                            (rule "concrete_or_1" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "45"))
                                                            (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "22") (term "0,0"))
                                                            (rule "qeq_literals" (formula "22") (term "0"))
                                                            (rule "concrete_or_1" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "10"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "42"))
                                                            (rule "leq_literals" (formula "44") (term "0"))
                                                            (rule "concrete_or_1" (formula "44"))
                                                            (rule "true_left" (formula "44"))
                                                            (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "34"))
                                                            (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                                            (rule "mul_literals" (formula "43") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                            (rule "add_literals" (formula "43") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                            (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "37"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                            (rule "allLeft" (formula "40") (inst "t=i_1"))
                                                            (rule "eqClose" (formula "40") (term "0,1"))
                                                            (rule "concrete_not_1" (formula "40") (term "1"))
                                                            (rule "concrete_or_4" (formula "40"))
                                                            (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                            (rule "concrete_and_2" (formula "40") (term "0,0"))
                                                            (rule "concrete_or_2" (formula "40") (term "0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "40") (term "0,1"))
                                                            (rule "concrete_and_2" (formula "40") (term "1"))
                                                            (rule "concrete_or_4" (formula "40"))
                                                            (rule "inEqSimp_contradInEq0" (formula "40") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "40") (term "0"))
                                                            (rule "concrete_and_2" (formula "40"))
                                                            (rule "closeFalse" (formula "40"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "allRight" (formula "58") (inst "sk=f_0"))
                                                (rule "allRight" (formula "58") (inst "sk=o_0"))
                                                (rule "orRight" (formula "58"))
                                                (rule "orRight" (formula "58"))
                                                (rule "orRight" (formula "58"))
                                                (rule "orRight" (formula "58"))
                                                (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=f_0_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "60"))
                                                (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                                                (rule "concrete_and_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "61"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Null Reference (x_arr_7 = null)"
                                             (rule "false_right" (formula "60"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "applyOnRigidFormula" (formula "1"))
                                             (rule "applyOnPV" (formula "1") (term "0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1"))
                                             (rule "close" (formula "54") (ifseqformula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr_7 != null, but x_22 Out of Bounds!)"
                                             (rule "false_right" (formula "60"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "simplifyUpdate2" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "applyOnRigidFormula" (formula "1"))
                                             (rule "simplifyUpdate2" (formula "1") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "43"))
                                             (rule "applyOnPV" (formula "43") (term "0"))
                                             (rule "simplifyUpdate1" (formula "43") (term "1"))
                                             (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                             (rule "applyOnPV" (formula "1") (term "1,0"))
                                             (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                             (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                             (rule "applyOnPV" (formula "1") (term "0,1"))
                                             (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                             (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "29"))
                                             (rule "mod_axiom" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                             (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "2"))
                                             (rule "mul_literals" (formula "43") (term "1,0"))
                                             (rule "add_zero_right" (formula "43") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_strengthen1" (formula "40") (ifseqformula "43"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                             (rule "add_literals" (formula "40") (term "0,1"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "40"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (rule "concrete_and_2" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (rule "concrete_and_2" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                                             (rule "andLeft" (formula "39"))
                                             (rule "inEqSimp_homoInEq1" (formula "39"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0"))
                                             (rule "leq_literals" (formula "39"))
                                             (rule "closeFalse" (formula "39"))
                                          )
                                       )
                                       (branch "Null Reference (x_arr_9 = null)"
                                          (rule "false_right" (formula "60"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "applyOnPV" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1"))
                                          (rule "close" (formula "54") (ifseqformula "1"))
                                       )
                                       (branch "Index Out of Bounds (x_arr_9 != null, but x_24 Out of Bounds!)"
                                          (rule "false_right" (formula "60"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "applyOnRigidFormula" (formula "1"))
                                          (rule "simplifyUpdate2" (formula "1") (term "1"))
                                          (rule "applyOnRigidFormula" (formula "43"))
                                          (rule "applyOnPV" (formula "43") (term "0"))
                                          (rule "simplifyUpdate1" (formula "43") (term "1"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                          (rule "applyOnPV" (formula "1") (term "1,0"))
                                          (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                          (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                          (rule "applyOnPV" (formula "1") (term "0,1"))
                                          (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                          (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "mod_axiom" (formula "43") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                          (rule "polySimp_homoEq" (formula "43"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "0,1,0"))
                                          (rule "mul_literals" (formula "43") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "43") (term "1,0"))
                                          (rule "add_zero_right" (formula "43") (term "0"))
                                          (rule "mod_axiom" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,1"))
                                          (rule "mod_axiom" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                          (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                          (rule "inEqSimp_strengthen1" (formula "40") (ifseqformula "43"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                          (rule "add_literals" (formula "40") (term "0,1"))
                                          (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "40"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0"))
                                          (rule "leq_literals" (formula "43") (term "0"))
                                          (rule "concrete_and_2" (formula "43"))
                                          (rule "false_right" (formula "43"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "36"))
                                          (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                          (rule "leq_literals" (formula "1") (term "0,0"))
                                          (rule "concrete_and_2" (formula "1") (term "0"))
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr_3 = null)"
                                       (rule "false_right" (formula "60"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "1"))
                                       (rule "applyOnPV" (formula "1") (term "0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1"))
                                       (rule "close" (formula "53") (ifseqformula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr_3 != null, but x_19 Out of Bounds!)"
                                       (rule "false_right" (formula "60"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyOnRigidFormula" (formula "1"))
                                       (rule "simplifyUpdate2" (formula "1") (term "1"))
                                       (rule "applyOnRigidFormula" (formula "43"))
                                       (rule "applyOnPV" (formula "43") (term "0"))
                                       (rule "simplifyUpdate1" (formula "43") (term "1"))
                                       (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                       (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                       (rule "applyOnPV" (formula "1") (term "1,0"))
                                       (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                       (rule "applyOnPV" (formula "1") (term "0,1"))
                                       (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                       (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                       (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                                       (rule "mod_axiom" (formula "43") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "43") (term "1,0"))
                                       (rule "add_zero_right" (formula "43") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "43"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_strengthen1" (formula "40") (ifseqformula "43"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                       (rule "add_literals" (formula "40") (term "0,1"))
                                       (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "40"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "leq_literals" (formula "43") (term "0"))
                                       (rule "concrete_and_2" (formula "43"))
                                       (rule "false_right" (formula "43"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "39"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_and_2" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                       (rule "concrete_and_2" (formula "8"))
                                       (rule "closeFalse" (formula "8"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr_5 = null)"
                                    (rule "false_right" (formula "60"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "applyOnRigidFormula" (formula "1"))
                                    (rule "applyOnPV" (formula "1") (term "0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1"))
                                    (rule "close" (formula "53") (ifseqformula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_5 != null, but x_21 Out of Bounds!)"
                                    (rule "false_right" (formula "60"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "simplifyUpdate2" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "applyOnRigidFormula" (formula "1"))
                                    (rule "simplifyUpdate2" (formula "1") (term "1"))
                                    (rule "applyOnRigidFormula" (formula "43"))
                                    (rule "applyOnPV" (formula "43") (term "0"))
                                    (rule "simplifyUpdate1" (formula "43") (term "1"))
                                    (rule "applyOnRigidFormula" (formula "1") (term "0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                                    (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                                    (rule "applyOnPV" (formula "1") (term "1,0"))
                                    (rule "applyOnRigidFormula" (formula "1") (term "1"))
                                    (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                                    (rule "applyOnPV" (formula "1") (term "0,1"))
                                    (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                                    (rule "applyOnPV" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "mod_axiom" (formula "43") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "0,1,0"))
                                    (rule "mul_literals" (formula "43") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "43") (term "0,1,0") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "43") (term "1,0"))
                                    (rule "add_zero_right" (formula "43") (term "0"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                    (rule "applyEq" (formula "1") (term "0,1,0,1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "1") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,1"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "2"))
                                    (rule "times_zero_2" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                    (rule "inEqSimp_strengthen1" (formula "40") (ifseqformula "43"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                    (rule "add_literals" (formula "40") (term "0,1"))
                                    (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "40"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0"))
                                    (rule "leq_literals" (formula "43") (term "0"))
                                    (rule "concrete_and_2" (formula "43"))
                                    (rule "false_right" (formula "43"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (rule "concrete_and_2" (formula "1") (term "1"))
                                    (rule "concrete_or_4" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "1"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "36"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0"))
                                    (rule "leq_literals" (formula "36"))
                                    (rule "closeFalse" (formula "36"))
                                 )
                              )
                              (branch "if x_13 false"
                                 (rule "false_to_not_true" (formula "1") (term "1"))
                                 (rule "simplifyUpdate2" (formula "59"))
                                 (rule "simplifyUpdate2" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "applyOnRigidFormula" (formula "42"))
                                 (rule "applyOnPV" (formula "42") (term "0"))
                                 (rule "simplifyUpdate1" (formula "42") (term "1"))
                                 (rule "ifthenelse_concrete4" (formula "42"))
                                 (rule "boolean_not_equal_2" (formula "42") (term "1"))
                                 (rule "concrete_or_4" (formula "42"))
                                 (rule "notRight" (formula "42"))
                                 (rule "applyEq" (formula "59") (term "1,3,0,1,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "59") (term "3,0,1,0"))
                                 (rule "add_literals" (formula "59") (term "0,3,0,1,0"))
                                 (rule "add_zero_left" (formula "59") (term "3,0,1,0"))
                                 (rule "mod_axiom" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "2"))
                                 (rule "times_zero_2" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "40"))
                                 (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                 (rule "add_literals" (formula "40") (term "1,0"))
                                 (rule "times_zero_1" (formula "40") (term "0"))
                                 (rule "leq_literals" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "applyEq" (formula "36") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_1" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "36"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "35"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "methodCallEmpty" (formula "55") (term "1"))
                                 (rule "tryEmpty" (formula "55") (term "1"))
                                 (rule "emptyModality" (formula "55") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "55"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0"))
                                 (rule "eqClose" (formula "55") (term "1,0"))
                                 (rule "concrete_and_3" (formula "55") (term "0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,1"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,1"))
                                 (rule "eqSymm" (formula "55") (term "1,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0,0,1"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,0,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0,0,1"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,0,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "55") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,1,1,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,0,0,0,0,1"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0,0,0,1"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,0,0,0,0,0,1"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,0,0,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,0,0,0,0,0,1"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,1,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,1,0,0,0,1"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,0,1,1,0,0,0,1"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,0,1,1,0,0,0,1"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,1,0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0,1,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,0,1,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "0,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "1,0,1,0,0,0,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,0,0,0,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,0,0,0,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0,0,0,0,0,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "1,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0,0,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "1,0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "1,1,1,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "55") (term "0,0,1,0,1,1,0,1,0,0,1,1,0"))
                                 (rule "applyEq" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "55") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                                 (rule "applyEq" (formula "55") (term "1,0,0,1,0,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,1,0,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,1,0,0,0,0"))
                                 (rule "mod_axiom" (formula "55") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "55") (term "0,0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "55") (term "0,0,0,0,0"))
                                 (rule "applyEq" (formula "55") (term "0,1,0,0,0,0") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "55") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "55") (term "0,0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "55") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,0,0"))
                                 (rule "pullOutSelect" (formula "55") (term "1,1,1,0,0,0,0,0,1,0") (inst "selectSK=Keyserver_count_1"))
                                 (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "56") (term "1,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqClose" (formula "56") (term "0,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0"))
                                 (rule "applyEqReverse" (formula "56") (term "1,1,1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "div_axiom" (formula "2") (term "0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                 (rule "equal_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                 (rule "add_literals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                 (rule "times_zero_2" (formula "4") (term "1,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "37"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "Class_invariant_axiom_for_Keyserver" (formula "56") (term "1,1,0") (inst "j=j") (inst "i=i") (ifseqformula "10"))
                                 (rule "replaceKnownSelect_taclet11000010110_2" (formula "56") (term "0,1,1,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet11000010110_2" (formula "56") (term "1,0,1,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000010110_3" (formula "56") (term "0,1,1,0,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000010110_3" (formula "56") (term "1,0,1,0,1,1,0"))
                                 (rule "replaceKnownSelect_taclet11000010110_2" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000010110_3" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "expand_inInt" (formula "56") (term "1,0,0,0,0,1,1,1,0"))
                                 (rule "expand_inInt" (formula "56") (term "1,0,0,0,1,1,1,0"))
                                 (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,0,0,1,1,1,0"))
                                 (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,0,0,1,1,1,0"))
                                 (rule "replace_int_MIN" (formula "56") (term "0,1,1,0,0,0,1,1,1,0"))
                                 (rule "replace_int_MAX" (formula "56") (term "1,0,1,0,0,0,1,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,1,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "49"))
                                 (rule "concrete_not_2" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "53"))
                                 (rule "concrete_not_2" (formula "56") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "41"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,1,1,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "51"))
                                 (rule "concrete_not_2" (formula "56") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "56") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "concrete_and_3" (formula "56") (term "1,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "1,1,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "49"))
                                 (rule "concrete_not_2" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "51"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "53"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "52"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "1,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "54"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0,0,0,0,1,1,0") (ifseqformula "26"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "56") (term "0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                 (rule "concrete_and_1" (formula "56") (term "1,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "56") (term "0,1,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,1,0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0,0,0,1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,0,0,1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,1,1,0") (ifseqformula "50"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0,0,1,1,0") (ifseqformula "31"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "56") (term "1,1,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "40"))
                                 (rule "concrete_not_2" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,1,1,0") (ifseqformula "46"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,0,1,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,1,0,0,1,1,0") (ifseqformula "47"))
                                 (rule "concrete_not_2" (formula "56") (term "0,1,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,1,0,0,0,1,1,0") (ifseqformula "44"))
                                 (rule "concrete_not_2" (formula "56") (term "1,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "1,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "50"))
                                 (rule "concrete_not_2" (formula "56") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "42"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,0,0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,1,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "48"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,1,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,1,0,0,1,1,0") (ifseqformula "43"))
                                 (rule "concrete_not_2" (formula "56") (term "1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0,0,1,1,0") (ifseqformula "54"))
                                 (rule "concrete_not_2" (formula "56") (term "0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0,0,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "56") (term "0,0,0,0,1,1,0"))
                                 (rule "eqSymm" (formula "56") (term "0,0,0,1,1,0"))
                                 (rule "replace_known_right" (formula "56") (term "0,0,0,1,1,0") (ifseqformula "45"))
                                 (rule "concrete_not_2" (formula "56") (term "0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "0,1,0,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "56") (term "1,0,1,1,0") (ifseqformula "37"))
                                 (rule "inEqSimp_homoInEq0" (formula "56") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,1,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "56") (term "0,0,1,0,1,1,0"))
                                 (rule "qeq_literals" (formula "56") (term "0,1,0,1,1,0"))
                                 (rule "concrete_or_1" (formula "56") (term "1,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "56") (term "0,1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "56") (term "0,1,1,0") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "56") (term "0,0,1,1,0"))
                                 (rule "concrete_or_1" (formula "56") (term "0,1,1,0"))
                                 (rule "concrete_and_1" (formula "56") (term "1,1,0"))
                                 (rule "nnf_imp2or" (formula "56") (term "0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "56") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "56") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "56") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "56") (term "0,0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "56") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "andRight" (formula "56"))
                                 (branch
                                    (rule "andRight" (formula "56"))
                                    (branch
                                       (rule "notRight" (formula "56"))
                                       (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "40"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "39") (inst "t=result"))
                                       (rule "eqSymm" (formula "39") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "39") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,1,0,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,1,0,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,1,0,0,0"))
                                       (rule "leq_literals" (formula "39") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                                       (rule "applyEq" (formula "39") (term "1,0,1,0") (ifseqformula "43"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0,0,0") (ifseqformula "9"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0,0,0,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0,0,0") (ifseqformula "41"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0,0,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0,0,0"))
                                       (rule "allLeft" (formula "39") (inst "t=i_1"))
                                       (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "39") (term "1"))
                                       (rule "concrete_or_4" (formula "39"))
                                       (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "39") (term "1,0"))
                                       (rule "concrete_or_4" (formula "39") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                       (rule "leq_literals" (formula "39") (term "0,1"))
                                       (rule "concrete_and_2" (formula "39") (term "1"))
                                       (rule "concrete_or_4" (formula "39"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "39") (term "0"))
                                       (rule "concrete_and_2" (formula "39"))
                                       (rule "closeFalse" (formula "39"))
                                    )
                                    (branch
                                       (rule "andRight" (formula "56"))
                                       (branch
                                          (rule "allRight" (formula "56") (inst "sk=e_0"))
                                          (rule "orRight" (formula "56"))
                                          (rule "orRight" (formula "56"))
                                          (rule "allRight" (formula "58") (inst "sk=k_0"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "59"))
                                          (rule "eqSymm" (formula "61") (term "1,1,0,0"))
                                          (rule "eqSymm" (formula "61") (term "1,1,0,1"))
                                          (rule "eqSymm" (formula "58"))
                                          (rule "inEqSimp_leqRight" (formula "57"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "57"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "equiv_right" (formula "61"))
                                          (branch
                                             (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "45"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "nnf_ex2all" (formula "66"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_or_subsumption0" (formula "1") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "concrete_or_2" (formula "1") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "1") (term "1,0"))
                                             (rule "concrete_or_4" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "7"))
                                             (rule "concrete_not_1" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0,0"))
                                             (rule "concrete_or_2" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "1") (term "0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,0"))
                                             (rule "times_zero_1" (formula "6") (term "0"))
                                             (rule "leq_literals" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "30") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "48") (term "0,2,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "2") (term "1,1,0,0,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                             (rule "eqSymm" (formula "47"))
                                             (rule "close" (formula "65") (ifseqformula "47"))
                                          )
                                          (branch
                                             (rule "exLeft" (formula "1") (inst "sk=i_1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "2"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "45"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (rule "concrete_or_1" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "nnf_ex2all" (formula "66"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_or_subsumption0" (formula "1") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                             (rule "concrete_and_2" (formula "1") (term "0,0,0,0,0,0"))
                                             (rule "concrete_or_2" (formula "1") (term "0,0,0,0,0"))
                                             (rule "allLeft" (formula "1") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                             (rule "concrete_not_1" (formula "1") (term "1,0"))
                                             (rule "concrete_or_4" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "7"))
                                             (rule "concrete_not_1" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "1") (term "0,1,0"))
                                             (rule "concrete_and_2" (formula "1") (term "1,0"))
                                             (rule "concrete_or_4" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "leq_literals" (formula "1") (term "0,1"))
                                             (rule "concrete_and_2" (formula "1") (term "1"))
                                             (rule "concrete_or_4" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (rule "concrete_and_2" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch
                                          (rule "allRight" (formula "56") (inst "sk=j_0"))
                                          (rule "allRight" (formula "56") (inst "sk=i_1"))
                                          (rule "orRight" (formula "56"))
                                          (rule "orRight" (formula "56"))
                                          (rule "notRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "57"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "57"))
                                          (rule "orRight" (formula "57"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "mul_literals" (formula "4") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                          (rule "concrete_or_1" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "43"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                          (rule "concrete_or_1" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "42") (inst "t=j_0"))
                                          (rule "eqSymm" (formula "42") (term "0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                          (rule "concrete_and_2" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "42") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "42") (term "1,0,0,0,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "42") (term "0,1,0,0,0,0"))
                                          (rule "concrete_and_2" (formula "42") (term "1,0,0,0,0"))
                                          (rule "concrete_or_4" (formula "42") (term "0,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "42") (term "0,1,0,0,0"))
                                          (rule "concrete_and_2" (formula "42") (term "1,0,0,0"))
                                          (rule "concrete_or_4" (formula "42") (term "0,0,0"))
                                          (rule "allLeft" (formula "42") (inst "t=i_1"))
                                          (rule "eqClose" (formula "42") (term "0,1"))
                                          (rule "concrete_not_1" (formula "42") (term "1"))
                                          (rule "concrete_or_4" (formula "42"))
                                          (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                          (rule "leq_literals" (formula "42") (term "0,1"))
                                          (rule "concrete_and_2" (formula "42") (term "1"))
                                          (rule "concrete_or_4" (formula "42"))
                                          (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "42") (term "0,1"))
                                          (rule "concrete_and_2" (formula "42") (term "1"))
                                          (rule "concrete_or_4" (formula "42"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "42"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (rule "concrete_and_2" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "56") (inst "sk=f_0"))
                                    (rule "allRight" (formula "56") (inst "sk=o_0"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "59"))
                                    (rule "ifthenelse_false" (formula "1") (term "0"))
                                    (rule "close" (formula "61") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (k_1 = null)"
                           (rule "false_right" (formula "56"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "close" (formula "55") (ifseqformula "1"))
                        )
                     )
                     (branch "Null Reference (k = null)"
                        (rule "false_right" (formula "56"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "close" (formula "55") (ifseqformula "1"))
                     )
                  )
                  (branch "if x false"
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "55"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "38"))
                     (rule "simplifyUpdate1" (formula "38") (term "1"))
                     (rule "applyOnPV" (formula "38") (term "0"))
                     (rule "ifthenelse_concrete3" (formula "38"))
                     (rule "boolean_not_equal_2" (formula "38") (term "1"))
                     (rule "concrete_or_4" (formula "38"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "tryEmpty" (formula "55") (term "1"))
                     (rule "emptyModality" (formula "55") (term "1"))
                     (rule "applyOnRigidFormula" (formula "55"))
                     (rule "simplifyUpdate2" (formula "55") (term "1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0"))
                     (rule "simplifyUpdate2" (formula "55") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,0"))
                     (rule "eqClose" (formula "55") (term "1,0"))
                     (rule "concrete_and_3" (formula "55") (term "0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "55") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "1,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,1,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "55") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,0,1,0,0,1"))
                     (rule "applyOnPV" (formula "55") (term "0,0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1"))
                     (rule "eqClose" (formula "55") (term "1,0,0,1"))
                     (rule "concrete_or_3" (formula "55") (term "0,0,1"))
                     (rule "applyOnRigidTerm" (formula "55") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "1,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "1,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate2" (formula "55") (term "0,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "55") (term "1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "0,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,0,0,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,1,1,1,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "0,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "55") (term "1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "1,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "55") (term "2,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "55") (term "0,1,1,1,0,0,0,0,1,0,1,0,0,1,1,0"))
                     (rule "eq_eq" (formula "55") (term "1,0,1,0,0,1,1,0"))
                     (rule "concrete_or_3" (formula "55") (term "0,1,0,0,1,1,0"))
                     (rule "mod_axiom" (formula "55") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "55") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "55") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "55") (term "0,0"))
                     (rule "mul_literals" (formula "55") (term "1,0,0"))
                     (rule "elimGcdEq" (formula "55") (term "0,0") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=div(add(Z(7(4(6(3(8(4(7(4(1(2(#))))))))))),
        int::select(heap, self, Keyserver::$count)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "eqClose" (formula "55") (term "0,0,0,0,0"))
                     (rule "concrete_and_1" (formula "55") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,0"))
                     (rule "add_literals" (formula "55") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "55") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "55") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "55") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "55") (term "0,1,0,0,0"))
                     (rule "add_literals" (formula "55") (term "0,0,0,0,0"))
                     (rule "equal_literals" (formula "55") (term "0,1,0,0"))
                     (rule "concrete_and_2" (formula "55") (term "1,0,0"))
                     (rule "qeq_literals" (formula "55") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "55") (term "0,0,0"))
                     (rule "leq_literals" (formula "55") (term "0,0,0"))
                     (rule "ifthenelse_true_for" (formula "55") (term "0,0"))
                     (rule "concrete_and_2" (formula "55") (term "0"))
                     (rule "concrete_and_2" (formula "55"))
                     (rule "false_right" (formula "55"))
                     (rule "allLeft" (formula "32") (inst "t=result"))
                     (rule "eqSymm" (formula "32") (term "0,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0"))
                     (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "37"))
                     (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0,0,0,0") (ifseqformula "34"))
                     (rule "qeq_literals" (formula "32") (term "0,1,0,0,0,0"))
                     (rule "concrete_and_2" (formula "32") (term "1,0,0,0,0"))
                     (rule "concrete_or_4" (formula "32") (term "0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0") (ifseqformula "36"))
                     (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,1,0,0,0"))
                     (rule "leq_literals" (formula "32") (term "0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "32") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "32") (term "0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "32") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "32") (term "0,0,0"))
                     (rule "allLeft" (formula "32") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "16"))
                     (rule "concrete_not_1" (formula "32") (term "1"))
                     (rule "concrete_or_4" (formula "32"))
                     (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "32") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "32") (term "0,0"))
                     (rule "concrete_or_2" (formula "32") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "32") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "32") (term "0,0"))
                     (rule "concrete_and_2" (formula "32") (term "0"))
                     (rule "concrete_or_2" (formula "32"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "32"))
                     (rule "mul_literals" (formula "2") (term "0,0"))
                     (rule "add_zero_left" (formula "2") (term "0"))
                     (rule "allLeft" (formula "34") (inst "t=i_0"))
                     (rule "eqSymm" (formula "34") (term "0,1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "34") (term "1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,0"))
                     (rule "applyEq" (formula "34") (term "1,0,1,0") (ifseqformula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,0,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0,1,0,0,0"))
                     (rule "leq_literals" (formula "34") (term "0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "34") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0,0,0,0") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "34") (term "0,1,0,0,0,0"))
                     (rule "concrete_and_2" (formula "34") (term "1,0,0,0,0"))
                     (rule "concrete_or_4" (formula "34") (term "0,0,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "34") (term "1,0,0,0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "34") (term "0,1,0,0,0"))
                     (rule "concrete_and_2" (formula "34") (term "1,0,0,0"))
                     (rule "concrete_or_4" (formula "34") (term "0,0,0"))
                     (rule "allLeft" (formula "34") (inst "t=result"))
                     (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "40"))
                     (rule "concrete_not_1" (formula "34") (term "1"))
                     (rule "concrete_or_4" (formula "34"))
                     (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "34") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "34") (term "0,0"))
                     (rule "concrete_or_2" (formula "34") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "37"))
                     (rule "qeq_literals" (formula "34") (term "0,0"))
                     (rule "concrete_and_2" (formula "34") (term "0"))
                     (rule "concrete_or_2" (formula "34"))
                     (rule "inEqSimp_antiSymm" (formula "34") (ifseqformula "32"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq1" (formula "35"))
                     (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "1,0"))
                     (rule "times_zero_1" (formula "35") (term "0"))
                     (rule "leq_literals" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "38") (term "0,2,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "33"))
                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "32"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "31"))
                     (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "1,0"))
                     (rule "times_zero_1" (formula "31") (term "0"))
                     (rule "qeq_literals" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "31"))
                     (rule "close" (formula "35") (ifseqformula "19"))
                  )
               )
               (branch "Null Reference (x_arr_1 = null)"
                  (rule "false_right" (formula "55"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "52") (ifseqformula "1"))
               )
               (branch "Index Out of Bounds (x_arr_1 != null, but pos Out of Bounds!)"
                  (rule "false_right" (formula "55"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate2" (formula "1") (term "1"))
                  (rule "applyOnRigidFormula" (formula "39"))
                  (rule "applyOnPV" (formula "39") (term "0"))
                  (rule "simplifyUpdate1" (formula "39") (term "1"))
                  (rule "applyOnRigidFormula" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "1") (term "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                  (rule "applyOnPV" (formula "1") (term "0,1"))
                  (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                  (rule "applyOnPV" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "29"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "35"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0"))
                  (rule "concrete_or_2" (formula "1"))
                  (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "1"))
                  (rule "leq_literals" (formula "34") (term "0"))
                  (rule "concrete_or_1" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
         (branch "Null Reference (x_arr = null)"
            (rule "false_right" (formula "54"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "49") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr != null, but pos Out of Bounds!)"
            (rule "false_right" (formula "54"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "38"))
            (rule "applyOnPV" (formula "38") (term "0"))
            (rule "simplifyUpdate1" (formula "38") (term "1"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "34"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "1"))
            (rule "leq_literals" (formula "33") (term "0"))
            (rule "concrete_or_1" (formula "33"))
            (rule "true_left" (formula "33"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (rule "concrete_and_2" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
)
(branch "Exceptional Post (posOfId)"
   (rule "simplifyUpdate2" (formula "43"))
   (rule "simplifyUpdate2" (formula "26"))
   (rule "expand_inInt" (formula "26") (term "1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,1,0,1,0,1,1,1"))
   (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,1,0,1,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "26") (term "1"))
   (rule "andLeft" (formula "26"))
   (rule "simplifyUpdate2" (formula "26"))
   (rule "andLeft" (formula "27"))
   (rule "simplifyUpdate2" (formula "28"))
   (rule "andLeft" (formula "26"))
   (rule "andLeft" (formula "28"))
   (rule "simplifyUpdate2" (formula "28"))
   (rule "notLeft" (formula "26"))
   (rule "close" (formula "30") (ifseqformula "29"))
)
(branch "Pre (posOfId)"
   (rule "expand_inInt" (formula "42") (term "1,1,1,1"))
   (rule "simplifyUpdate2" (formula "42"))
   (rule "replace_int_MIN" (formula "42") (term "0,1,1,1,1,1"))
   (rule "replace_int_MAX" (formula "42") (term "1,0,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "42") (term "1"))
   (rule "applyOnRigidFormula" (formula "42"))
   (rule "simplifyUpdate2" (formula "42") (term "0"))
   (rule "applyOnRigidFormula" (formula "42") (term "1"))
   (rule "simplifyUpdate2" (formula "42") (term "0,1"))
   (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "42") (term "1"))
   (rule "applyOnRigidFormula" (formula "42") (term "1"))
   (rule "applyOnRigidFormula" (formula "42") (term "0,1"))
   (rule "applyOnPV" (formula "42") (term "0,0,1"))
   (rule "simplifyUpdate1" (formula "42") (term "1,0,1"))
   (rule "replace_known_left" (formula "42") (term "0,1") (ifseqformula "4"))
   (rule "concrete_and_1" (formula "42") (term "1"))
   (rule "applyOnRigidFormula" (formula "42") (term "1"))
   (rule "applyOnPV" (formula "42") (term "1,1"))
   (rule "simplifyUpdate1" (formula "42") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "1"))
   (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "5"))
   (rule "concrete_and_3" (formula "42"))
   (rule "Class_invariant_axiom_for_Keyserver" (formula "42") (inst "j=j") (inst "i=i") (ifseqformula "3"))
   (rule "expand_inInt" (formula "42") (term "1,0,0,0,1"))
   (rule "expand_inInt" (formula "42") (term "1,0,0,0,0,1"))
   (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "42") (term "1,0,1,0,0,0,0,1"))
   (rule "replace_int_MIN" (formula "42") (term "0,1,1,0,0,0,0,1"))
   (rule "eqSymm" (formula "42") (term "0,1,0,0,1"))
   (rule "eqSymm" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,0,1,0,0,0,0,0,0,0,0"))
   (rule "eqSymm" (formula "42") (term "0,1,1,0,0,0,0,0,0,0,0"))
   (rule "replace_known_left" (formula "42") (term "0,1,0,0,0,0") (ifseqformula "16"))
   (rule "concrete_and_1" (formula "42") (term "1,0,0,0,0"))
   (rule "replace_known_left" (formula "42") (term "1,0,0,0,0") (ifseqformula "17"))
   (rule "concrete_and_3" (formula "42") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "37"))
   (rule "concrete_not_2" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "36"))
   (rule "concrete_not_2" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_3" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "35"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "40"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "39"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "26"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "27"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "28"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "31"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "29"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "30"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "32"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "33"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0") (ifseqformula "34"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0") (ifseqformula "38"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0,0") (ifseqformula "35"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0,0") (ifseqformula "36"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "37"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,1,0,0,0,0") (ifseqformula "39"))
   (rule "concrete_not_2" (formula "42") (term "1,0,0,0,0"))
   (rule "concrete_and_3" (formula "42") (term "0,0,0,0"))
   (rule "replace_known_right" (formula "42") (term "0,0,0,0,0") (ifseqformula "40"))
   (rule "concrete_not_2" (formula "42") (term "0,0,0,0"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0"))
   (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "18"))
   (rule "concrete_and_1" (formula "42") (term "0,0,0"))
   (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "19"))
   (rule "concrete_and_1" (formula "42") (term "0,0"))
   (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "21"))
   (rule "concrete_and_1" (formula "42") (term "0"))
   (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "24"))
   (rule "concrete_and_3" (formula "42") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "42") (term "0,1,0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "42") (term "0"))
   (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "23"))
   (rule "concrete_and_1" (formula "42"))
   (rule "allRight" (formula "42") (inst "sk=j_0"))
   (rule "allRight" (formula "42") (inst "sk=i_1"))
   (rule "impRight" (formula "42"))
   (rule "andLeft" (formula "1"))
   (rule "notRight" (formula "44"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "2"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
   (rule "leq_literals" (formula "6") (term "0"))
   (rule "concrete_or_1" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
   (rule "mul_literals" (formula "3") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "add_literals" (formula "3") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "3"))
   (rule "leq_literals" (formula "6") (term "0"))
   (rule "concrete_or_1" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "31"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1"))
   (rule "polySimp_rightDist" (formula "5") (term "1"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
   (rule "mul_literals" (formula "5") (term "0,1"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "28"))
   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
   (rule "mul_literals" (formula "5") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "5") (term "0"))
   (rule "add_literals" (formula "5") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "5"))
   (rule "leq_literals" (formula "8") (term "0"))
   (rule "concrete_or_1" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
   (rule "mul_literals" (formula "4") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "add_literals" (formula "4") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
   (rule "leq_literals" (formula "3") (term "0"))
   (rule "concrete_or_1" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "allLeft" (formula "33") (inst "t=j_0"))
   (rule "eqSymm" (formula "33") (term "0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "33") (term "1,0,0,0"))
   (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "1"))
   (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "7"))
   (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "33") (term "1,1,0,0,1,0,0,0"))
   (rule "times_zero_1" (formula "33") (term "1,0,0,1,0,0,0"))
   (rule "add_zero_right" (formula "33") (term "0,0,1,0,0,0"))
   (rule "leq_literals" (formula "33") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "33") (term "0,0,0"))
   (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0,0,0") (ifseqformula "5"))
   (rule "qeq_literals" (formula "33") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "33") (term "0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0,0") (ifseqformula "8"))
   (rule "qeq_literals" (formula "33") (term "0,1,0,0,0"))
   (rule "concrete_and_2" (formula "33") (term "1,0,0,0"))
   (rule "concrete_or_4" (formula "33") (term "0,0,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "1,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "45"))
   (rule "concrete_or_2" (formula "21"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "50"))
   (rule "concrete_or_2" (formula "24"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "49"))
   (rule "concrete_or_2" (formula "23"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "53"))
   (rule "concrete_or_2" (formula "30"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,0") (ifseqformula "9"))
   (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "50"))
   (rule "concrete_or_2" (formula "28"))
   (rule "allLeft" (formula "38") (inst "t=i_1"))
   (rule "eqClose" (formula "38") (term "0,1"))
   (rule "concrete_not_1" (formula "38") (term "1"))
   (rule "concrete_or_4" (formula "38"))
   (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "38") (term "0,0,0"))
   (rule "concrete_and_2" (formula "38") (term "0,0"))
   (rule "concrete_or_2" (formula "38") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "4"))
   (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
   (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "38") (term "0,0,1"))
   (rule "leq_literals" (formula "38") (term "0,1"))
   (rule "concrete_and_2" (formula "38") (term "1"))
   (rule "concrete_or_4" (formula "38"))
   (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "38"))
   (rule "qeq_literals" (formula "3") (term "0"))
   (rule "concrete_and_2" (formula "3"))
   (rule "closeFalse" (formula "3"))
)
)
}
